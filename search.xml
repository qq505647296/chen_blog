<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法与算法复杂度</title>
      <link href="/2024/10/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E4%B8%8E%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
      <url>/2024/10/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E4%B8%8E%E7%AE%97%E6%B3%95%E5%A4%8D%E6%9D%82%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>为了定义某问题，必须给出一系列的运算规则，这一系列的运算规则是有限的，表达了求解问题方法和步骤，这就是算法。</p><p>一个算法可以用自然语言描述，也可以用高级程序设计语言描述，也可以用伪代码描述。本书采用C语言对算法进行描述。</p><h2 id="基本特征"><a href="#基本特征" class="headerlink" title="基本特征"></a>基本特征</h2><p><strong>有穷性</strong>，算法的执行必须在有限步内结束。</p><blockquote><p><strong>确定型</strong>，算法的每一步骤必须确定无二义性的。</p><p><strong>输入</strong>，算法可以有0个或多个输入。</p><p><strong>输出</strong>，算法一定有输出结果。</p><p><strong>可行性</strong>：算法中的运算必须是可以实现的</p></blockquote><h1 id="算法复杂性"><a href="#算法复杂性" class="headerlink" title="算法复杂性"></a>算法复杂性</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>一个算法的优劣主要从算法的执行时间和所需要占用的储存空间两个方面衡量。</p><p>对于算法的时间复杂性，采用算法执行过程中其基本操作的执行次数，称为计算量来度量</p><blockquote><p><strong>算法中基本操作的执行时间和所需要占用的存储空间两个方面衡量</strong></p><p><strong>对于算法中的时间复杂度，采用算法执行过程中其基本操作的执行次数，称为计算量来度量</strong></p></blockquote><p>算法中基本操作的执行次数一般是与问题规则有关的，对于结点个数为n的数据处理问题，用T(n)来表示算法基本操作的执行次数。</p><h2 id="因素"><a href="#因素" class="headerlink" title="因素"></a>因素</h2><ol><li>输入数据项数目</li><li>输入数据分布</li><li>实现算法</li><li>使用数据结构</li></ol><h3 id="评价"><a href="#评价" class="headerlink" title="评价"></a>评价</h3><p>(1)合理选择一个或几个操作作为“标准操作”。</p><p>(2)计算量=给定输入下执行标准操作的次数。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pymysql操作</title>
      <link href="/2024/10/04/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/pymysql/pymysql_1/"/>
      <url>/2024/10/04/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/pymysql/pymysql_1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、查询操作"><a href="#一、查询操作" class="headerlink" title="一、查询操作"></a>一、查询操作</h1><h2 id="1-导入pymysql"><a href="#1-导入pymysql" class="headerlink" title="1.导入pymysql"></a>1.导入pymysql</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br></pre></td></tr></table></figure><h2 id="2-创建连接对象"><a href="#2-创建连接对象" class="headerlink" title="2.创建连接对象"></a>2.创建连接对象</h2><p>调用pymysql模块中的connect()函数来创建连接对象，代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn=connect(host,port,user,password,database,charset)</span><br></pre></td></tr></table></figure><blockquote><p>host:连接的mysql主机</p><p>port:连接的mysql端口</p><p>user:连接的用户名</p><p>password:连接的密码</p><p>database:连接的数据库</p><p>charset:采用的编码方式，推荐utf-8</p></blockquote><p><strong>连接对象说明</strong></p><ul><li>关闭连接 conn.close()</li><li>提交数据 conn.commit()</li><li>撤销数据 conn.rollback()</li></ul><h2 id="3-获取游标对象"><a href="#3-获取游标对象" class="headerlink" title="3.获取游标对象"></a>3.获取游标对象</h2><p>获取游标对象的目的就是执行SQL语句，完成对数据库中的增、删、改、查操作。代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur = conn.cursor()</span><br></pre></td></tr></table></figure><p><strong>游标操作说明</strong></p><ul><li>使用游标执行SQL语句：execute(opertion [parameters])执行SQL语句，返回受影响的行数，主要用于执行insert、update、delect、select等语句。</li><li>获取查询结果集中的一条数据:cur.fetchone()返回一个元组,如(1,’张三’)</li><li>获取查询结果集中的所有数据:cur.fetchall()返回一个元组,如((1,’张三’),(2,’李四’))</li><li>关闭游标:cur.close(),表示和数据库的操作完成</li></ul><h2 id="4-定义SQL语句"><a href="#4-定义SQL语句" class="headerlink" title="4.定义SQL语句"></a>4.定义SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql = <span class="string">&quot;select * from students&quot;</span></span><br></pre></td></tr></table></figure><h2 id="5-执行SQL语句"><a href="#5-执行SQL语句" class="headerlink" title="5.执行SQL语句"></a>5.执行SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">row_count = cursor.execute(sql)</span><br></pre></td></tr></table></figure><p>返回row_count的值为执行sql的行数</p><h2 id="6-读取数据表中的数据"><a href="#6-读取数据表中的数据" class="headerlink" title="6.读取数据表中的数据"></a>6.读取数据表中的数据</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(cursor.fetchall())</span><br></pre></td></tr></table></figure><h2 id="7-关闭游标对象和连接对象"><a href="#7-关闭游标对象和连接对象" class="headerlink" title="7.关闭游标对象和连接对象"></a>7.关闭游标对象和连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><strong>整体语句:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">&quot;select * from students&quot;</span></span><br><span class="line"></span><br><span class="line">row_count = cursor.execute(sql)</span><br><span class="line"></span><br><span class="line"><span class="comment">#这是获取表中第一个数据</span></span><br><span class="line">rest=cursor.fetchone()</span><br><span class="line"><span class="built_in">print</span>(rest)</span><br><span class="line"></span><br><span class="line"><span class="comment">#这是查询表中所有的数据</span></span><br><span class="line">rest=cursor.fetchall()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> rest:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h1 id="二、增加操作"><a href="#二、增加操作" class="headerlink" title="二、增加操作"></a>二、增加操作</h1><h2 id="1-导入pymysql模块"><a href="#1-导入pymysql模块" class="headerlink" title="1.导入pymysql模块"></a>1.导入pymysql模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br></pre></td></tr></table></figure><h2 id="2-创建连接对象-1"><a href="#2-创建连接对象-1" class="headerlink" title="2.创建连接对象"></a>2.创建连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-获取游标对象-1"><a href="#3-获取游标对象-1" class="headerlink" title="3.获取游标对象"></a>3.获取游标对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur = conn.cursor()</span><br></pre></td></tr></table></figure><h2 id="4-定义SQL语句-1"><a href="#4-定义SQL语句-1" class="headerlink" title="4.定义SQL语句"></a>4.定义SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql = <span class="string">&quot;insert into studebts valuse (null, &#x27;赵云&#x27;, 22, &#x27;male&#x27;, 98.0, 3)&quot;</span></span><br></pre></td></tr></table></figure><h2 id="5-执行SQL语句-1"><a href="#5-执行SQL语句-1" class="headerlink" title="5.执行SQL语句"></a>5.执行SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">row_count = cursor.execute(sql)</span><br><span class="line">conn.commit() <span class="comment">#对SQL增删改操作必须要提交数据</span></span><br></pre></td></tr></table></figure><h2 id="6-关闭游标对象和连接对象"><a href="#6-关闭游标对象和连接对象" class="headerlink" title="6.关闭游标对象和连接对象"></a>6.关闭游标对象和连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><strong>整体语句:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">sql = <span class="string">&quot;insert into studebts valuse (null, &#x27;赵云&#x27;, 22, &#x27;male&#x27;, 98.0, 3)&quot;</span></span><br><span class="line">    </span><br><span class="line">    row_count = cursor.execute(sql)</span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback() <span class="comment">#异常处理</span></span><br><span class="line">    </span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、删除操作"><a href="#三、删除操作" class="headerlink" title="三、删除操作"></a>三、删除操作</h1><h2 id="1-导入pymysql模块-1"><a href="#1-导入pymysql模块-1" class="headerlink" title="1.导入pymysql模块"></a>1.导入pymysql模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br></pre></td></tr></table></figure><h2 id="2-创建连接对象-2"><a href="#2-创建连接对象-2" class="headerlink" title="2.创建连接对象"></a>2.创建连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-获取游标对象-2"><a href="#3-获取游标对象-2" class="headerlink" title="3.获取游标对象"></a>3.获取游标对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur = conn.cursor()</span><br></pre></td></tr></table></figure><h2 id="4-定义SQL语句-2"><a href="#4-定义SQL语句-2" class="headerlink" title="4.定义SQL语句"></a>4.定义SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql = <span class="string">&quot;delect from students where id = 6&quot;</span></span><br></pre></td></tr></table></figure><h2 id="5-执行SQL语句-2"><a href="#5-执行SQL语句-2" class="headerlink" title="5.执行SQL语句"></a>5.执行SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">row_count = cursor.execute(sql)</span><br><span class="line">conn.commit() <span class="comment">#对SQL增删改操作必须要提交数据</span></span><br></pre></td></tr></table></figure><h2 id="6-关闭游标对象和连接对象-1"><a href="#6-关闭游标对象和连接对象-1" class="headerlink" title="6.关闭游标对象和连接对象"></a>6.关闭游标对象和连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><strong>整体语句:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">sql = <span class="string">&quot;delect from students where id = 6&quot;</span></span><br><span class="line">    </span><br><span class="line">    row_count = cursor.execute(sql)</span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback() <span class="comment">#异常处理</span></span><br><span class="line">    </span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四、更改操作"><a href="#四、更改操作" class="headerlink" title="四、更改操作"></a>四、更改操作</h1><h2 id="1-导入pymysql模块-2"><a href="#1-导入pymysql模块-2" class="headerlink" title="1.导入pymysql模块"></a>1.导入pymysql模块</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br></pre></td></tr></table></figure><h2 id="2-创建连接对象-3"><a href="#2-创建连接对象-3" class="headerlink" title="2.创建连接对象"></a>2.创建连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-获取游标对象-3"><a href="#3-获取游标对象-3" class="headerlink" title="3.获取游标对象"></a>3.获取游标对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur = conn.cursor()</span><br></pre></td></tr></table></figure><h2 id="4-定义SQL语句-3"><a href="#4-定义SQL语句-3" class="headerlink" title="4.定义SQL语句"></a>4.定义SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql = <span class="string">&quot;update students set name = &#x27;小乔&#x27; where id = 5&quot;</span></span><br></pre></td></tr></table></figure><h2 id="5-执行SQL语句-3"><a href="#5-执行SQL语句-3" class="headerlink" title="5.执行SQL语句"></a>5.执行SQL语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">row_count = cursor.execute(sql)</span><br><span class="line">conn.commit() <span class="comment">#对SQL增删改操作必须要提交数据</span></span><br></pre></td></tr></table></figure><h2 id="6-关闭游标对象和连接对象-2"><a href="#6-关闭游标对象和连接对象-2" class="headerlink" title="6.关闭游标对象和连接对象"></a>6.关闭游标对象和连接对象</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p><strong>整体语句:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn=connect(host=<span class="string">&#x27;&#x27;</span>,port=<span class="string">&#x27;&#x27;</span>,user=<span class="string">&#x27;&#x27;</span>,password=<span class="string">&#x27;&#x27;</span>,database=<span class="string">&#x27;&#x27;</span>,charset=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">sql = <span class="string">&quot;update students set name = &#x27;小乔&#x27; where id = 5&quot;</span></span><br><span class="line">    </span><br><span class="line">    row_count = cursor.execute(sql)</span><br><span class="line">conn.commit()</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    conn.rollback() <span class="comment">#异常处理</span></span><br><span class="line">    </span><br><span class="line">cursor.close()</span><br><span class="line">conn.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据库操作 </category>
          
          <category> pymysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql数据清洗</title>
      <link href="/2024/10/04/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/mysql-data/"/>
      <url>/2024/10/04/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/mysql-data/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库清洗"><a href="#数据库清洗" class="headerlink" title="数据库清洗"></a>数据库清洗</h1><h2 id="1-缺失数据简介"><a href="#1-缺失数据简介" class="headerlink" title="1.缺失数据简介"></a>1.缺失数据简介</h2><p>很多数据集都存在缺失值。缺失值存在多重表现形式</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据库操作 </category>
          
          <category> 数据清洗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据清洗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql数据查重</title>
      <link href="/2024/10/04/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/mysql-chachong/"/>
      <url>/2024/10/04/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/mysql-chachong/</url>
      
        <content type="html"><![CDATA[<p>在日常数据查询中，多有需要进行数据去重的查询，或删除重复数据的情况，以下罗列集中数据去重查询：</p><p>1、根据全部字段的去重查询：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct * from table</span><br></pre></td></tr></table></figure><br>2、根据某些字段的去重查询（不考虑查询其他字段）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct c_name,c_year,c_month from table</span><br></pre></td></tr></table></figure><p>或者：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select c_name,c_year,c_month from table </span><br><span class="line">group by c_name,c_year,c_month</span><br></pre></td></tr></table></figure><br>3、根据某些字段的去重查询（考虑查询其他字段）</p><p>如果其他字段所有结果值都想保留，建议直接用group by 和group_concat函数即可<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select c_name,c_year,c_month,group_concat(&#x27;,&#x27;) c_values from table</span><br><span class="line">group by c_name,c_year,c_month</span><br></pre></td></tr></table></figure><br>4、根据某些字段的去重查询，查询重复项以外的全部数据</p><p>一般去重是根据时间、ID等，如时间最新/ID最大/value最大等等；</p><p>此处示例重复数据中ID小的是原始项，ID大的是重复项；</p><p>如果要看新的数据，则将以下的 min 改为 max ，也可根据自身情况调整其他字段。<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">where c_id in</span><br><span class="line">(select min(c_id) minid from A</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>或者：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">where c_id not in</span><br><span class="line">(select min(c_id) minid from tableA</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">having count(*)&gt;1</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>5、根据某些字段的去重查询，查询重复项（不包含原始项，只查询重复项）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">where c_id not in</span><br><span class="line">(select min(c_id) minid from tableA</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>6、根据某些字段，查询出所有重复的数据（包含原始项和重复项）<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select * from A</span><br><span class="line">right join</span><br><span class="line">(select c_name,c_year,c_month from table A</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">having count(*)&gt;1) b</span><br><span class="line">on a.c_name=b.c_name</span><br><span class="line">and a.c_year=b.c_year</span><br><span class="line">and a.c_month=b.c_month</span><br></pre></td></tr></table></figure><br>7、根据某些字段，删除重复的数据（示例ID最小的是要保留的数据，其他都是不要的）</p><p>从思路上来讲，应该（实际上会出错）：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">delete from A</span><br><span class="line">where c_id not in</span><br><span class="line">(select min(c_id) minid from tableA</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>但是此时会报错： You can’t specify target table for update in FROM clause</p><p>原因是：在同一张表，不能先查询某些值，再进行update操作</p><p>解决方法是：需要先把查询处理的id结果，as 一张表，再做delete操作，调整如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">delete from tableA</span><br><span class="line">where c_id in (</span><br><span class="line">select * from</span><br><span class="line">(select c_id from tableA</span><br><span class="line">where c_id not in</span><br><span class="line">(select min(c_id) from tableA</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">)) a</span><br><span class="line">)</span><br></pre></td></tr></table></figure><br>或者：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">delete from tableA</span><br><span class="line">where c_id in(</span><br><span class="line">select * from (</span><br><span class="line">select c_id from tableA</span><br><span class="line">where c_id in</span><br><span class="line">(select max(c_id) from tableA</span><br><span class="line">group by c_name,c_year,c_month</span><br><span class="line">having count(*)&gt;1</span><br><span class="line">)) a</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据库操作 </category>
          
          <category> 数据清洗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据清洗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql范式</title>
      <link href="/2024/10/04/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-fanshi/"/>
      <url>/2024/10/04/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-fanshi/</url>
      
        <content type="html"><![CDATA[<h1 id="三范式"><a href="#三范式" class="headerlink" title="三范式"></a>三范式</h1><p><strong>(一)概念</strong></p><p>设计关系型数据库时，遵行不同的规范要求，设计出合理的关系型数据库，这些数据库被称为不同的范式，范式越高，冗余越小。</p><p><strong>(二)数据冗余</strong></p><p>数据之间的重复情况</p><p><strong>(三)范式划分</strong></p><p>一般存在六种范式：</p><p><strong>(1) 第一范式</strong></p><p><strong>(2) 第二范式</strong></p><p><strong>(3) 第三范式</strong></p><p>(4) 巴斯-科德范式</p><p>(5) 第四范式</p><p>(6) 第五范式(完美范式)</p><blockquote><p>日常生活中一般只需满足三范式即可</p></blockquote><h2 id="一、第一范式"><a href="#一、第一范式" class="headerlink" title="一、第一范式"></a>一、第一范式</h2><p>强调字段的完整型：即一个字段不能分成其他几个字段</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/c4e16bf561d38aa74d0990169d40f71f.png" alt="在这里插入图片描述"></p><h2 id="二、第二范式"><a href="#二、第二范式" class="headerlink" title="二、第二范式"></a>二、第二范式</h2><p>满足一范式的同时，另外包含两个要求</p><ul><li>一是表中必须有一个主键</li><li>二是非主键字段必须完全依赖主键，而不是只依赖主键的一部分</li></ul><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/2377e20da7cf0051503cbc2e386ab80c.png" alt="在这里插入图片描述"></p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/8ae45b717b3f3125b34ee6da2433a3e6.png" alt="在这里插入图片描述"></p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/a39ae3d467abdea09d4a0efb16f8b293.png" alt="在这里插入图片描述"></p><h2 id="三、第三范式"><a href="#三、第三范式" class="headerlink" title="三、第三范式"></a>三、第三范式</h2><p>满足二范式的同时，要求非主键字段必须直接依赖于非主键字段B，非主键字段B依赖于主键的情况。</p><p>即存在传递依赖</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/3a3e14be6c1b9c41d71a3a45ffaeba19.png" alt="在这里插入图片描述"></p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/3338852ba30957cf0d1570b59357f771.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js常用函数</title>
      <link href="/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
      <url>/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="打印函数"><a href="#打印函数" class="headerlink" title="打印函数"></a>打印函数</h1><h2 id="文字输出"><a href="#文字输出" class="headerlink" title="文字输出"></a>文字输出</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">&#x27;My name is LiHua&#x27;</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(s)</span><br></pre></td></tr></table></figure><h2 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s)</span><br></pre></td></tr></table></figure><h1 id="弹出函数"><a href="#弹出函数" class="headerlink" title="弹出函数"></a>弹出函数</h1><h2 id="警告框"><a href="#警告框" class="headerlink" title="警告框"></a>警告框</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;中二病也要谈恋爱&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="确认框"><a href="#确认框" class="headerlink" title="确认框"></a>确认框</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="title function_">confirm</span>(<span class="string">&quot;你喜欢我吗？&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(flag);</span><br></pre></td></tr></table></figure><h2 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a>输入框</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="title function_">prompt</span>(<span class="string">&quot;你喜欢我吗？&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(flag);</span><br></pre></td></tr></table></figure><h1 id="代码执行函数"><a href="#代码执行函数" class="headerlink" title="代码执行函数"></a>代码执行函数</h1><h2 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h2><p>将字符串当作js代码输出；</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s = &quot;document.write(&quot;My name is AJEST&quot;)&quot;;</span><br><span class="line">eval(s);</span><br></pre></td></tr></table></figure><h1 id="字符串截取函数"><a href="#字符串截取函数" class="headerlink" title="字符串截取函数"></a>字符串截取函数</h1><h2 id="substr"><a href="#substr" class="headerlink" title="substr()"></a>substr()</h2>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js运算符</title>
      <link href="/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="一、算数运算符"><a href="#一、算数运算符" class="headerlink" title="一、算数运算符"></a>一、算数运算符</h1><div class="table-container"><table><thead><tr><th>算数运算符</th><th>含义</th></tr></thead><tbody><tr><td>+</td><td>加法</td></tr><tr><td>-</td><td>减法</td></tr><tr><td>*</td><td>乘法</td></tr><tr><td>/</td><td>除法</td></tr><tr><td>%</td><td>求余数</td></tr><tr><td>++</td><td>自增</td></tr><tr><td>—</td><td>自减</td></tr></tbody></table></div><blockquote><p><strong>注意</strong>：</p><p>a++与++a：a++是先使用a，再自加；++a是先自加，再使用。</p></blockquote><h1 id="二、赋值运算符"><a href="#二、赋值运算符" class="headerlink" title="二、赋值运算符"></a>二、赋值运算符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line">a+=<span class="number">3</span></span><br></pre></td></tr></table></figure><h1 id="三、关系运算符"><a href="#三、关系运算符" class="headerlink" title="三、关系运算符"></a>三、关系运算符</h1><div class="table-container"><table><thead><tr><th>关系运算符</th><th>说明</th></tr></thead><tbody><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>==</td><td>等于</td></tr><tr><td>!=</td><td>不等于</td></tr><tr><td>===</td><td>全等</td></tr><tr><td>!==</td><td>不全等</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js数据类型</title>
      <link href="/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/js%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/js%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="原始类型"><a href="#原始类型" class="headerlink" title="原始类型"></a>原始类型</h1><h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><p>Javascript 没有整型和浮点型，只有一种数字类型，即number类型。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h2 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h2><p>表示一系列文本字符数据。由Unicode字符、数字、标点组成的序列。首尾由一对单引号和双引号。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;\u6B22\u8FCEl来到\&quot;Javascript 世界\&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h2><p>布尔类型，仅有两个值:true和false.true用1表达，flase用0表达。</p><h2 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h2><p>未定义，只做声明，未初始化</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python web基础</title>
      <link href="/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/%E9%B8%AD%E5%AD%90%E6%A8%A1%E5%9E%8B/"/>
      <url>/2024/09/26/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E9%AB%98%E7%BA%A7%E7%BC%96%E7%A8%8B/%E9%B8%AD%E5%AD%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="鸭子类型与多态"><a href="#鸭子类型与多态" class="headerlink" title="鸭子类型与多态"></a>鸭子类型与多态</h1><h2 id="鸭子模型"><a href="#鸭子模型" class="headerlink" title="鸭子模型"></a>鸭子模型</h2><p>多态概念适用于JAVA与C#这一类强类型语言中，而python崇尚鸭子模型。</p><p>动态语言调用实例时不检查类型，只要方法存在，参数正确，就可以调用，这就是”鸭子类型”，它并不要求严格的继承体系，一个对象只要”看起来想鸭子，走起路来像鸭子”，就可以看作鸭子。</p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>定义时的类型和运行时的类型不一样，就称为多态。</p><h1 id="抽象基类-abc模块"><a href="#抽象基类-abc模块" class="headerlink" title="抽象基类(abc模块)"></a>抽象基类(abc模块)</h1><h2 id="抽象基类介绍"><a href="#抽象基类介绍" class="headerlink" title="抽象基类介绍"></a>抽象基类介绍</h2><p>抽象基类：是类里定义纯虚成员函数的类，<code>纯虚函数只提供接口，并没有具体实现</code>，抽象基类不能被实例化(不能创建对象)，通常作为基类提供类继承，子类重写虚函数，实现具体的接口</p><p>抽象基类就是<code>定义各种方式而不做具体实现的类</code>，任何继承自抽象基类的类必须实现这些方法，否则无法实例化</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 高级编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmap的使用</title>
      <link href="/2024/09/18/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/kali/nmap/"/>
      <url>/2024/09/18/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/kali/nmap/</url>
      
        <content type="html"><![CDATA[<h1 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h1><p>Nmap（Network Mapper）是一款用于网络发现和安全审计的开源工具。它最初由 Gordon Lyon开发，是一款功能强大且广泛使用的网络扫描工具。Nmap 允许用户在网络上执行主机发现、端口扫描、服务识别和版本检测等操作，以帮助评估网络的安全性、发现主机和服务、以及识别潜在的安全威胁。</p><h1 id="二、扫描选项"><a href="#二、扫描选项" class="headerlink" title="二、扫描选项"></a>二、扫描选项</h1><h2 id="一、基础参数"><a href="#一、基础参数" class="headerlink" title="一、基础参数"></a>一、基础参数</h2><h3 id="1-快速扫描"><a href="#1-快速扫描" class="headerlink" title="1.快速扫描"></a>1.快速扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap ip</span><br></pre></td></tr></table></figure><p>上述命令将执行一个默认的 TCP 端口扫描，显示目标主机上开放的端口以及相应的服务信息。 </p><h3 id="2-扫描多个目标"><a href="#2-扫描多个目标" class="headerlink" title="2 扫描多个目标"></a>2 扫描多个目标</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap ip ip </span><br></pre></td></tr></table></figure><p>扫描多个目标只需跟上 IP 即可 </p><h3 id="3-网段扫描"><a href="#3-网段扫描" class="headerlink" title="3 网段扫描"></a>3 网段扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap ip/子网掩码</span><br></pre></td></tr></table></figure><h3 id="4-过滤-IP-的网段扫描"><a href="#4-过滤-IP-的网段扫描" class="headerlink" title="4 过滤 IP 的网段扫描"></a>4 过滤 IP 的网段扫描</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap ip/子网掩码 -exclude 需要过滤的 IP 或 文件</span><br></pre></td></tr></table></figure><p>可以到过滤掉咱们自己后就只有一台主机了  </p><h3 id="5-扫描存活主机"><a href="#5-扫描存活主机" class="headerlink" title="5 扫描存活主机"></a>5 扫描存活主机</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP ip/子网掩码 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali的安装及配置</title>
      <link href="/2024/09/18/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/kali/%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/09/18/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/kali/%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装kali"><a href="#安装kali" class="headerlink" title="安装kali"></a>安装kali</h1><p>先打开官网<a href="https://www.kali.org/，找到虚拟机那一项，下载vmware版本，推荐第一个">https://www.kali.org/，找到虚拟机那一项，下载vmware版本，推荐第一个</a></p><p><img src="https://alist.chenjichao.site/d/夸克云盘/图片/image-20240908152059894.png" alt="image-20240908152059894"></p><p>下载，由于是国外网站，就需要各显神通了…………</p><p>解压并放到合适的文件夹</p><p>打开虚拟机，选择文件—打开</p><p><img src="https://alist.chenjichao.site/d/夸克云盘/图片/image-20240908152338109.png" alt="image-20240908152338109"></p><p>然后选择刚才下载的kali文件，此时便成功打开。</p><p>一开始默认是NAT网络，此时要设置成桥接模式，因为以后的攻击可能需要在与主机同一网段上才能进行。</p><h1 id="配网"><a href="#配网" class="headerlink" title="配网"></a>配网</h1>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络攻防 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>selenium的安装与配置</title>
      <link href="/2024/09/13/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/selenium/selenium%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/09/13/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/selenium/selenium%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装selenium"><a href="#一、安装selenium" class="headerlink" title="一、安装selenium"></a>一、安装selenium</h1>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> web爬虫 </category>
          
          <category> selenium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 爬虫框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xpath语法</title>
      <link href="/2024/09/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/xpath/xpath%20basic/"/>
      <url>/2024/09/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/xpath/xpath%20basic/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><code>xpaths</code>是一门专门在XML和HTML文档中寻找的语言，可用来在xml和html文档中对元素和html文档中对元素和属性进行遍历。</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="选取节点"><a href="#选取节点" class="headerlink" title="选取节点"></a>选取节点</h2><p>使用路径表达式来选取XML文档中的节点或者节点集。这些路径表达式和我们在常规的电脑文件系统中看到的表达式非常相似</p><div class="table-container"><table><thead><tr><th>表达式</th><th>描述</th><th>实例</th><th>结果</th></tr></thead><tbody><tr><td>nodename</td><td>选取此节点的所有子节点</td><td>bookstore</td><td>选择bookstore下所有的节点</td></tr><tr><td>/</td><td>如果是在最前面，代表从根节点选取。否则选择某一节点下的某个节点</td><td>/bookstore</td><td>选择根元素下所有的bookstore节点</td></tr><tr><td>//</td><td>从全局节点中选择节点，随便在哪个位置</td><td>//book</td><td>从全局节点中找到所有的book节点</td></tr><tr><td>@</td><td>选择某个节点的选择</td><td>//book[@price]</td><td>选择所有book节点的price属性</td></tr></tbody></table></div><p><strong>谓语：</strong></p><p>谓语来查找某个特定的节点，</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> web爬虫 </category>
          
          <category> xpath </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 爬虫数据提取 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>excel常用函数</title>
      <link href="/2024/09/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/excel/excel%20hanshu/"/>
      <url>/2024/09/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/excel/excel%20hanshu/</url>
      
        <content type="html"><![CDATA[<h1 id="一、查找函数"><a href="#一、查找函数" class="headerlink" title="一、查找函数"></a>一、查找函数</h1><h2 id="1-vlookup"><a href="#1-vlookup" class="headerlink" title="1.vlookup"></a>1.vlookup</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vlookup</span>(lookup_value,table_array,col_index,[range_lookup])</span><br></pre></td></tr></table></figure><blockquote><p><strong>lookup_value</strong>：查找的值 </p><p><strong>table_array</strong>：在哪张表进行查找</p><p><strong>col_index</strong>：在选择的表中的列</p></blockquote><h2 id="2-hlookup"><a href="#2-hlookup" class="headerlink" title="2.hlookup"></a>2.hlookup</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">hlookup</span>(lookup_value,table_array,col_index,[range_lookup])</span><br></pre></td></tr></table></figure><blockquote><p><strong>lookup_value</strong>：查找的值 </p><p><strong>table_array</strong>：在哪张表进行查找</p><p><strong>col_index</strong>：在选择的表中的列</p></blockquote><h1 id="二、随机函数"><a href="#二、随机函数" class="headerlink" title="二、随机函数"></a>二、随机函数</h1><h2 id="1-rand"><a href="#1-rand" class="headerlink" title="1.rand"></a>1.rand</h2><p>返回一个<strong>大于等于 0 及小于 1</strong> 随机数</p><h2 id="2-randbetween"><a href="#2-randbetween" class="headerlink" title="2.randbetween"></a>2.randbetween</h2><p><strong>返回指定的最小值和最大值</strong>之间的一个随机整数</p><h1 id="三、求和函数"><a href="#三、求和函数" class="headerlink" title="三、求和函数"></a>三、求和函数</h1><h2 id="1-SUM"><a href="#1-SUM" class="headerlink" title="1.SUM"></a>1.SUM</h2><p>单个数值、单元格或区域相加计算</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SUM</span>()</span><br></pre></td></tr></table></figure><h2 id="2-SUMIF"><a href="#2-SUMIF" class="headerlink" title="2.SUMIF"></a>2.SUMIF</h2><p>一定区域符合条件的值 进行相加计算</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SUMIF</span>(条件区域,求和条件,求和区域)</span><br></pre></td></tr></table></figure><h2 id="3-SUMIFS"><a href="#3-SUMIFS" class="headerlink" title="3.SUMIFS"></a>3.SUMIFS</h2><p>一定区域符合<strong>多个条件</strong>的值 进行相加计算</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SUMIFS</span>(求和区域,条件区域<span class="number">1</span>,条件<span class="number">1</span>,条件区域<span class="number">2</span>,条件<span class="number">2</span>,…)</span><br></pre></td></tr></table></figure><h1 id="四、平均函数"><a href="#四、平均函数" class="headerlink" title="四、平均函数"></a>四、平均函数</h1><h2 id="1-AVERAGE"><a href="#1-AVERAGE" class="headerlink" title="1.AVERAGE"></a>1.AVERAGE</h2><p>将 值、单元格、区域 进行求平均值</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">AVERAGE</span>()</span><br></pre></td></tr></table></figure><h2 id="2-AVERAGEIF"><a href="#2-AVERAGEIF" class="headerlink" title="2.AVERAGEIF"></a>2.AVERAGEIF</h2><p>可以将 一定区域符合<strong>条件</strong>的值 进行求平均</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">AVERAGEIF</span>(条件区域,条件,平均区域)</span><br></pre></td></tr></table></figure><h2 id="3-AVERAGEIFS"><a href="#3-AVERAGEIFS" class="headerlink" title="3.AVERAGEIFS"></a>3.AVERAGEIFS</h2><p>将 一定区域符合<strong>多条件</strong>的值 进行求平均</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">AVERAGEIFS</span>(平均值区域,条件区域<span class="number">1</span>,条件<span class="number">1</span>,条件区域<span class="number">2</span>,条件<span class="number">2</span>,…)</span><br></pre></td></tr></table></figure><h1 id="五、条件函数"><a href="#五、条件函数" class="headerlink" title="五、条件函数"></a>五、条件函数</h1><h2 id="1-if"><a href="#1-if" class="headerlink" title="1.if"></a>1.if</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">IF</span>(判断的条件,符合条件时的结果,不符合条件时的结果)</span><br></pre></td></tr></table></figure><h2 id="2-ifs"><a href="#2-ifs" class="headerlink" title="2.ifs"></a>2.ifs</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">IFS</span>(条件<span class="number">1</span>,值<span class="number">1</span>,条件<span class="number">2</span>,值<span class="number">2</span>……条件<span class="built_in">N</span>,值<span class="built_in">N</span>)</span><br></pre></td></tr></table></figure><h1 id="六、统计函数"><a href="#六、统计函数" class="headerlink" title="六、统计函数"></a>六、统计函数</h1><h2 id="1-COUNT"><a href="#1-COUNT" class="headerlink" title="1.COUNT"></a>1.COUNT</h2><p>用来<strong>计数</strong>的函数，<strong>只可以统计数字单元格的个数，对于空白、文本、逻辑值等不做统计</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">COUNT</span>(条件区域)</span><br></pre></td></tr></table></figure><h2 id="2-COUNTIF"><a href="#2-COUNTIF" class="headerlink" title="2.COUNTIF"></a>2.COUNTIF</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">COUNTIF</span>(Range，Criteria)</span><br></pre></td></tr></table></figure><blockquote><p>Range：要选择或输入统计的单元格区域</p><p>Criteria：设置的条件</p></blockquote><h1 id="七、提取函数"><a href="#七、提取函数" class="headerlink" title="七、提取函数"></a>七、提取函数</h1><h2 id="1-LEN"><a href="#1-LEN" class="headerlink" title="1.LEN"></a>1.LEN</h2><p>统计文本长度</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">LEN</span>(单元格)</span><br></pre></td></tr></table></figure><h2 id="2-LEFT"><a href="#2-LEFT" class="headerlink" title="2.LEFT"></a>2.LEFT</h2><p>从左提取字符的内容</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">LEFT</span>(单元格,提取字符个数)</span><br></pre></td></tr></table></figure><h2 id="3-RIGHT"><a href="#3-RIGHT" class="headerlink" title="3.RIGHT"></a>3.RIGHT</h2><p>从右提取字符的内容</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">RIGHT</span>(单元格,提取字符个数)</span><br></pre></td></tr></table></figure><h2 id="4-MID"><a href="#4-MID" class="headerlink" title="4.MID"></a>4.MID</h2><p>从第n个字符开始提取m个字符</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MID</span>(单元格,<span class="built_in">n</span>,m)</span><br></pre></td></tr></table></figure><h2 id="5-CONCAT"><a href="#5-CONCAT" class="headerlink" title="5.CONCAT"></a>5.CONCAT</h2><p>返回一个或多个字符串合并后的字符串。提供的参数可以是文本、数字、单元格引用或这些项的组合。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CONCAT</span>( 文本<span class="number">1</span>, [ 文本<span class="number">2</span>, ... 文本_<span class="built_in">n</span> ] )</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> excel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql函数</title>
      <link href="/2024/08/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-function_1/"/>
      <url>/2024/08/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-function_1/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h1><p>常用字符串函数：</p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>concat(S1,S2,……,Sn)</td><td>字符串拼接，将S1,S2,……,Sn拼接成一个字符串</td></tr><tr><td>lower(str)</td><td>将字符串str全部转成小写</td></tr><tr><td>upper(str)</td><td>将字符串str全部转成大写</td></tr><tr><td>lpad(str,n,pad)</td><td>左填充，将字符串pad对str的左边进行填充，达到n个字符串长度</td></tr><tr><td>rpad(str,n,pad)</td><td>右填充，将字符串pad对str的右边进行填充，达到n个字符串长度</td></tr><tr><td>trim(str)</td><td>去掉字符串头部和尾部的空格</td></tr><tr><td>substring(str,start,len)</td><td>返回从字符串str从start位置起的len个长度的字符串</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql学习—约束</title>
      <link href="/2024/08/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_2/"/>
      <url>/2024/08/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_2/</url>
      
        <content type="html"><![CDATA[<h1 id="Mysql学习—约束"><a href="#Mysql学习—约束" class="headerlink" title="Mysql学习—约束"></a>Mysql学习—约束</h1><p>[toc]</p><h2 id="数据表约束概述"><a href="#数据表约束概述" class="headerlink" title="数据表约束概述"></a>数据表约束概述</h2><h3 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h3><ul><li><p>对表中所存储的数据是否合法进行的检查。因此可以对已经创建好的表定义完整性约束，或创建新表时就已经进行完整性约束定义。</p></li><li><p>数据完整性是指数据的精确性和可靠性，防止数据库存在不合语义规定的数据和数据库操作人员错误的输入、输出而造成数据库中存在的错误数据</p></li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="1-实体完整性"><a href="#1-实体完整性" class="headerlink" title="1. 实体完整性"></a>1. 实体完整性</h5><p>指关系中的主属性值不能为null且不能有相同的值</p><h5 id="2-参照完整性"><a href="#2-参照完整性" class="headerlink" title="2. 参照完整性"></a>2. 参照完整性</h5><p>两个表的主键和外键的数据应该一致</p><h6 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h6><p><strong>(1)禁止在从表中插入包含主表中的不存在的关键字的数据行</strong></p><p><strong>(2)禁止删除从表中有对应记录的主表记录</strong></p><p><strong>(3)禁止会导致从表中相应值孤立的主表中的外键值改变</strong></p><h5 id="3-用户定义完整性"><a href="#3-用户定义完整性" class="headerlink" title="3. 用户定义完整性"></a>3. 用户定义完整性</h5><p>针对某个特定数据库的约束条件</p><h6 id="完整性约束类型"><a href="#完整性约束类型" class="headerlink" title="完整性约束类型"></a>完整性约束类型</h6><div class="table-container"><table><thead><tr><th style="text-align:center">完整性约束关键字</th><th style="text-align:center">含义</th></tr></thead><tbody><tr><td style="text-align:center">NOT NULL</td><td style="text-align:center">约束字段的值不能为空</td></tr><tr><td style="text-align:center">DEFAULT</td><td style="text-align:center">设置字段的默认值</td></tr><tr><td style="text-align:center">UNIQUE KEY(UK)</td><td style="text-align:center">约束字段的值唯一</td></tr><tr><td style="text-align:center">AUTO_INCREMENT</td><td style="text-align:center">约束字段的值为自动增加</td></tr><tr><td style="text-align:center">PRIMARY KEY(PK)</td><td style="text-align:center">约束字段为表的主键，可以作为该表记录的唯一标识</td></tr><tr><td style="text-align:center">FOREIGN KEY</td><td style="text-align:center">约束字段为表的外键</td></tr></tbody></table></div><h2 id="一、非空约束-NOT-NULL"><a href="#一、非空约束-NOT-NULL" class="headerlink" title="一、非空约束(NOT NULL)"></a>一、非空约束(NOT NULL)</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><h4 id="1-设置新建表"><a href="#1-设置新建表" class="headerlink" title="1.设置新建表"></a>1.设置新建表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE  table_name</span><br><span class="line">(</span><br><span class="line">col_name data_type NOT NULL…………</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-设置已存在的表"><a href="#2-设置已存在的表" class="headerlink" title="2.设置已存在的表"></a>2.设置已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY col_name data_type NOT NULL…………;</span><br></pre></td></tr></table></figure><h2 id="二、默认约束-DEFAULT"><a href="#二、默认约束-DEFAULT" class="headerlink" title="二、默认约束(DEFAULT)"></a>二、默认约束(DEFAULT)</h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><h4 id="1-设置新建表-1"><a href="#1-设置新建表-1" class="headerlink" title="1.设置新建表"></a>1.设置新建表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE  table_name</span><br><span class="line">(</span><br><span class="line">col_name data_type DEFAULT…………</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-设置已存在的表-1"><a href="#2-设置已存在的表-1" class="headerlink" title="2.设置已存在的表"></a>2.设置已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY col_name data_type DEFAULT…………;</span><br></pre></td></tr></table></figure><h2 id="三、唯一约束-UNIQUE-KEY-UK"><a href="#三、唯一约束-UNIQUE-KEY-UK" class="headerlink" title="三、唯一约束(UNIQUE KEY(UK))"></a>三、唯一约束(UNIQUE KEY(UK))</h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><h4 id="1-设置新建表-2"><a href="#1-设置新建表-2" class="headerlink" title="1.设置新建表"></a>1.设置新建表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name</span><br><span class="line">(</span><br><span class="line">col_name data_type UNIQUE…………;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-设置已存在的表-2"><a href="#2-设置已存在的表-2" class="headerlink" title="2.设置已存在的表"></a>2.设置已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY col_name data_type UNIQUE…………;</span><br></pre></td></tr></table></figure><h4 id="3-删除唯一键"><a href="#3-删除唯一键" class="headerlink" title="3.删除唯一键"></a>3.删除唯一键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name DROP INDEX index_name;</span><br></pre></td></tr></table></figure><blockquote><p><strong>索引(index_name)</strong>:一般是唯一约束的字段名</p></blockquote><p><strong>设置自增的注意项：</strong></p><blockquote><p>1.必须是整数类型</p><p>2.必须先定义一个键(主键或唯一键)</p><p>3.可以使用<strong>ALTER TABLE table_name AUTO_INCREMENT=default_value</strong>为字段设置自增的初始值1</p></blockquote><h2 id="四、自增约束-AUTO-INCREMENT"><a href="#四、自增约束-AUTO-INCREMENT" class="headerlink" title="四、自增约束(AUTO_INCREMENT)"></a>四、自增约束(AUTO_INCREMENT)</h2><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><h4 id="1-设置新建表-3"><a href="#1-设置新建表-3" class="headerlink" title="1.设置新建表"></a>1.设置新建表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name</span><br><span class="line">(</span><br><span class="line">col_name data_type AUTO_INCREMENT</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="2-设置已存在的表-3"><a href="#2-设置已存在的表-3" class="headerlink" title="2.设置已存在的表"></a>2.设置已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY col_name data_type AUTO_INCREMENT;</span><br></pre></td></tr></table></figure><h2 id="五、主键约束-PRIMARY-KEY-PK"><a href="#五、主键约束-PRIMARY-KEY-PK" class="headerlink" title="五、主键约束(PRIMARY KEY(PK))"></a>五、主键约束(PRIMARY KEY(PK))</h2><p><strong>关系:</strong></p><blockquote><p><strong>1.子表中的参照值只能从主表中的参照值中选择</strong></p><p><strong>2.当主表中的参照值不存在时，子表也不存在</strong></p></blockquote><h3 id="主键-单字段主键"><a href="#主键-单字段主键" class="headerlink" title="主键-单字段主键"></a>主键-单字段主键</h3><h4 id="1-创建新表"><a href="#1-创建新表" class="headerlink" title="1.创建新表"></a>1.创建新表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name(col_name date_type PRIMARY KEY,……)</span><br></pre></td></tr></table></figure><h4 id="2-已存在的表"><a href="#2-已存在的表" class="headerlink" title="2.已存在的表"></a>2.已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name ADD [CONSTRAING constraint_name] PRIMARY KEY(col_name)</span><br></pre></td></tr></table></figure><h4 id="3-删除主键"><a href="#3-删除主键" class="headerlink" title="3.删除主键"></a>3.删除主键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name DROP PRI</span><br></pre></td></tr></table></figure><h3 id="主键-多字段联合主键"><a href="#主键-多字段联合主键" class="headerlink" title="主键-多字段联合主键"></a>主键-多字段联合主键</h3><h4 id="1-创建新表-1"><a href="#1-创建新表-1" class="headerlink" title="1.创建新表"></a>1.创建新表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ACREATE TABLE table_name(col_name data_type,……</span><br><span class="line">                         </span><br><span class="line">[CONSTRAINY constraint_name]</span><br><span class="line">                         </span><br><span class="line">PRIMARY KEY(col_name1,col_name2……) </span><br></pre></td></tr></table></figure><h4 id="2-已存在的表-1"><a href="#2-已存在的表-1" class="headerlink" title="2.已存在的表"></a>2.已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name[CONSTRAINT constraint_name PRIMARY KEY(col_name1,col_name2)]</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><p>多字段联合主键不允许出现两个完全相同的联合主键</p></blockquote><h2 id="六、外键约束-FOREIGN-KEY"><a href="#六、外键约束-FOREIGN-KEY" class="headerlink" title="六、外键约束(FOREIGN KEY)"></a>六、外键约束(FOREIGN KEY)</h2><p><strong>外键不能单独设置，只有当设置了主键之后才能设置外键，外键必须参照另一个表的主键</strong></p><h3 id="一-类型"><a href="#一-类型" class="headerlink" title="(一)  类型"></a>(一)  类型</h3><h4 id="1-创建新表-2"><a href="#1-创建新表-2" class="headerlink" title="1.创建新表"></a>1.创建新表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name</span><br><span class="line">(</span><br><span class="line">col_name data_type,…… //正常c值</span><br><span class="line">    </span><br><span class="line">[CONSTRAINY constrainy_name] FOREIGN KEY(col_name1) //指定外键</span><br><span class="line">    </span><br><span class="line">REFERENCES table_name(col_name2)//外键所在的表</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>FOREIGN KEY：约束的名称，后可接外键名称</p><p>REFERENCES：参照，后接另一个表名和该表主键名称</p><h4 id="2-已存在的表-2"><a href="#2-已存在的表-2" class="headerlink" title="2.已存在的表"></a>2.已存在的表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name1</span><br><span class="line"></span><br><span class="line">ADD CONSTRAINT [constraint_name]</span><br><span class="line">//指定外键名称constraint_name</span><br><span class="line"></span><br><span class="line">FOREIGN KEY (col_name1)</span><br><span class="line">//指定了class_id作为外键</span><br><span class="line"></span><br><span class="line">REFERENCES table_name (col_name2) </span><br><span class="line">//指定了这个外键将关联到class表的id列（即class表的主键</span><br></pre></td></tr></table></figure><h4 id="3-删除外键"><a href="#3-删除外键" class="headerlink" title="3.删除外键"></a>3.删除外键</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name1 DROP FOREIGN KEY constraint_name</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><blockquote><p>如果没有外键名称，系统会自动加上<br>用命令show create table table_name查看</p></blockquote><h3 id="二-行为"><a href="#二-行为" class="headerlink" title="(二)  行为"></a>(二)  行为</h3><div class="table-container"><table><thead><tr><th>行为</th><th>说明</th></tr></thead><tbody><tr><td>NO ACTIION&lt;/br&gt;(RESTRICT)</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否存在对应外键，如果由则不允许删除/更新。</td></tr><tr><td>CASCADE</td><td>当在父表中删除/更新对应记录时，首先检查该记录是否存在对应外键，如果有则删除/更新外键在子表中的记录。</td></tr><tr><td>SET NULL</td><td>当在父表中删除对应记录时，首先检查该记录是否存在对应外键，如果有则设子表中外键为null(要求外键允许null)</td></tr><tr><td>SET DEFAULT</td><td>父表有变更时，子表将外键列设为一个默认的值(Innodb不支持)</td></tr></tbody></table></div><h2 id="七、检查约束"><a href="#七、检查约束" class="headerlink" title="七、检查约束"></a>七、检查约束</h2><p><strong>在8.0.16版本之后支持，保证字段满足某一个条件</strong></p><h3 id="1-创建新表-3"><a href="#1-创建新表-3" class="headerlink" title="1.创建新表"></a>1.创建新表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name(</span><br><span class="line">color_name  data_type……</span><br><span class="line">    check( 条件1 &amp;&amp; 条件2)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="2-已存在的表-3"><a href="#2-已存在的表-3" class="headerlink" title="2.已存在的表"></a>2.已存在的表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE Students</span><br><span class="line"></span><br><span class="line">ADD CONSTRAINT [constraint_name] chk_age CHECK (年龄 &gt;= 18);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql用户与权限管理</title>
      <link href="/2024/08/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_5/"/>
      <url>/2024/08/31/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_5/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="1-查询用户"><a href="#1-查询用户" class="headerlink" title="1.查询用户"></a>1.查询用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line"></span><br><span class="line">selsct * from user;</span><br></pre></td></tr></table></figure><h2 id="2-创建用户"><a href="#2-创建用户" class="headerlink" title="2.创建用户"></a>2.创建用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create user &#x27;用户名&#x27;@&#x27;主机&#x27; identified by &#x27;密码&#x27;;</span><br></pre></td></tr></table></figure><h2 id="3-修改用户密码"><a href="#3-修改用户密码" class="headerlink" title="3.修改用户密码"></a>3.修改用户密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#x27;用户名&#x27;@&#x27;主机名&#x27; identified with mysql_native_password by &#x27;新密码&#x27;;</span><br></pre></td></tr></table></figure><h2 id="4-删除用户"><a href="#4-删除用户" class="headerlink" title="4.删除用户"></a>4.删除用户</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop user &#x27;用户名&#x27;@&#x27;主机名&#x27;</span><br></pre></td></tr></table></figure><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><p>MySQL中定义了很多权限，但是通常就以下几种</p><div class="table-container"><table><thead><tr><th>权限</th><th>说明</th></tr></thead><tbody><tr><td>ALL , ALL PRIVIEGES</td><td>所有权限</td></tr><tr><td>SELECT</td><td>查询数据</td></tr><tr><td>INSERT</td><td>插入数据</td></tr><tr><td>UPDATE</td><td>修改数据</td></tr><tr><td>DELECT</td><td>删除数据</td></tr><tr><td>ALTER</td><td>修改表</td></tr><tr><td>DROP</td><td>删除数据库/表/视图</td></tr><tr><td>CREATE</td><td>创建数据库/表</td></tr></tbody></table></div><h2 id="1-查询权限"><a href="#1-查询权限" class="headerlink" title="1.查询权限"></a>1.查询权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show grants for &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure><h2 id="2-授予权限"><a href="#2-授予权限" class="headerlink" title="2.授予权限"></a>2.授予权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant 权限列表 on 数据库名.表名 to &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure><h2 id="3-撤销权限"><a href="#3-撤销权限" class="headerlink" title="3.撤销权限"></a>3.撤销权限</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remove 权限列表 on 数据库名.表名 from &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js基础</title>
      <link href="/2024/08/16/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/js-basic1/"/>
      <url>/2024/08/16/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/js-basic1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、嵌入方式"><a href="#一、嵌入方式" class="headerlink" title="一、嵌入方式"></a>一、嵌入方式</h1><h2 id="1-内嵌式"><a href="#1-内嵌式" class="headerlink" title="1.内嵌式"></a>1.内嵌式</h2><p>理论上js可以插入任何一个地方，但是习惯上写在head标签或body下</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="lt-script-gt-标签"><a href="#lt-script-gt-标签" class="headerlink" title="&lt;script&gt;标签"></a>&lt;script&gt;标签</h3><p>如需在 HTML 页面中插入 JavaScript，请使用 &lt;script&gt; 标签。</p><blockquote><p>&lt;script&gt;和 &lt;/script&gt;会告诉 JavaScript 在何处开始和结束。<br>&lt;script&gt;和 &lt;/script&gt; 之间的代码行包含了 JavaScript:</p></blockquote><p>您无需理解上面的代码。只需明白，浏览器会解释并执行位于 &lt;script&gt;和 &lt;/script&gt;之间的 JavaScript 代码</p><p>那些老旧的实例可能会在 &lt;script&gt;标签中使用 type=”text/javascript”。现在已经不必这样做了。JavaScript 是所有现代浏览器以及 HTML5 中的默认脚本语言。 </p><h2 id="2-外联式"><a href="#2-外联式" class="headerlink" title="2.外联式"></a>2.外联式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;文件路径&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-行内式"><a href="#3-行内式" class="headerlink" title="3.行内式"></a>3.行内式</h2><p>直接写在标签上，是一个简写的事件，所以又称为事件属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;button&quot;</span> value=<span class="string">&quot;点我&quot;</span> onclick=<span class="string">&quot;alert(&#x27;xss&#x27;);&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h1 id="二、语句"><a href="#二、语句" class="headerlink" title="二、语句"></a>二、语句</h1><p>1.在编程语言中，这些编程指令被称为语句</p><p>2.js由以下语句构成：</p><p>值、运算符、表达式、关键词和注释。</p><p>3.用分号(;)分割js语句</p><h1 id="三、注释"><a href="#三、注释" class="headerlink" title="三、注释"></a>三、注释</h1><p>单行注释：     //  注释语句</p><p>多行注释:       /*注释语句*/</p><p><strong>注意</strong>：多行注释不能嵌套使用。</p><h1 id="四、js保留关键字"><a href="#四、js保留关键字" class="headerlink" title="四、js保留关键字"></a>四、js保留关键字</h1><p>Javascript 的保留关键字不可以用作变量、标签或者函数名。有些保留关键字是作为 Javascript 以后扩展使用。</p><div class="table-container"><table><thead><tr><th>关键字</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>abstract</td><td>arguments</td><td>boolean</td><td>break</td><td>byte</td></tr><tr><td>case</td><td>catch</td><td>char</td><td><code>class</code></td><td>const</td></tr><tr><td>continue</td><td>debugger</td><td>default</td><td>delete</td><td>const</td></tr><tr><td>double</td><td>else</td><td><code>enum</code></td><td>eval</td><td>do</td></tr><tr><td><code>extends</code></td><td>false</td><td>final</td><td>finally</td><td><code>export</code></td></tr><tr><td>for</td><td>function</td><td>goto</td><td>if</td><td>float</td></tr><tr><td><code>import</code></td><td>in</td><td>instanceof</td><td>int</td><td>interface</td></tr><tr><td>let</td><td>long</td><td>native</td><td>new</td><td>newnull</td></tr><tr><td>package</td><td>private</td><td>protected</td><td>public</td><td>return</td></tr><tr><td>short</td><td>static</td><td><code>super</code></td><td>switch</td><td>synchronized</td></tr><tr><td>this</td><td>throw</td><td>throws</td><td>transient</td><td>true</td></tr><tr><td>try</td><td>typeof</td><td>var</td><td>void</td><td>volatile</td></tr><tr><td>while</td><td>with</td><td>yield</td><td></td></tr></tbody></table></div><p>标记的关键字是 ECMAScript5 中新添加的。</p><h1 id="五、数据类型"><a href="#五、数据类型" class="headerlink" title="五、数据类型"></a>五、数据类型</h1><p>数值型：number(凡是数字都是数值型，不区分整数和小数)</p><p>字符串：string(凡是引号包裹的都是字符串)</p><p>布尔：boolean(true、flase)</p><p>未定义型：undefined</p><p>对象类型: object，包括数组和字典，特殊值为null</p><h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><p>parseInt(……)   将某值转化为数字，不成功便是NaN</p><p>parseFloat(……)  将某值转化为浮点数，不成功便是NaN</p><p><strong>特殊值：</strong><br>NaN,非数字。可用isNaN来判断</p><p>Infinity，无穷大。可用isFinite来判断</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql学习—数据的操作</title>
      <link href="/2024/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_3/"/>
      <url>/2024/08/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_3/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="Mysql学习—数据的操作"><a href="#Mysql学习—数据的操作" class="headerlink" title="Mysql学习—数据的操作"></a>Mysql学习—数据的操作</h1><h2 id="一、基本介绍"><a href="#一、基本介绍" class="headerlink" title="一、基本介绍"></a>一、基本介绍</h2><p>使用数据操作语言对数据库中表的数据记录进行更新。</p><h2 id="二、操作"><a href="#二、操作" class="headerlink" title="二、操作"></a>二、操作</h2><h3 id="1-数据的插入"><a href="#1-数据的插入" class="headerlink" title="1.数据的插入"></a>1.数据的插入</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into 表(列名1,列名2……) values(值1,值2,……);//向表中插入某些数据，列与值要对应</span><br><span class="line"></span><br><span class="line">insert into 表 values (指1,值2,值3,……);//向表中所有列插入数据</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><blockquote><ol><li>字符串和日期型数据应该包含在引号中</li><li>插入的数据大小，应该在数据的指定范围内</li></ol></blockquote><h3 id="2-数据的修改"><a href="#2-数据的修改" class="headerlink" title="2.数据的修改"></a>2.数据的修改</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update 表名 set 字段名1=值1, 字段名2=值2, ……[where 条件]</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><blockquote><p>字符串和日期型数据包含在引号中</p></blockquote><h3 id="3-数据的删除"><a href="#3-数据的删除" class="headerlink" title="3.数据的删除"></a>3.数据的删除</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from 表名 [where 条件]</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><blockquote><p><code>delect</code>语句不能删除某一个字段的值(可以使用<code>upate</code>,设置成<code>null</code>值)</p><p><code>WHERE condition</code> 是一个可选的子句，用于指定删除的行。如果省略 <code>WHERE</code> 子句，将删除表中的所有行</p></blockquote><p><strong>例：</strong></p><pre><code>DELETE FROM customersWHERE customer_id IN (    SELECT customer_id    FROM orders    WHERE order_date &lt; &#39;2023-01-01&#39;);</code></pre><p>以上 SQL 语句通过子查询删除了 orders 表中在 ‘2023-01-01’ 之前下的订单对应的客户。</p><blockquote><p><strong>注意：</strong> 在使用 DELETE 语句时，请确保你提供了足够的条件来确保只有你想要删除的行被删除。如果不提供 WHERE<br>子句，将删除表中的所有行，可能导致不可预测的结果。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss-labs-master实战</title>
      <link href="/2024/08/13/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/xss-labs-master%E5%AE%9E%E6%88%98/"/>
      <url>/2024/08/13/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/xss-labs-master%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h6 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h6><p><img src="https://image.chenjichao.site/file/025724ee2fb0ee83aecc1.png" alt="image-20240813133703721"></p><p>看到参数为name，构造payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xss-labs-master/level1.php?name=<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;1&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://image.chenjichao.site/file/585d70ce28933f9f92da5.png" alt="image-20240813134220895"></p><p>通过</p><h6 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h6><p><img src="https://image.chenjichao.site/file/361561842622fefad6c9e.png" alt="image-20240813134322969"></p><p>先提交一个测试代码查看，构造payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;1&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查看源代码</p><p><img src="https://image.chenjichao.site/file/04bfdf863044d8548e795.png" alt="image-20240813134510684"></p><p>发现下面value没有过滤</p><p>构造payload，闭合前后</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&quot;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;1&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&lt;&quot;</span><br></pre></td></tr></table></figure><p><img src="https://image.chenjichao.site/file/f344b26d4ce90d6a8e56c.png" alt="image-20240813135805252"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
          <category> xss跨站攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss漏洞基础</title>
      <link href="/2024/08/13/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/xss%E6%B5%8B%E8%AF%95%E8%AF%AD%E5%8F%A5/"/>
      <url>/2024/08/13/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/xss%E6%B5%8B%E8%AF%95%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="一、测试语句"><a href="#一、测试语句" class="headerlink" title="一、测试语句"></a>一、测试语句</h1><p>在网站是否存在xss漏洞时，应该输入如&lt;,&gt;输入后查看网页源代码是否过滤标签，如果没有，很大可能存在xss漏洞</p><p>常用的测试语句<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&quot;&gt;<span class="tag">&lt;<span class="name">span</span>&gt;</span>x<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&lt;&quot;</span><br><span class="line">&quot;&gt;&quot;&gt;<span class="tag">&lt;<span class="name">span</span>&gt;</span>x<span class="tag">&lt;/<span class="name">span</span>&gt;</span>&lt;&quot;&lt;&quot;</span><br></pre></td></tr></table></figure></p><h1 id="二、攻击语句"><a href="#二、攻击语句" class="headerlink" title="二、攻击语句"></a>二、攻击语句</h1><p>输入测试语句未过滤后，为显示存在漏洞，需要插入攻击代码</p><p><strong>常见语句</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="number">1</span>)&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">onload</span>=<span class="string">alert(1)</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(1)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="三、利用"><a href="#三、利用" class="headerlink" title="三、利用"></a>三、利用</h1>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
          <category> xss跨站攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xss漏洞基础</title>
      <link href="/2024/08/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/xss-basic/"/>
      <url>/2024/08/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/xss%E8%B7%A8%E7%AB%99%E6%94%BB%E5%87%BB/xss-basic/</url>
      
        <content type="html"><![CDATA[<h1 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h1><p>全称：跨站脚本攻击</p><p>允许恶意web用户将代码植入web网站中，供给其他用户使用，当用户访问其有恶意代码的网页就会产生xss攻击</p><h1 id="二、危害"><a href="#二、危害" class="headerlink" title="二、危害"></a>二、危害</h1><p>1.盗取各类用户账号，如机器登录账号、用户网银账号、各类管理账号</p><p>2.控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力</p><p>3.盗取企业重要的具有商业价值的资料</p><p>4.非法转帐</p><p>5.强制发送电子邮件</p><p>6.网站挂马</p><p>7.控制受害机器向其他网站攻击</p><h1 id="三、防御"><a href="#三、防御" class="headerlink" title="三、防御"></a>三、防御</h1><p>总体思路是：对输入(和URL参数)进行过滤，对输出进行编码，使脚本无法在浏览器中执行</p><h1 id="四、类型"><a href="#四、类型" class="headerlink" title="四、类型"></a>四、类型</h1><h2 id="1-反射性xss"><a href="#1-反射性xss" class="headerlink" title="1.反射性xss"></a>1.反射性xss</h2><p>非持久化，需要目标用户自己点击连接次才能触发xss代码。</p><p>方法：发送邮件等方式，将含有xss恶意链接发送到目标用户，当目标用户访问该链接时，服务器将接受该用户的请求并进行处理，然后发送至目标用户的浏览器，浏览器解析后，会触发xss攻击。</p><h2 id="2-存储型xss"><a href="#2-存储型xss" class="headerlink" title="2.存储型xss"></a>2.存储型xss</h2><p>持久性，将恶意代码存储在服务器中的数据库中，如个人信息或发表文章等地方，如果插入的数据没有过滤，用户访问该页面时就会触发该代码，造成xss攻击</p><h2 id="3-dom型xss"><a href="#3-dom型xss" class="headerlink" title="3.dom型xss"></a>3.dom型xss</h2><p>是一种特殊的反射性xss，基于DOM文档对象模型的一种漏洞</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
          <category> xss跨站攻击 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抓包</title>
      <link href="/2024/08/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/%E6%8A%93%E5%8C%85/%E6%8A%93%E5%8C%85%E6%A6%82%E8%BF%B0/"/>
      <url>/2024/08/12/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/%E6%8A%93%E5%8C%85/%E6%8A%93%E5%8C%85%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h1><p>抓包（packet capture）就是将网络传输发送与接收的数据包进行截获、重发、编辑、转存等操作，也用来检查网络安全。抓包也经常被用来进行数据截取等。</p><h2 id="二、原理"><a href="#二、原理" class="headerlink" title="二、原理"></a>二、原理</h2><p>数据在网络上是以很小的称为帧（Frame）的单位传输的，帧由几部分组成，不同的部分执行不同的功能。帧通过特定的称为网络驱动程序的软件进行成型，然后通过网卡发送到网线上，通过网线到达它们的目的机器，在目的机器的一端执行相反的过程。接收端机器的以太网卡捕获到这些帧，并告诉操作系统帧已到达，然后对其进行存储。就是在这个传输和接收的过程中，嗅探器会带来安全方面的问题。</p><p>每一个在局域网（LAN）上的工作站都有其硬件地址，这些地址唯一地表示了网络上的机器（这一点与Internet地址系统比较相似）。当用户发送一个数据包时，如果为广播包，则可达到局域网中的所有机器，如果为单播包，则只能到达处于同一碰撞域中的机器。</p><p>在一般情况下，网络上所有的机器都可以“听”到通过的流量，但对不属于自己的数据包则不予响应（换句话说，工作站A不会捕获属于工作站B的数据，而是简单地忽略这些数据）。如果某个工作站的网络接口处于混杂模式，那么它就可以捕获网络上所有的数据包和帧。</p><h2 id="三、分类"><a href="#三、分类" class="headerlink" title="三、分类"></a>三、分类</h2><p>(一)web应用站点-浏览器直接查看元素网络监听</p><p>(二)APP&amp;小程序&amp;PC抓包-Charles&amp;Fiddler&amp;Burpsuite</p><p>(三)程序进程&amp;网络接口-wireshark&amp;科来网络分析系统</p><p>(四)通讯类应用封包发送接收-WPE四件套封包&amp;科来网络分析系统</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
          <category> 抓包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLite 数据类型</title>
      <link href="/2024/08/11/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/sqlite/sql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2024/08/11/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/sqlite/sql%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="SQLite-数据类型"><a href="#SQLite-数据类型" class="headerlink" title="SQLite 数据类型"></a>SQLite 数据类型</h1><p>SQLite 数据类型是一个用来指定任何对象的数据类型的属性。SQLite 中的每一列，每个变量和表达式都有相关的数据类型。</p><p>您可以在创建表的同时使用这些数据类型。SQLite 使用一个更普遍的动态类型系统。在 SQLite 中，值的数据类型与值本身是相关的，而不是与它的容器相关。</p><h2 id="SQLite-存储类"><a href="#SQLite-存储类" class="headerlink" title="SQLite 存储类"></a>SQLite 存储类</h2><p>每个存储在 SQLite 数据库中的值都具有以下存储类之一：</p><div class="table-container"><table><thead><tr><th style="text-align:left">存储类</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">NULL</td><td style="text-align:left">值是一个 NULL 值。</td></tr><tr><td style="text-align:left">INTEGER</td><td style="text-align:left">值是一个带符号的整数，根据值的大小存储在 1、2、3、4、6 或 8 字节中。</td></tr><tr><td style="text-align:left">REAL</td><td style="text-align:left">值是一个浮点值，存储为 8 字节的 IEEE 浮点数字。</td></tr><tr><td style="text-align:left">TEXT</td><td style="text-align:left">值是一个文本字符串，使用数据库编码（UTF-8、UTF-16BE 或 UTF-16LE）存储。</td></tr><tr><td style="text-align:left">BLOB</td><td style="text-align:left">值是一个 blob 数据，完全根据它的输入存储。</td></tr></tbody></table></div><p>SQLite 的存储类稍微比数据类型更普遍。INTEGER 存储类，例如，包含 6 种不同的不同长度的整数数据类型。</p><h2 id="SQLite-亲和-Affinity-类型"><a href="#SQLite-亲和-Affinity-类型" class="headerlink" title="SQLite 亲和(Affinity)类型"></a>SQLite 亲和(Affinity)类型</h2><p>SQLite支持列的亲和类型概念。任何列仍然可以存储任何类型的数据，当数据插入时，该字段的数据将会优先采用亲缘类型作为该值的存储方式。SQLite目前的版本支持以下五种亲缘类型：</p><div class="table-container"><table><thead><tr><th style="text-align:left">亲和类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">TEXT</td><td style="text-align:left">数值型数据在被插入之前，需要先被转换为文本格式，之后再插入到目标字段中。</td></tr><tr><td style="text-align:left">NUMERIC</td><td style="text-align:left">当文本数据被插入到亲缘性为NUMERIC的字段中时，如果转换操作不会导致数据信息丢失以及完全可逆，那么SQLite就会将该文本数据转换为INTEGER或REAL类型的数据，如果转换失败，SQLite仍会以TEXT方式存储该数据。对于NULL或BLOB类型的新数据，SQLite将不做任何转换，直接以NULL或BLOB的方式存储该数据。需要额外说明的是，对于浮点格式的常量文本，如”30000.0”，如果该值可以转换为INTEGER同时又不会丢失数值信息，那么SQLite就会将其转换为INTEGER的存储方式。</td></tr><tr><td style="text-align:left">INTEGER</td><td style="text-align:left">对于亲缘类型为INTEGER的字段，其规则等同于NUMERIC，唯一差别是在执行CAST表达式时。</td></tr><tr><td style="text-align:left">REAL</td><td style="text-align:left">其规则基本等同于NUMERIC，唯一的差别是不会将”30000.0”这样的文本数据转换为INTEGER存储方式。</td></tr><tr><td style="text-align:left">NONE</td><td style="text-align:left">不做任何的转换，直接以该数据所属的数据类型进行存储。</td></tr></tbody></table></div><h2 id="SQLite-亲和类型-Affinity-及类型名称"><a href="#SQLite-亲和类型-Affinity-及类型名称" class="headerlink" title="SQLite 亲和类型(Affinity)及类型名称"></a>SQLite 亲和类型(Affinity)及类型名称</h2><p>下表列出了当创建 SQLite3 表时可使用的各种数据类型名称，同时也显示了相应的亲和类型：</p><div class="table-container"><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">亲和类型</th></tr></thead><tbody><tr><td style="text-align:left">INT<br><br>INTEGER<br><br>TINYINT<br><br>SMALLINT<br><br>MEDIUMINT<br><br>BIGINT<br><br>UNSIGNED BIG INT<br><br>INT2<br><br>INT8</td><td style="text-align:left">INTEGER</td></tr><tr><td style="text-align:left">CHARACTER(20)<br><br>VARCHAR(255)<br><br>VARYING CHARACTER(255)<br><br>NCHAR(55)<br><br>NATIVE CHARACTER(70)<br><br>NVARCHAR(100)<br><br>TEXTCLOB</td><td style="text-align:left">TEXT</td></tr><tr><td style="text-align:left">BLOB<br><br>未指定类型</td><td style="text-align:left">BLOB</td></tr><tr><td style="text-align:left">REAL<br><br>DOUBLE<br><br>DOUBLE PRECISION<br><br>FLOAT</td><td style="text-align:left">REAL</td></tr><tr><td style="text-align:left">NUMERI<br><br>CDECIMAL(10,5)<br><br>BOOLEAN<br><br>DATE<br><br>DATETIME</td><td style="text-align:left">NUMERIC</td></tr></tbody></table></div><h2 id="Boolean-数据类型"><a href="#Boolean-数据类型" class="headerlink" title="Boolean 数据类型"></a>Boolean 数据类型</h2><p>SQLite 没有单独的 Boolean 存储类。相反，布尔值被存储为整数 0（false）和 1（true）。</p><h2 id="Date-与-Time-数据类型"><a href="#Date-与-Time-数据类型" class="headerlink" title="Date 与 Time 数据类型"></a>Date 与 Time 数据类型</h2><p>SQLite 没有一个单独的用于存储日期和/或时间的存储类，但 SQLite 能够把日期和时间存储为 TEXT、REAL 或 INTEGER 值。</p><div class="table-container"><table><thead><tr><th style="text-align:left">存储类</th><th style="text-align:left">日期格式</th></tr></thead><tbody><tr><td style="text-align:left">TEXT</td><td style="text-align:left">格式为 “YYYY-MM-DD HH:MM:SS.SSS” 的日期。</td></tr><tr><td style="text-align:left">REAL</td><td style="text-align:left">从公元前 4714 年 11 月 24 日格林尼治时间的正午开始算起的天数。</td></tr><tr><td style="text-align:left">INTEGER</td><td style="text-align:left">从 1970-01-01 00:00:00 UTC 算起的秒数。</td></tr></tbody></table></div><p>您可以以任何上述格式来存储日期和时间，并且可以使用内置的日期和时间函数来自由转换不同格式。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> sqlite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python sqlite3</title>
      <link href="/2024/08/11/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/sqlite3/"/>
      <url>/2024/08/11/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/sqlite3/</url>
      
        <content type="html"><![CDATA[<h1 id="创建sqlite数据库文件"><a href="#创建sqlite数据库文件" class="headerlink" title="创建sqlite数据库文件"></a>创建sqlite数据库文件</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化连接</span></span><br><span class="line">conn = sqlite3.connect(<span class="string">&#x27;test_a.db&#x27;</span>)</span><br><span class="line"><span class="comment">#保存生效</span></span><br><span class="line">conn.commit()</span><br><span class="line"><span class="comment">#关闭连接</span></span><br><span class="line">coon.close()</span><br></pre></td></tr></table></figure><h1 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h1><p><strong>sqlite语法：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#创建表</span><br><span class="line">create table teac(字段名1 类型，字段名2 类型，……字段名n 类型)</span><br></pre></td></tr></table></figure><p><strong>对python sqlite3库：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化连接</span></span><br><span class="line">db = sqlite3.connect(<span class="string">&#x27;test_a.db&#x27;</span>)</span><br><span class="line"><span class="comment">#创建游标</span></span><br><span class="line">yb = db.cursor()</span><br><span class="line"><span class="comment">#创建表sql</span></span><br><span class="line">sql = <span class="string">&#x27;&#x27;&#x27;create table teac(字段名1 类型，字段名2 类型，……字段名n 类型)&#x27;&#x27;&#x27;</span></span><br><span class="line">yb.execute(sql)</span><br><span class="line"><span class="comment">#保存生效</span></span><br><span class="line">db.commit()</span><br><span class="line"><span class="comment">#关闭连接</span></span><br><span class="line">yb.close()</span><br><span class="line">coon.close()</span><br></pre></td></tr></table></figure><h1 id="字段类型"><a href="#字段类型" class="headerlink" title="字段类型"></a>字段类型</h1><h2 id="1-字符串类型"><a href="#1-字符串类型" class="headerlink" title="1.字符串类型"></a>1.字符串类型</h2><p>char:定长，效率高，用于固定长度的表单提交数据储存</p><p>vaechar:不定长，效率偏低，节省空间</p><h2 id="2-数字类型"><a href="#2-数字类型" class="headerlink" title="2.数字类型"></a>2.数字类型</h2><p>integer:整数</p><p>real:小数</p><h2 id="3-日期与时间类型"><a href="#3-日期与时间类型" class="headerlink" title="3.日期与时间类型"></a>3.日期与时间类型</h2><p>date:展示格式”YYYY-MM-DD”</p><p>datetime:展示格式”YYYY-MM-DD HH:MM:SS.SSS”</p><p>timestamp:展示格式”YYYY-MM-DD HH:MM:SS.SSS”,会以时间戳换算</p><h2 id="4-text与blob"><a href="#4-text与blob" class="headerlink" title="4.text与blob"></a>4.text与blob</h2><p>text:储存超长文本</p><p>blob:存储二进制字符串</p><h1 id="表的修改"><a href="#表的修改" class="headerlink" title="表的修改"></a>表的修改</h1>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 库介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> python </tag>
            
            <tag> sqlite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlite基础</title>
      <link href="/2024/08/11/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/sqlite/sqlite-basic/"/>
      <url>/2024/08/11/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/sqlite/sqlite-basic/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>SQLite是一种轻型的关系型数据库，也是遵守事务特性的数据库管理系统。占用资源非常低，因此常作为嵌入式数据库。</p><h1 id="SQLite-语法"><a href="#SQLite-语法" class="headerlink" title="SQLite 语法"></a>SQLite 语法</h1><p>SQLite 是遵循一套独特的称为语法的规则和准则。本教程列出了所有基本的 SQLite 语法，向您提供了一个 SQLite 快速入门。</p><h2 id="大小写敏感性"><a href="#大小写敏感性" class="headerlink" title="大小写敏感性"></a>大小写敏感性</h2><p>有个重要的点值得注意，SQLite 是<strong>不区分大小写</strong>的，但也有一些命令是大小写敏感的，比如 <strong>GLOB</strong> 和 <strong>glob</strong> 在 SQLite 的语句中有不同的含义。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>SQLite 注释是附加的注释，可以在 SQLite 代码中添加注释以增加其可读性，他们可以出现在任何空白处，包括在表达式内和其他 SQL 语句的中间，但它们不能嵌套。</p><p>SQL 注释以两个连续的 “-“ 字符（ASCII 0x2d）开始，并扩展至下一个换行符（ASCII 0x0a）或直到输入结束，以先到者为准。</p><p>您也可以使用 C 风格的注释，以 “/<em>“ 开始，并扩展至下一个 “</em>/“ 字符对或直到输入结束，以先到者为准。SQLite的注释可以跨越多行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlite&gt;.help -- 这是一个简单的注释</span><br></pre></td></tr></table></figure><h2 id="SQLite-语句"><a href="#SQLite-语句" class="headerlink" title="SQLite 语句"></a>SQLite 语句</h2><p>所有的 SQLite 语句可以以任何关键字开始，如 SELECT、INSERT、UPDATE、DELETE、ALTER、DROP 等，所有的语句以分号 <strong>;</strong> 结束。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> sqlite </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js简介</title>
      <link href="/2024/08/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/js-basic/"/>
      <url>/2024/08/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/js/js-basic/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-简介"><a href="#JavaScript-简介" class="headerlink" title="JavaScript 简介"></a>JavaScript 简介</h1><hr><p>JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p><hr><h2 id="JavaScript-是脚本语言"><a href="#JavaScript-是脚本语言" class="headerlink" title="JavaScript 是脚本语言"></a>JavaScript 是脚本语言</h2><p>JavaScript 是一种轻量级的编程语言。</p><p>JavaScript 是可插入 HTML 页面的编程代码。</p><p>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。</p><p>JavaScript 很容易学习。</p><hr><h2 id="您将学到什么"><a href="#您将学到什么" class="headerlink" title="您将学到什么"></a>您将学到什么</h2><p>下面是您将在本教程中学到的主要内容。</p><hr><h2 id="JavaScript：直接写入-HTML-输出流"><a href="#JavaScript：直接写入-HTML-输出流" class="headerlink" title="JavaScript：直接写入 HTML 输出流"></a>JavaScript：直接写入 HTML 输出流</h2><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;</span>); </span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;p&gt;这是一个段落。&lt;/p&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><p>您只能在 HTML 输出中使用 document.write。如果您在文档加载后使用该方法，会覆盖整个文档。    </p><hr><h2 id="JavaScript：对事件的反应"><a href="#JavaScript：对事件的反应" class="headerlink" title="JavaScript：对事件的反应"></a>JavaScript：对事件的反应</h2><p><strong>实例</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> onclick=<span class="string">&quot;alert(&#x27;欢迎!&#x27;)&quot;</span>&gt;点我!&lt;/button&gt;</span><br></pre></td></tr></table></figure><br>alert() 函数在 JavaScript 中并不常用，但它对于代码测试非常方便。</p><p>onclick 事件只是您即将在本教程中学到的众多事件之一。</p><hr><h2 id="JavaScript：改变-HTML-内容"><a href="#JavaScript：改变-HTML-内容" class="headerlink" title="JavaScript：改变 HTML 内容"></a>JavaScript：改变 HTML 内容</h2><p>使用 JavaScript 来处理 HTML 内容是非常强大的功能。</p><p><strong>实例</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>); <span class="comment">//查找元素 x.innerHTML=&quot;Hello JavaScript&quot;;</span></span><br><span class="line"><span class="comment">//改变内容</span></span><br></pre></td></tr></table></figure></p><p>您会经常看到 <strong>document.getElementById(“</strong>_<strong>some id</strong>_<strong>“)</strong> 。这个方法是 HTML DOM 中定义的。</p><p>DOM (<strong>D</strong> ocument <strong>O</strong> bject <strong>M</strong> odel)（文档对象模型）是用于访问 HTML 元素的正式 W3C 标准。</p><p>您将在本教程的多个章节中学到有关 HTML DOM 的知识。</p><hr><h2 id="JavaScript：改变-HTML-图像"><a href="#JavaScript：改变-HTML-图像" class="headerlink" title="JavaScript：改变 HTML 图像"></a>JavaScript：改变 HTML 图像</h2><p>本例会动态地改变 HTML \<image> 的来源（src）：</p><h2 id="点亮灯泡"><a href="#点亮灯泡" class="headerlink" title="点亮灯泡"></a>点亮灯泡</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">changeImage</span>(<span class="params"></span>)</span><br><span class="line">&#123;</span><br><span class="line">    element=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myimage&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> (element.<span class="property">src</span>.<span class="title function_">match</span>(<span class="string">&quot;bulbon&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        element.<span class="property">src</span>=<span class="string">&quot;/images/pic_bulboff.gif&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        element.<span class="property">src</span>=<span class="string">&quot;/images/pic_bulbon.gif&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;myimage&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;changeImage()&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/images/pic_bulboff.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>点击以下灯泡查看效果：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt; </span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span> </span><br><span class="line">&lt;/head&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">function</span> <span class="title function_">changeImage</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">element=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;myimage&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">if</span> (element.<span class="property">src</span>.<span class="title function_">match</span>(<span class="string">&quot;bulbon&quot;</span>))</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">element.<span class="property">src</span>=<span class="string">&quot;https://www.runoob.com/images/pic_bulboff.gif&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">else</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">element.<span class="property">src</span>=<span class="string">&quot;https://www.runoob.com/images/pic_bulbon.gif&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;myimage&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;changeImage()&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://www.runoob.com/images/pic_bulboff.gif&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>点击灯泡就可以打开或关闭这盏灯<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line">点击灯泡就可以打开或关闭这盏灯</span><br></pre></td></tr></table></figure><p><meta charset="utf-8"> </p><p><title>菜鸟教程(runoob.com)</title><br>&lt;/head&gt;</p><p><body></p><script>function changeImage(){    element=document.getElementById('myimage')    if (element.src.match("bulbon"))    {        element.src="https://www.runoob.com/images/pic_bulboff.gif";    }    else    {        element.src="https://www.runoob.com/images/pic_bulbon.gif";    }}</script><img id="myimage" onclick="changeImage()" src="https://www.runoob.com/images/pic_bulboff.gif" width="100" height="180"><p>点击灯泡就可以打开或关闭这盏灯</p></body></html>点击灯泡就可以打开或关闭这盏灯> 以上实例中代码 **element.src.match("bulbon")** 的作用意思是：检索 **< img id="myimage"> onclick="changeImage()" src="/images/pic_bulboff.gif" width="100"> height="180">** 里面 src 属性的值有没有包含 bulbon 这个字符串，如果存在字符串 **bulbon** ，图片 **src**> 更新为 **bulboff.gif** ，若匹配不到 **bulbon** 字符串，**src** 则更新为 **bulbon.gif**JavaScript 能够改变任意 HTML 元素的大多数属性，而不仅仅是图片。* * *## JavaScript：改变 HTML 样式改变 HTML 元素的样式，属于改变 HTML 属性的变种。**实例**<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>) <span class="comment">//找到元素</span></span><br><span class="line">x.<span class="property">style</span>.<span class="property">color</span>=<span class="string">&quot;#ff0000&quot;</span>; <span class="comment">//改变样式</span></span><br></pre></td></tr></table></figure>* * *## JavaScript：验证输入JavaScript 常用于验证用户的输入。**实例**<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="title function_">isNaN</span>(<span class="params">x</span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&quot;不是数字&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>以上实例只是普通的验证，如果要在生产环境中使用，需要严格判断，如果输入的空格，或者连续空格 isNaN是判别不出来的。可以添加正则来判断（后续章节会说明）：**实例**<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">isNaN</span>(x)||x.<span class="title function_">replace</span>(<span class="regexp">/(^\s*)|(\s*$)/g</span>,<span class="string">&quot;&quot;</span>)==<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;不是数字&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>)* * ***您知道吗**？JavaScript 与 Java 是两种完全不同的语言，无论在概念上还是设计上。  Java（由 Sun 发明）是更复杂的编程语言。  ECMA-262 是 JavaScript 标准的官方名称。  JavaScript 由 Brendan Eich 发明。它于 1995 年出现在 Netscape 中（该浏览器已停止更新），并于 1997 年被ECMA（一个标准协会）采纳。  * * *## ECMAScript 版本JavaScript 已经由 ECMA（欧洲电脑制造商协会）通过 ECMAScript 实现语言的标准化。| 年份                          | 名称           | 描述                         || ----------------------------- | -------------- | ---------------------------- || 1997                          | ECMAScript 1   | 第一个版本                   || 1998                          | ECMAScript 2   | 版本变更                     || 1999                          | ECMAScript 3   | 添加正则表达式               || 添加 try/catch                |                |                              || ECMAScript 4                  | 没有发布       |                              || 2009                          | ECMAScript 5   | 添加 "strict mode"，严格模式 || 添加 JSON 支持                |                |                              || 2011                          | ECMAScript 5.1 | 版本变更                     || 2015                          | ECMAScript 6   | 添加类和模块                 || 2016                          | ECMAScript 7   | 增加指数运算符 (**)          || 增加 Array.prototype.includes |                |                              |> ECMAScript 6 也称为 ECMAScript 2015。>> ECMAScript 7 也称为 ECMAScript 2016。# JavaScript 用法------HTML 中的 Javascript 脚本代码必须位于 \<script>与\</script> 标签之间。Javascript 脚本代码可被放置在 HTML 页面的 \<body> 和 \<head> 部分中。------## \<script> 标签如需在 HTML 页面中插入 JavaScript，请使用 \<script> 标签。\<script> 和 \</script> 会告诉 JavaScript 在何处开始和结束。\<script> 和 \</script> 之间的代码行包含了 JavaScript:\<script> alert("我的第一个 JavaScript"); \</script><p>您无需理解上面的代码。只需明白，浏览器会解释并执行位于 \<script> 和 \</script>之间的 JavaScript 代码 </p><blockquote><p>那些老旧的实例可能会在 \<script> 标签中使用 type=”text/javascript”。现在已经不必这样做了。&gt; JavaScript 是所有现代浏览器以及 HTML5 中的默认脚本语言。 </p></blockquote><hr><h2 id="中的-JavaScript"><a href="#中的-JavaScript" class="headerlink" title="\ 中的 JavaScript"></a>\<body> 中的 JavaScript</h2><p>在本例中，JavaScript 会在页面加载时向 HTML 的 \<body> 写文本：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&quot;&lt;p&gt;这是一个段落&lt;/p&gt;&quot;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="JavaScript-函数和事件"><a href="#JavaScript-函数和事件" class="headerlink" title="JavaScript 函数和事件"></a>JavaScript 函数和事件</h2><p>上面例子中的 JavaScript 语句，会在页面加载时执行。</p><p>通常，我们需要在某个事件发生时执行代码，比如当用户点击按钮时。</p><p>如果我们把 JavaScript 代码放入函数中，就可以在事件发生时调用该函数。</p><hr><h2 id="在-或者-的JavaScript"><a href="#在-或者-的JavaScript" class="headerlink" title="在 \ 或者 \ 的JavaScript"></a>在 \<head> 或者 \<body> 的JavaScript</h2><p>您可以在 HTML 文档中放入不限数量的脚本。</p><p>脚本可位于 HTML 的 \<body> 或 \<head> 部分中，或者同时存在于两个部分中。</p><p>通常的做法是把函数放入 \<head> 部分中，或者放在页面底部。这样就可以把它们安置到同一处位置，不会干扰页面的内容。</p><hr><h2 id="中的-JavaScript-函数"><a href="#中的-JavaScript-函数" class="headerlink" title="\ 中的 JavaScript 函数"></a>\<head> 中的 JavaScript 函数</h2><p>在本例中，我们把一个 JavaScript 函数放置到 HTML 页面的 \<head> 部分。</p><p>该函数会在点击按钮时被调用：</p><p><strong>实例</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#123;     </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;我的第一个 JavaScript 函数&quot;</span>; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>尝试一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><hr><h2 id="中的-JavaScript-函数-1"><a href="#中的-JavaScript-函数-1" class="headerlink" title="\ 中的 JavaScript 函数"></a>\<body> 中的 JavaScript 函数</h2><p>在本例中，我们把一个 JavaScript 函数放置到 HTML 页面的 \<body> 部分。</p><p>该函数会在点击按钮时被调用：</p><p><strong>实例</strong><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的 Web 页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;myFunction()&quot;</span>&gt;</span>尝试一下<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#123;    </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;我的第一个 JavaScript 函数&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125; </span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><hr><h2 id="外部的-JavaScript"><a href="#外部的-JavaScript" class="headerlink" title="外部的 JavaScript"></a>外部的 JavaScript</h2><p>也可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。</p><p>外部 JavaScript 文件的文件扩展名是 .js。</p><p>如需使用外部文件，请在 \<script> 标签的 “src” 属性中设置该 .js 文件：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt; </span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;myScript.js&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>你可以将脚本放置于 \<head> 或者 \<body>中，放在 \<script> 标签中的脚本与外部引用的脚本运行效果完全一致。</p><p>myScript.js 文件代码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myFunction</span>(<span class="params"></span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;demo&quot;</span>).<span class="property">innerHTML</span>=<span class="string">&quot;我的第一个 JavaScript 函数&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>外部脚本不能包含 \<script> 标签。 </p><h1 id="Chrome-浏览器中执行-JavaScript"><a href="#Chrome-浏览器中执行-JavaScript" class="headerlink" title="Chrome 浏览器中执行 JavaScript"></a>Chrome 浏览器中执行 JavaScript</h1><p>本章节为大家介绍如何在 Chrome 浏览器上进行 JavaScript 代码的运行与调试。</p><p>Chrome 是由 Google 开发的免费网页浏览器，对于前端开发来说（尤其是调试代码）非常方便。</p><p>Chrome 官网地址：<a href="https://www.google.com/intl/zh-CN/chrome/。">https://www.google.com/intl/zh-CN/chrome/。</a></p><p>我们在 Chrome 浏览器中可以通过按下 <strong>F12</strong> 按钮或者右击页面，选择<strong>“检查”</strong>来开启开发者工具。</p><p><img src="https://image.chenjichao.site/file/74e32ffc2ef6f1e8d3eec.jpg" alt="img"></p><p>也可以在右上角菜单栏选择 <strong>“更多工具”=》”开发者工具”</strong> 来开启：</p><p><img src="https://image.chenjichao.site/file/9a6d3d3da0e2f107b2e14.jpg" alt="img"></p><h2 id="1、Console-窗口调试-JavaScript-代码"><a href="#1、Console-窗口调试-JavaScript-代码" class="headerlink" title="1、Console 窗口调试 JavaScript 代码"></a>1、Console 窗口调试 JavaScript 代码</h2><p>打开开发者工具后，我们可以在 Console 窗口调试 JavaScript代码，如下图：</p><p><img src="https://image.chenjichao.site/file/8180b5fbb8bddcea1ecbf.jpg" alt="img"></p><p>上图中我们在 <strong>&gt;</strong> 符号后输入我们要执行的代码 <strong>console.log(“runoob”)</strong>，按回车后执行。</p><p>我们也可以在其他地方复制一段代码过来执行，比如复制以下代码到 Console 窗口，按回车执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;runoob-1&quot;)</span><br><span class="line">console.log(&quot;runoob-2&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://image.chenjichao.site/file/3da57ccbe87ae8074f811.jpg" alt="img"></p><p>清空 Console 窗口到内容可以按以下按钮：</p><p><img src="https://image.chenjichao.site/file/b15f8dced44a463b29c1f.jpg" alt="img"></p><hr><h2 id="2、Chrome-snippets-小脚本"><a href="#2、Chrome-snippets-小脚本" class="headerlink" title="2、Chrome snippets 小脚本"></a>2、Chrome snippets 小脚本</h2><p>我们也可以在 Chrome 浏览器中创建一个脚本来执行，在开发者工具中点击 Sources 面板，选择 Snippets 选项卡，在导航器中右击鼠标，然后选择 Create new snippet 来新建一个脚本文件：</p><p><img src="https://image.chenjichao.site/file/12c7a896e40ce692d66d8.jpg" alt="img"></p><p>如果你没看到 Snippets ，可以点下面板上到 <strong>&gt;&gt;</strong> 就能看到了。</p><p><img src="https://image.chenjichao.site/file/29dafdd99712b80ad1b29.jpg" alt="img"></p><p>点击 Create new snippet 后，会自动创建一个文件，你只需在右侧窗口输入以下代码，然后按 Command+S（Mac）或 Ctrl+S（Windows 和 Linux）保存更改即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(&quot;runoob-1&quot;)</span><br><span class="line">console.log(&quot;runoob-2&quot;)</span><br></pre></td></tr></table></figure><p>保存后，右击文件名，选择 “Run” 执行代码：</p><p><img src="https://image.chenjichao.site/file/812ba7ff2db5963a6d011.jpg" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php表单</title>
      <link href="/2024/08/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/forms/"/>
      <url>/2024/08/09/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/forms/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-表单和用户输入"><a href="#PHP-表单和用户输入" class="headerlink" title="PHP 表单和用户输入"></a>PHP 表单和用户输入</h1><hr><p>PHP 中的 $_GET 和 $_POST 变量用于检索表单中的信息，比如用户输入。</p><hr><h2 id="PHP-表单处理"><a href="#PHP-表单处理" class="headerlink" title="PHP 表单处理"></a>PHP 表单处理</h2><p>有一点很重要的事情值得注意，当处理 HTML 表单时，PHP 能把来自 HTML 页面中的表单元素自动变成可供 PHP 脚本使用。</p><p><strong>实例</strong></p><p>下面的实例包含了一个 HTML 表单，带有两个输入框和一个提交按钮。</p><h2 id="form-html-文件代码："><a href="#form-html-文件代码：" class="headerlink" title="form.html 文件代码："></a>form.html 文件代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;</span><br><span class="line">菜鸟教程(runoob.com)</span><br><span class="line">&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;welcome.php&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">名字: &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;fname&quot;</span>&gt;</span><br><span class="line">年龄: &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;age&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>当用户填写完上面的表单并点击提交按钮时，表单的数据会被送往名为 “welcome.php” 的 PHP 文件：</p><h2 id="welcome-php-文件代码："><a href="#welcome-php-文件代码：" class="headerlink" title="welcome.php 文件代码："></a>welcome.php 文件代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">欢迎</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_POST</span>[<span class="string">&quot;fname&quot;</span>];</span><br><span class="line"><span class="meta">?&gt;</span>!</span><br><span class="line">&lt;br&gt;</span><br><span class="line">你的年龄是</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_POST</span>[<span class="string">&quot;age&quot;</span>];</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">岁。</span><br></pre></td></tr></table></figure><p>通过浏览器访问演示如下：</p><p><img src="https://image.chenjichao.site/file/00958640a72dfd1436aa1.gif" alt=""></p><hr><h2 id="PHP-获取下拉菜单的数据"><a href="#PHP-获取下拉菜单的数据" class="headerlink" title="PHP 获取下拉菜单的数据"></a>PHP 获取下拉菜单的数据</h2><h3 id="PHP-下拉菜单单选"><a href="#PHP-下拉菜单单选" class="headerlink" title="PHP 下拉菜单单选"></a>PHP 下拉菜单单选</h3><p>以下实例我们设置了下拉菜单三个选项，表单使用 GET 方式获取数据，action 属性值为空表示提交到当前脚本，我们可以通过 select 的 name<br>属性获取下拉菜单的值：</p><h2 id="php-form-select-php-文件代码："><a href="#php-form-select-php-文件代码：" class="headerlink" title="php_form_select.php 文件代码："></a>php_form_select.php 文件代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$q</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>])? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$q</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$q</span> ==<span class="string">&#x27;RUNOOB&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;菜鸟教程&lt;br&gt;http://www.runoob.com&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$q</span> ==<span class="string">&#x27;GOOGLE&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Google 搜索&lt;br&gt;http://www.google.com&#x27;</span>; </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$q</span> ==<span class="string">&#x27;TAOBAO&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;淘宝&lt;br&gt;http://www.taobao.com&#x27;</span>; &#125; </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; </span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">&lt;select name=<span class="string">&quot;q&quot;</span>&gt; </span><br><span class="line">&lt;option value=<span class="string">&quot;&quot;</span>&gt;选择一个站点:&lt;/option&gt;</span><br><span class="line">&lt;option value=<span class="string">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;/option&gt; </span><br><span class="line">&lt;option value=<span class="string">&quot;GOOGLE&quot;</span>&gt;Google&lt;/option&gt; </span><br><span class="line">&lt;option value=<span class="string">&quot;TAOBAO&quot;</span>&gt;Taobao&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PHP-下拉菜单多选"><a href="#PHP-下拉菜单多选" class="headerlink" title="PHP 下拉菜单多选"></a>PHP 下拉菜单多选</h3><p>如果下拉菜单是多选的（ multiple=”multiple”），我们可以通过将设置 select <strong>name=”q[]”</strong> 以数组的方式获取，以下使用<br>POST 方式提交，代码如下所示：</p><h2 id="php-form-select-mul-php-文件代码："><a href="#php-form-select-mul-php-文件代码：" class="headerlink" title="php_form_select_mul.php 文件代码："></a>php_form_select_mul.php 文件代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$q</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;q&#x27;</span>])? <span class="variable">$_POST</span>[<span class="string">&#x27;q&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$q</span>)) &#123;</span><br><span class="line">        <span class="variable">$sites</span> = <span class="keyword">array</span>( <span class="string">&#x27;RUNOOB&#x27;</span> =&gt; <span class="string">&#x27;菜鸟教程: http://www.runoob.com&#x27;</span>, <span class="string">&#x27;GOOGLE&#x27;</span> =&gt; <span class="string">&#x27;Google 搜索: http://www.google.com&#x27;</span>, <span class="string">&#x27;TAOBAO&#x27;</span> =&gt; <span class="string">&#x27;淘宝: http://www.taobao.com&#x27;</span>, ); <span class="keyword">foreach</span>(<span class="variable">$q</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">            <span class="comment">// PHP_EOL 为常量，用于换行</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$sites</span>[<span class="variable">$val</span>] . PHP_EOL; &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt; </span><br><span class="line">        &lt;select multiple=<span class="string">&quot;multiple&quot;</span> name=<span class="string">&quot;q[]&quot;</span>&gt;</span><br><span class="line">        &lt;option value=<span class="string">&quot;&quot;</span>&gt;选择一个站点:&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;/option&gt; </span><br><span class="line">            &lt;option value=<span class="string">&quot;GOOGLE&quot;</span>&gt;Google&lt;/option&gt;</span><br><span class="line">            &lt;option value=<span class="string">&quot;TAOBAO&quot;</span>&gt;Taobao&lt;/option&gt;</span><br><span class="line">&lt;/select&gt; </span><br><span class="line">            &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="单选按钮表单"><a href="#单选按钮表单" class="headerlink" title="单选按钮表单"></a>单选按钮表单</h2><p>PHP 单选按钮表单中 name 属性的值是一致的，value 值是不同的，代码如下所示：</p><h2 id="php-form-radio-php-文件代码："><a href="#php-form-radio-php-文件代码：" class="headerlink" title="php_form_radio.php 文件代码："></a>php_form_radio.php 文件代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$q</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>])? <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>]) : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$q</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$q</span> ==<span class="string">&#x27;RUNOOB&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;菜鸟教程&lt;br&gt;http://www.runoob.com&#x27;</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$q</span> ==<span class="string">&#x27;GOOGLE&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Google 搜索&lt;br&gt;http://www.google.com&#x27;</span>; </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$q</span> ==<span class="string">&#x27;TAOBAO&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;淘宝&lt;br&gt;http://www.taobao.com&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;q&quot;</span> value=<span class="string">&quot;RUNOOB&quot;</span>/&gt;Runoob</span><br><span class="line">&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;q&quot;</span> value=<span class="string">&quot;GOOGLE&quot;</span> /&gt;Google</span><br><span class="line">&lt;input type=<span class="string">&quot;radio&quot;</span> name=<span class="string">&quot;q&quot;</span> value=<span class="string">&quot;TAOBAO&quot;</span> /&gt;Taobao</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="checkbox-复选框"><a href="#checkbox-复选框" class="headerlink" title="checkbox 复选框"></a>checkbox 复选框</h2><p>PHP checkbox 复选框可以选择多个值：</p><h2 id="php-form-select-checkbox-php-文件代码："><a href="#php-form-select-checkbox-php-文件代码：" class="headerlink" title="php_form_select_checkbox.php 文件代码："></a>php_form_select_checkbox.php 文件代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$q</span> = <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;q&#x27;</span>])? <span class="variable">$_POST</span>[<span class="string">&#x27;q&#x27;</span>] : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$q</span>)) &#123;</span><br><span class="line">    <span class="variable">$sites</span> = <span class="keyword">array</span>( <span class="string">&#x27;RUNOOB&#x27;</span> =&gt; <span class="string">&#x27;菜鸟教程: http://www.runoob.com&#x27;</span>, <span class="string">&#x27;GOOGLE&#x27;</span> =&gt; <span class="string">&#x27;Google 搜索: http://www.google.com&#x27;</span>, <span class="string">&#x27;TAOBAO&#x27;</span> =&gt; <span class="string">&#x27;淘宝: http://www.taobao.com&#x27;</span>, );</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$q</span> <span class="keyword">as</span> <span class="variable">$val</span>) &#123;</span><br><span class="line">        <span class="comment">// PHP_EOL 为常量，用于换行</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$sites</span>[<span class="variable">$val</span>] . PHP_EOL; &#125; </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;form action=<span class="string">&quot;&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;q[]&quot;</span> value=<span class="string">&quot;RUNOOB&quot;</span>&gt;Runoob&lt;br&gt; </span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;q[]&quot;</span> value=<span class="string">&quot;GOOGLE&quot;</span>&gt;Google&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;checkbox&quot;</span> name=<span class="string">&quot;q[]&quot;</span> value=<span class="string">&quot;TAOBAO&quot;</span>&gt; Taobao&lt;br&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="表单验证"><a href="#表单验证" class="headerlink" title="表单验证"></a>表单验证</h1><p>我们应该尽可能的对用户的输入进行验证（通过客户端脚本）。浏览器验证速度更快，并且可以减轻服务器的压力。</p><p>如果用户输入需要插入数据库，您应该考虑使用服务器验证。在服务器验证表单的一种好的方式是，把表单的数据传给当前页面（异步提交的方式更好），而不是跳转到不同的页面。这样用户就可以在同一张表单页面得到错误信息。用户也就更容易发现错误了。</p><h2 id="PHP-表单验证"><a href="#PHP-表单验证" class="headerlink" title="PHP 表单验证"></a>PHP 表单验证</h2><p> <strong>在处理PHP表单时我们需要考虑安全性。</strong> 本章节我们将展示PHP表单数据安全处理，为了防止黑客及垃圾信息我们需要对表单进行数据安全验证。 </p><p>在本章节介绍的HTML表单中包含以下输入字段： 必须与可选文本字段，单选按钮，及提交按钮：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt; </span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;</span><br><span class="line">菜鸟教程(runoob.com)</span><br><span class="line">&lt;/title&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.error &#123;color: <span class="comment">#FF0000;&#125;</span></span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt; </span><br><span class="line"><span class="meta">&lt;?php</span><span class="comment">// 定义变量并默认设置为空值</span></span><br><span class="line"><span class="variable">$nameErr</span> = <span class="variable">$emailErr</span> = <span class="variable">$genderErr</span> = <span class="variable">$websiteErr</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$email</span> = <span class="variable">$gender</span> = <span class="variable">$comment</span> = <span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_METHOD&quot;</span>] == <span class="string">&quot;POST&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$nameErr</span> = <span class="string">&quot;名字是必需的&quot;</span>;    </span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line"><span class="variable">$name</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]);<span class="comment">// 检测名字是否只包含字母跟空格</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^[a-zA-Z ]*$/&quot;</span>,<span class="variable">$name</span>))&#123;</span><br><span class="line"><span class="variable">$nameErr</span> = <span class="string">&quot;只允许字母和空格&quot;</span>;</span><br><span class="line">&#125;    </span><br><span class="line">&#125;        </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>]))&#123;      </span><br><span class="line"><span class="variable">$emailErr</span> = <span class="string">&quot;邮箱是必需的&quot;</span>;    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;        </span><br><span class="line"><span class="variable">$email</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>]);<span class="comment">// 检测邮箱是否合法 </span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/([\w\-]+\@[\w\-]+\.[\w\-]+)/&quot;</span>,<span class="variable">$email</span>))&#123;</span><br><span class="line"><span class="variable">$emailErr</span> = <span class="string">&quot;非法邮箱格式&quot;</span>;         </span><br><span class="line">&#125;    </span><br><span class="line">&#125;        </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;        </span><br><span class="line"><span class="variable">$website</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>]);        <span class="comment">// 检测 URL 地址是否合法</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i&quot;</span>,<span class="variable">$website</span>))&#123;</span><br><span class="line"><span class="variable">$websiteErr</span> = <span class="string">&quot;非法的 URL 的地址&quot;</span>;         </span><br><span class="line">&#125;    </span><br><span class="line">&#125;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$comment</span> = <span class="string">&quot;&quot;</span>;    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;       </span><br><span class="line"><span class="variable">$comment</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>]))&#123;       </span><br><span class="line"><span class="variable">$genderErr</span> = <span class="string">&quot;性别是必需的&quot;</span>;    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;     </span><br><span class="line"><span class="variable">$gender</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>]);    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$data</span>);  </span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$data</span>); </span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;h2&gt;PHP 表单验证实例&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;&lt;span <span class="class"><span class="keyword">class</span>=&quot;<span class="title">error</span>&quot;&gt;* 必需字段。&lt;/<span class="title">span</span>&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">post</span>&quot; <span class="title">action</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> <span class="title">htmlspecialchars</span>($<span class="title">_SERVER</span>[&quot;<span class="title">PHP_SELF</span>&quot;]);?&gt;&quot;&gt;</span></span><br><span class="line"><span class="class">名字: &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">name</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">name</span>;?&gt;&quot;&gt; </span></span><br><span class="line"><span class="class">&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">error</span>&quot;&gt;* &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">nameErr</span>;?&gt;&lt;/<span class="title">span</span>&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">br</span>&gt;  </span></span><br><span class="line"><span class="class"><span class="title">E</span>-<span class="title">mail</span>: &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">email</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">email</span>;?&gt;&quot;&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">error</span>&quot;&gt;*&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">emailErr</span>;?&gt;&lt;/<span class="title">span</span>&gt; </span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">br</span>&gt;  </span></span><br><span class="line"><span class="class">网址: &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">name</span>=&quot;<span class="title">website</span>&quot; <span class="title">value</span>=&quot;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">website</span>;?&gt;&quot;&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">error</span>&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">websiteErr</span>;?&gt;&lt;/<span class="title">span</span>&gt; </span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">br</span>&gt;   </span></span><br><span class="line"><span class="class">备注:&lt;<span class="title">textarea</span> <span class="title">name</span>=&quot;<span class="title">comment</span>&quot; <span class="title">rows</span>=&quot;5&quot; <span class="title">cols</span>=&quot;40&quot;&gt;&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">comment</span>;?&gt;&lt;/<span class="title">textarea</span>&gt; </span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">br</span>&gt; </span></span><br><span class="line"><span class="class">性别:&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">radio</span>&quot; <span class="title">name</span>=&quot;<span class="title">gender</span>&quot; &lt;?<span class="title">php</span> <span class="title">if</span> (<span class="title">isset</span>($<span class="title">gender</span>) &amp;&amp; $<span class="title">gender</span>==&quot;<span class="title">female</span>&quot;) <span class="title">echo</span> &quot;<span class="title">checked</span>&quot;;?&gt; <span class="title">value</span>=&quot;<span class="title">female</span>&quot;&gt;女  </span></span><br><span class="line"><span class="class"> &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">radio</span>&quot; <span class="title">name</span>=&quot;<span class="title">gender</span>&quot; &lt;?<span class="title">php</span> <span class="title">if</span> (<span class="title">isset</span>($<span class="title">gender</span>) &amp;&amp; $<span class="title">gender</span>==&quot;<span class="title">male</span>&quot;) <span class="title">echo</span> &quot;<span class="title">checked</span>&quot;;?&gt;  <span class="title">value</span>=&quot;<span class="title">male</span>&quot;&gt;男  </span></span><br><span class="line"><span class="class">&lt;<span class="title">span</span> <span class="title">class</span>=&quot;<span class="title">error</span>&quot;&gt;* </span></span><br><span class="line"><span class="class">        &lt;?<span class="title">php</span> </span></span><br><span class="line"><span class="class">        <span class="title">echo</span> $<span class="title">genderErr</span>;</span></span><br><span class="line"><span class="class">         ?&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">span</span>&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">br</span>&gt;&lt;<span class="title">br</span>&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">submit</span>&quot; <span class="title">name</span>=&quot;<span class="title">submit</span>&quot; <span class="title">value</span>=&quot;<span class="title">Submit</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">echo</span> &quot;&lt;<span class="title">h2</span>&gt;您输入的内容是:&lt;/<span class="title">h2</span>&gt;&quot;;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> $<span class="title">name</span>;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> &quot;&lt;<span class="title">br</span>&gt;&quot;;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> $<span class="title">email</span>;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> &quot;&lt;<span class="title">br</span>&gt;&quot;;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> $<span class="title">website</span>;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> &quot;&lt;<span class="title">br</span>&gt;&quot;;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> $<span class="title">comment</span>;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> &quot;&lt;<span class="title">br</span>&gt;&quot;;</span></span><br><span class="line"><span class="class"><span class="title">echo</span> $<span class="title">gender</span>;?&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br>上述表单验证规则如下：</p><div class="table-container"><table><thead><tr><th>字段</th><th>验证规则</th></tr></thead><tbody><tr><td>名字</td><td>必须。 +只能包含字母和空格</td></tr><tr><td>E-mail</td><td>必须。 + 必须是一个有效的电子邮件地址（包含’@’和’.’）</td></tr><tr><td>网址</td><td>可选。如果存在，它必须包含一个有效的URL</td></tr><tr><td>备注</td><td>可选。多行输入字段（文本域）</td></tr><tr><td>性别</td><td>必须。 必须选择一个</td></tr></tbody></table></div><p>首先让我们先看看纯HTML的表单代码：</p><hr><h2 id="文本字段"><a href="#文本字段" class="headerlink" title="文本字段"></a>文本字段</h2><p>“名字”, “E-mail”, 及”网址”字段为文本输入元素，”备注”字段是 textarea。HTML代码如下所示:</p><p>​    </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">“名字”: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span><br><span class="line"></span><br><span class="line">E-mail: &lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;</span><br><span class="line"></span><br><span class="line">网址: &lt;input type=&quot;text&quot; name=&quot;website&quot;&gt;</span><br><span class="line"></span><br><span class="line">备注: &lt;textarea name=&quot;comment&quot; rows=&quot;5&quot; cols=&quot;40&quot;&gt;&lt;/textarea&gt;</span><br></pre></td></tr></table></figure><p>​    </p><hr><h2 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h2><p>“性别”字段是单选按钮，HTML代码如下所示：</p><p>​    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">性别:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男</span><br></pre></td></tr></table></figure><p>​    </p><hr><h2 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h2><p>HTML 表单代码如下所示:</p><p>​    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&lt;?php echo htmlspecialchars($_SERVER[&quot;</span><span class="attr">PHP_SELF</span>&quot;]);?&gt;</span>&quot;&gt;</span><br></pre></td></tr></table></figure><p>​    </p><p>该表单使用 <strong>method=”post”</strong> 方法来提交数据。</p><p> <strong>什么是 $_SERVER[“PHP_SELF”] 变量?</strong>  </p><p>$_SERVER[“PHP_SELF”]是超级全局变量，返回当前正在执行脚本的文件名，与 document root相关。  </p><p>所以， $_SERVER[“PHP_SELF”] 会发送表单数据到当前页面，而不是跳转到不同的页面。</p><p> <strong>什么是 htmlspecialchars()方法?</strong>  </p><p>htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。 预定义的字符是：</p><ul><li><p>&amp; （和号） 成为 \&amp;</p></li><li><p>“ （双引号） 成为 \&quot;</p></li><li><p>‘ （单引号） 成为 \&#039;</p></li><li><p>&lt; （小于） 成为 \&lt;</p></li><li><p>> （大于） 成为 \&gt;</p></li></ul><hr><h2 id="PHP表单中需引起注重的地方？"><a href="#PHP表单中需引起注重的地方？" class="headerlink" title="PHP表单中需引起注重的地方？"></a>PHP表单中需引起注重的地方？</h2><p>$_SERVER[“PHP_SELF”] 变量有可能会被黑客使用！</p><p>当黑客使用跨网站脚本的HTTP链接来攻击时，$_SERVER[“PHP_SELF”]服务器变量也会被植入脚本。原因就是跨网站脚本是附在执行文件的路径后面的，因此$_SERVER[“PHP_SELF”]的字符串就会包含HTTP链接后面的JavaScript程序代码。</p><p> <strong>XSS又叫 CSS (Cross-Site Script) ,跨站脚本攻击。恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行，从而达到恶意用户的特殊目的。</strong> </p><p>指定以下表单文件名为 “test_form.php”:</p><pre><code>&lt;form method=&quot;post&quot; action=&quot;&lt;?php echo $_SERVER[&quot;PHP_SELF&quot;];?&gt;&quot;&gt;</code></pre><p>现在，我们使用URL来指定提交地址 “test_form.php”,以上代码修改为如下所示:</p><pre><code>&lt;form method=&quot;post&quot; action=&quot;test_form.php&quot;&gt;</code></pre><p>这样做就很好了。</p><p>但是，考虑到用户会在浏览器地址栏中输入以下地址:</p><pre><code>http://www.runoob.com/test_form.php/%22%3E%3Cscript%3Ealert(&#39;hacked&#39;)%3C/script%3E</code></pre><p>以上的 URL 中，将被解析为如下代码并执行：</p><pre><code>&lt;form method=&quot;post&quot; action=&quot;test_form.php/&quot;&gt;&lt;script&gt;alert(&#39;hacked&#39;)&lt;/script&gt;</code></pre><p>代码中添加了 script 标签，并添加了alert命令。 当页面载入时会执行该Javascript代码（用户会看到弹出框）。<br>这仅仅只是一个简单的实例来说明PHP_SELF变量会被黑客利用。</p><p>请注意， <strong>任何JavaScript代码可以添加在 \<script>标签中！</strong> 黑客可以利用这点重定向页面到另外一台服务器的页面上，页面代码文件中可以保护恶意代码，代码可以修改全局变量或者获取用户的表单数据。</p><hr><h2 id="如何避免-SERVER-“PHP-SELF”-被利用"><a href="#如何避免-SERVER-“PHP-SELF”-被利用" class="headerlink" title="如何避免 $_SERVER[“PHP_SELF”] 被利用?"></a>如何避免 $_SERVER[“PHP_SELF”] 被利用?</h2><p>$_SERVER[“PHP_SELF”] 可以通过 htmlspecialchars() 函数来避免被利用。</p><p>form 代码如下所示：</p><pre><code>&lt;form method=&quot;post&quot; action=&quot;&lt;?php echo htmlspecialchars($_SERVER[&quot;PHP_SELF&quot;]);?&gt;&quot;&gt;</code></pre><p>htmlspecialchars() 把一些预定义的字符转换为 HTML 实体。现在如果用户想利用 PHP_SELF 变量, 结果将输出如下所示：</p><pre><code>&lt;form method=&quot;post&quot; action=&quot;test_form.php/&amp;quot;&amp;gt;&amp;lt;script&amp;gt;alert(&#39;hacked&#39;)&amp;lt;/script&amp;gt;&quot;&gt;</code></pre><p>尝试该漏洞失败！</p><hr><h2 id="使用-PHP-验证表单数据"><a href="#使用-PHP-验证表单数据" class="headerlink" title="使用 PHP 验证表单数据"></a>使用 PHP 验证表单数据</h2><p>首先我们对用户所有提交的数据都通过 PHP 的 htmlspecialchars() 函数处理。</p><p>当我们使用 htmlspecialchars() 函数时，在用户尝试提交以下文本域:</p><p>​    </p><pre><code>&lt;script&gt;location.href(&#39;http://www.runoob.com&#39;)&lt;/script&gt;</code></pre><p>​    </p><p>该代码将不会被执行，因为它会被保存为HTML转义代码，如下所示：</p><p>​    </p><pre><code>&amp;lt;script&amp;gt;location.href(&#39;http://www.runoob.com&#39;)&amp;lt;/script&amp;gt;</code></pre><p>​    </p><p>以上代码是安全的，可以正常在页面显示或者插入邮件中。</p><p>当用户提交表单时，我们将做以下两件事情：</p><pre><code>1. 使用 PHP trim() 函数去除用户输入数据中不必要的字符 (如：空格，tab，换行)。 2. 使用PHP stripslashes()函数去除用户输入数据中的反斜杠 (\\) </code></pre><p>接下来让我们将这些过滤的函数写在一个我们自己定义的函数中，这样可以大大提高代码的复用性。</p><p>将函数命名为 test_input()。</p><p>现在，我们可以通过test_input()函数来检测 $_POST 中的所有变量, 脚本代码如下所示：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 定义变量并默认设置为空值</span></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$email</span> = <span class="variable">$gender</span> = <span class="variable">$comment</span> = <span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_METHOD&quot;</span>] == <span class="string">&quot;POST&quot;</span>) &#123;</span><br><span class="line"><span class="variable">$name</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line"><span class="variable">$email</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>]);</span><br><span class="line"><span class="variable">$website</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>]);</span><br><span class="line"><span class="variable">$comment</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>]);</span><br><span class="line"><span class="variable">$gender</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>]); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span>(<span class="params"><span class="variable">$data</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">trim</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">stripslashes</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="variable">$data</span> = <span class="title function_ invoke__">htmlspecialchars</span>(<span class="variable">$data</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意我们在执行以上脚本时，会通过$_SERVER[“REQUEST_METHOD”]来检测表单是否被提交 。如果 REQUEST_METHOD 是<br>POST, 表单将被提交 - 数据将被验证。如果表单未提交将跳过验证并显示空白。</p><p>在以上实例中使用输入项都是可选的，即使用户不输入任何数据也可以正常显示。</p><h1 id="PHP-表单-必需字段"><a href="#PHP-表单-必需字段" class="headerlink" title="PHP 表单 - 必需字段"></a>PHP 表单 - 必需字段</h1><hr><p>本章节我们将介绍如何设置表单必需字段及错误信息。</p><hr><h2 id="PHP-必需字段"><a href="#PHP-必需字段" class="headerlink" title="PHP - 必需字段"></a>PHP - 必需字段</h2><p>在上一章节我们已经介绍了表的验证规则，我们可以看到”名字”, “E-mail”, 和 “性别” 字段是必需的，各字段不能为空。</p><div class="table-container"><table><thead><tr><th>字段</th><th>验证规则</th></tr></thead><tbody><tr><td>名字</td><td>必需。 + 只能包含字母和空格</td></tr><tr><td>E-mail</td><td>必需。 + 必需包含一个有效的电子邮件地址（包含”@”和”.”）</td></tr><tr><td>网址</td><td>可选。 如果存在，它必需包含一个有效的URL</td></tr><tr><td>备注</td><td>可选。多行字段（文本域）。</td></tr><tr><td>性别</td><td>必需。必需选择一个。</td></tr></tbody></table></div><p>如果在前面的章节中，所有输入字段都是可选的。</p><p>在以下代码中我们加入了一些新的变量: $nameErr, $emailErr, $genderErr, 和<br>$websiteErr.。这些错误变量将显示在必需字段上。 我们还为每个$_POST变量增加了一个if else语句。 这些语句将检查 $_POST 变量是<br>否为空（使用php的 empty() 函数）。如果为空，将显示对应的错误信息。 如果不为空，数据将传递给test_input() 函数：</p><p>​    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 定义变量并默认设为空值</span></span><br><span class="line"><span class="variable">$nameErr</span> = <span class="variable">$emailErr</span> = <span class="variable">$genderErr</span> = <span class="variable">$websiteErr</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$email</span> = <span class="variable">$gender</span> = <span class="variable">$comment</span> = <span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_METHOD&quot;</span>] == <span class="string">&quot;POST&quot;</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$nameErr</span> = <span class="string">&quot;名字是必需的。&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$name</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$emailErr</span> = <span class="string">&quot;邮箱是必需的。&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$email</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>]);</span><br><span class="line">  &#125; </span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$website</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$comment</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$comment</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>])) &#123;</span><br><span class="line">    <span class="variable">$genderErr</span> = <span class="string">&quot;性别是必需的。&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$gender</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><hr><h2 id="PHP-显示错误信息"><a href="#PHP-显示错误信息" class="headerlink" title="PHP - 显示错误信息"></a>PHP - 显示错误信息</h2><p>在以下的HTML实例表单中，我们为每个字段中添加了一些脚本， 各个脚本会在信息输入错误时显示错误信息。(如果用户未填写信息就提交表单则会输出错误信息):</p><p>​    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&lt;?php echo htmlspecialchars($_SERVER[&#x27;PHP_SELF&#x27;]);?&gt;&quot;</span>&gt;</span> </span><br><span class="line">   名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>* <span class="meta">&lt;?php echo $nameErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   E-mail: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>* <span class="meta">&lt;?php echo $emailErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   网址: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;website&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span><span class="meta">&lt;?php echo $websiteErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   备注: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   性别:</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男</span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>* <span class="meta">&lt;?php echo $genderErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h1 id="PHP-表单-验证邮件和URL"><a href="#PHP-表单-验证邮件和URL" class="headerlink" title="PHP 表单 - 验证邮件和URL"></a>PHP 表单 - 验证邮件和URL</h1><hr><p>本章节我们将介绍如何验证 names(名称), e-mails（邮件）, 和 URLs。</p><hr><h2 id="PHP-验证名称"><a href="#PHP-验证名称" class="headerlink" title="PHP - 验证名称"></a>PHP - 验证名称</h2><p>以下代码将通过简单的方式来检测 name 字段是否包含字母和空格，如果 name 字段值不合法，将输出错误信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$name</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^[a-zA-Z ]*$/&quot;</span>,<span class="variable">$name</span>)) &#123;</span><br><span class="line">  <span class="variable">$nameErr</span> = <span class="string">&quot;只允许字母和空格&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>preg_match — 进行正则表达式匹配。  语法： <strong>int preg_match ( string $pattern , string $subject [, array $matches [, int $flags ]] )</strong> 在 subject 字符串中搜索与 pattern 给出的正则表达式相匹配的内容。如果提供了 matches ，则其会被搜索的结果所填充。$matches[0] 将包含与整个模式匹配的文本，$matches[1] 将包含与第一个捕获的括号中的子模式所匹配的文本，以此类推。</p><h2 id="PHP-验证邮件"><a href="#PHP-验证邮件" class="headerlink" title="PHP - 验证邮件"></a>PHP - 验证邮件</h2><p>以下代码将通过简单的方式来检测 e-mail 地址是否合法。如果 e-mail 地址不合法，将输出错误信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$email</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/([\w\-]+\@[\w\-]+\.[\w\-]+)/&quot;</span>,<span class="variable">$email</span>)) &#123;</span><br><span class="line">  <span class="variable">$emailErr</span> = <span class="string">&quot;非法邮箱格式&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="PHP-验证-URL"><a href="#PHP-验证-URL" class="headerlink" title="PHP - 验证 URL"></a>PHP - 验证 URL</h2><p>以下代码将检测URL地址是否合法 (以下正则表达式运行URL中含有破折号:”-“)， 如果 URL 地址不合法，将输出错误信息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$website</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>]);</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i&quot;</span>,<span class="variable">$website</span>)) &#123;</span><br><span class="line">  <span class="variable">$websiteErr</span> = <span class="string">&quot;非法的 URL 的地址&quot;</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="PHP-验证-Name-E-mail-和-URL"><a href="#PHP-验证-Name-E-mail-和-URL" class="headerlink" title="PHP - 验证 Name, E-mail, 和 URL"></a>PHP - 验证 Name, E-mail, 和 URL</h2><p>代码如下所示:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 定义变量并默认设置为空值</span></span><br><span class="line"><span class="variable">$nameErr</span> = <span class="variable">$emailErr</span> = <span class="variable">$genderErr</span> = <span class="variable">$websiteErr</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$email</span> = <span class="variable">$gender</span> = <span class="variable">$comment</span> = <span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SERVER</span>[<span class="string">&quot;REQUEST_METHOD&quot;</span>] == <span class="string">&quot;POST&quot;</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>])) &#123;</span><br><span class="line">      <span class="variable">$nameErr</span> = <span class="string">&quot;Name is required&quot;</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="variable">$name</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">         <span class="comment">// 检测名字是否只包含字母跟空格</span></span><br><span class="line">         <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^[a-zA-Z ]*$/&quot;</span>,<span class="variable">$name</span>)) &#123;</span><br><span class="line">         <span class="variable">$nameErr</span> = <span class="string">&quot;只允许字母和空格&quot;</span>; </span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>])) &#123;</span><br><span class="line">      <span class="variable">$emailErr</span> = <span class="string">&quot;Email is required&quot;</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable">$email</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;email&quot;</span>]);</span><br><span class="line">      <span class="comment">// 检测邮箱是否合法</span></span><br><span class="line">      <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/([\w\-]+\@[\w\-]+\.[\w\-]+)/&quot;</span>,<span class="variable">$email</span>)) &#123;</span><br><span class="line">         <span class="variable">$emailErr</span> = <span class="string">&quot;非法邮箱格式&quot;</span>; </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">     </span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>])) &#123;</span><br><span class="line">      <span class="variable">$website</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable">$website</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;website&quot;</span>]);</span><br><span class="line">      <span class="comment">// 检测 URL 地址是否合法</span></span><br><span class="line">     <span class="keyword">if</span> (!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%=~_|]/i&quot;</span>,<span class="variable">$website</span>)) &#123;</span><br><span class="line">         <span class="variable">$websiteErr</span> = <span class="string">&quot;非法的 URL 的地址&quot;</span>; </span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>])) &#123;</span><br><span class="line">      <span class="variable">$comment</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable">$comment</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;comment&quot;</span>]);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>])) &#123;</span><br><span class="line">      <span class="variable">$genderErr</span> = <span class="string">&quot;性别是必需的&quot;</span>;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="variable">$gender</span> = <span class="title function_ invoke__">test_input</span>(<span class="variable">$_POST</span>[<span class="string">&quot;gender&quot;</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP-完整表单实例"><a href="#PHP-完整表单实例" class="headerlink" title="PHP 完整表单实例"></a>PHP 完整表单实例</h1><hr><p>本章节将介绍如何让用户在点击”提交（submit）”按钮提交数据前保证所有字段正确输入。</p><hr><h2 id="PHP-在表单中确保输入值"><a href="#PHP-在表单中确保输入值" class="headerlink" title="PHP - 在表单中确保输入值"></a>PHP - 在表单中确保输入值</h2><p>在用户点击提交按钮后，为确保字段值是否输入正确，我们在HTML的input元素中插添加PHP脚本， 各字段名为: name, email, 和 website。 在备注中的 textarea 字段中，我们将脚本放于 <textarea> 和 </textarea> 标签之间。</p><p>PHP脚本输出值为： $name, $email, $website, 和 $comment 变量。 </p><p>然后，我们同样需要检查被选中的单选按钮， 对于这一点，我们 必须设置好checked属性(不是radio按钮的 value 属性) :</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&lt;?php echo htmlspecialchars($_SERVER[&quot;</span><span class="attr">PHP_SELF</span>&quot;]);?&gt;</span>&quot;&gt; </span><br><span class="line">   名字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php echo $name;?&gt;&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>* <span class="meta">&lt;?php echo $nameErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   E-mail: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;email&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php echo $email;?&gt;&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>* <span class="meta">&lt;?php echo $emailErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   网址: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;website&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php echo $website;?&gt;&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span><span class="meta">&lt;?php echo $websiteErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   备注: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;comment&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;5&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;40&quot;</span>&gt;</span><span class="meta">&lt;?php echo $comment;?&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   性别:</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> &lt;?<span class="attr">php</span> <span class="attr">if</span> (<span class="attr">isset</span>($<span class="attr">gender</span>) &amp;&amp; $<span class="attr">gender</span>==<span class="string">&quot;female&quot;</span>) <span class="attr">echo</span> &quot;<span class="attr">checked</span>&quot;;?&gt;</span>  value=&quot;female&quot;&gt;女</span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> &lt;?<span class="attr">php</span> <span class="attr">if</span> (<span class="attr">isset</span>($<span class="attr">gender</span>) &amp;&amp; $<span class="attr">gender</span>==<span class="string">&quot;male&quot;</span>) <span class="attr">echo</span> &quot;<span class="attr">checked</span>&quot;;?&gt;</span>  value=&quot;male&quot;&gt;男</span><br><span class="line">   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;error&quot;</span>&gt;</span>* <span class="meta">&lt;?php echo $genderErr;?&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-完整表单实例-1"><a href="#PHP-完整表单实例-1" class="headerlink" title="PHP - 完整表单实例"></a>PHP - 完整表单实例</h2><p>以下是完整的PHP表单验证实例代码：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><iframe src="https://www.runoob.com/try/demo_source/demo_form_validation_complete.php" width="690" height="600" seamless="" style="border: 0px; margin: 0px; padding: 0px;"></iframe><p>实例中执行结果类似如下图所示：</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/DF07BBDE-F4C8-4E21-B353-4CDA09364DFE.jpg" alt="img" style="zoom:33%;" /></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 函数</title>
      <link href="/2024/08/08/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpfunctions/"/>
      <url>/2024/08/08/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpfunctions/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-函数"><a href="#PHP-函数" class="headerlink" title="PHP 函数"></a>PHP 函数</h1><hr><p>PHP 的真正威力源自于它的函数。</p><p>在 PHP 中，提供了超过 1000 个内建的函数。</p><hr><h2 id="PHP-内建函数"><a href="#PHP-内建函数" class="headerlink" title="PHP 内建函数"></a>PHP 内建函数</h2><p>请看php数组array函数</p><hr><h2 id="PHP-函数-1"><a href="#PHP-函数-1" class="headerlink" title="PHP 函数"></a>PHP 函数</h2><p>在本章中，我们将为您讲解如何创建自己的函数。</p><p>如要在页面加载时执行脚本，您可以把它放到函数里。</p><p>函数是通过调用函数来执行的。</p><p>你可以在页面的任何位置调用函数。</p><hr><h2 id="创建-PHP-函数"><a href="#创建-PHP-函数" class="headerlink" title="创建 PHP 函数"></a>创建 PHP 函数</h2><p>函数是通过调用函数来执行的。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 要执行的代码</span></span><br><span class="line">    &#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP 函数准则：</p><ul><li>函数的名称应该提示出它的功能</li><li>函数名称以字母或下划线开头（不能以数字开头）</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>一个简单的函数，在其被调用时能输出我的名称：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>&lt;?php<br>    function writeName() {<br>    echo “Kai Jim Refsnes”;<br>    }<br>    echo “My name is “;<br>    writeName();<br>?&gt;</p><p>输出：</p><p>​    </p><pre><code>My name is Kai Jim Refsnes</code></pre><p>​    </p><hr><h2 id="PHP-函数-添加参数"><a href="#PHP-函数-添加参数" class="headerlink" title="PHP 函数 - 添加参数"></a>PHP 函数 - 添加参数</h2><p>为了给函数添加更多的功能，我们可以添加参数，参数类似变量。</p><p>参数就在函数名称后面的一个括号内指定。</p><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例 1"></a>实例 1</h3><p>下面的实例将输出不同的名字，但姓是相同的：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span>(<span class="params"><span class="variable">$fname</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$fname</span> . <span class="string">&quot; Refsnes.&lt;br&gt;&quot;</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;My name is &quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">writeName</span>(<span class="string">&quot;Kai Jim&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;My sister&#x27;s name is &quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">writeName</span>(<span class="string">&quot;Hege&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;My brother&#x27;s name is &quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">writeName</span>(<span class="string">&quot;Stale&quot;</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><p>​    </p><pre><code>My name is Kai Jim Refsnes.My sister&#39;s name is Hege Refsnes.My brother&#39;s name is Stale Refsnes.</code></pre><p>​    </p><h3 id="实例-2"><a href="#实例-2" class="headerlink" title="实例 2"></a>实例 2</h3><p>下面的函数有两个参数：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writeName</span>(<span class="params"><span class="variable">$fname</span>,<span class="variable">$punctuation</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$fname</span> . <span class="string">&quot; Refsnes&quot;</span> . <span class="variable">$punctuation</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">echo</span> <span class="string">&quot;My name is &quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">writeName</span>(<span class="string">&quot;Kai Jim&quot;</span>,<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;My sister&#x27;s name is &quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">writeName</span>(<span class="string">&quot;Hege&quot;</span>,<span class="string">&quot;!&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;My brother&#x27;s name is &quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">writeName</span>(<span class="string">&quot;Ståle&quot;</span>,<span class="string">&quot;?&quot;</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><p>​<br>​    My name is Kai Jim Refsnes.<br>​<br>​    My sister’s name is Hege Refsnes!<br>​<br>​    My brother’s name is Ståle Refsnes?</p><p>​    </p><hr><h2 id="PHP-函数-返回值"><a href="#PHP-函数-返回值" class="headerlink" title="PHP 函数 - 返回值"></a>PHP 函数 - 返回值</h2><p>如需让函数返回一个值，请使用 return 语句。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$x</span>,<span class="variable">$y</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$total</span>=<span class="variable">$x</span>+<span class="variable">$y</span>; <span class="keyword">return</span> <span class="variable">$total</span>; </span><br><span class="line">    &#125; <span class="keyword">echo</span> <span class="string">&quot;1 + 16 = &quot;</span> . <span class="title function_ invoke__">add</span>(<span class="number">1</span>,<span class="number">16</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><p>​    </p><pre><code>1 + 16 = 17</code></pre><hr><h2 id="PHP-变量函数"><a href="#PHP-变量函数" class="headerlink" title="PHP 变量函数"></a>PHP 变量函数</h2><p>变量函数是指在 PHP 中，将一个变量作为函数名来调用的函数。</p><p>变量函数可以让我们在运行时动态地决定调用哪个函数。</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;In foo()&lt;br /&gt;\n&quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="variable">$arg</span> = <span class="string">&#x27;&#x27;</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;In bar();</span></span><br><span class="line"><span class="string">    argument was &#x27;<span class="subst">$arg</span>&#x27;.&lt;br /&gt;\n&quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 echo 的包装函数  </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">echoit</span>(<span class="params"><span class="variable">$string</span></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$string</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;foo&#x27;</span>;  </span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// 调用 foo()  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;bar&#x27;</span>;  </span><br><span class="line"><span class="variable">$func</span>(<span class="string">&#x27;test&#x27;</span>); <span class="comment">// 调用 bar()  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;echoit&#x27;</span>;  </span><br><span class="line"><span class="variable">$func</span>(<span class="string">&#x27;test&#x27;</span>); <span class="comment">// 调用 echoit()  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>也可以用变量函数的语法来调用一个对象的方法。</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span>  </span></span><br><span class="line"><span class="class"></span>&#123;  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Variable</span>(<span class="params"></span>)  </span>&#123;  </span><br><span class="line"><span class="variable">$name</span> = <span class="string">&#x27;Bar&#x27;</span>;  </span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="variable">$name</span>(); <span class="comment">// 调用 Bar() 方法  </span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Bar</span>(<span class="params"></span>)  </span>&#123;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is Bar&quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">new</span> <span class="title class_">Foo</span>();  </span><br><span class="line"><span class="variable">$funcname</span> = <span class="string">&quot;Variable&quot;</span>;  </span><br><span class="line"><span class="variable">$foo</span>-&gt;<span class="variable">$funcname</span>(); <span class="comment">// 调用 $foo-&gt;Variable()  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP 数据类型</title>
      <link href="/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpshujuleixing/"/>
      <url>/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpshujuleixing/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-数据类型"><a href="#PHP-数据类型" class="headerlink" title="PHP 数据类型"></a>PHP 数据类型</h1><p>[toc]</p><hr><p>PHP 变量存储不同的类型的数据，不同的数据类型可以做不一样的事情。</p><p>PHP 支持以下几种数据类型:</p><ul><li>String（字符串）</li><li>Integer（整型）</li><li>Float（浮点型）</li><li>Boolean（布尔型）</li><li>Array（数组）</li><li>Object（对象）</li><li>NULL（空值）</li><li>Resource（资源类型）</li></ul><h2 id="PHP-字符串"><a href="#PHP-字符串" class="headerlink" title="PHP 字符串"></a>PHP 字符串</h2><p>一个字符串是一串字符的序列，就像 “Hello world!”。</p><p>你可以将任何文本放在单引号和双引号中：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&quot;Hello world!&quot;</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$x</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="string">&#x27;Hello world!&#x27;</span>; <span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-整型"><a href="#PHP-整型" class="headerlink" title="PHP 整型"></a>PHP 整型</h2><p>整数是一个没有小数的数字。</p><p>整数规则:</p><ul><li>整数必须至少有一个数字 (0-9)</li><li>整数不能包含逗号或空格</li><li>整数是没有小数点的</li><li>整数可以是正数或负数</li><li>整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）。</li></ul><p>在以下实例中我们将测试不同的数字。</p><p>PHP <a href="/php/php-var_dump-function.html">var_dump() </a> 函数返回变量的数据类型和值：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="number">5985</span>; <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = -<span class="number">345</span>; <span class="comment">// 负数  var_dump($x);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="number">0x8C</span>; <span class="comment">// 十六进制数 var_dump($x); echo &quot;&lt;br&gt;&quot;; $x = 047; // 八进制数</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-浮点型"><a href="#PHP-浮点型" class="headerlink" title="PHP 浮点型"></a>PHP 浮点型</h2><p>浮点数是带小数部分的数字，或是指数形式。</p><p>在以下实例中我们将测试不同的数字。 PHP var_dump() 函数返回变量的数据类型和值：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="number">10.365</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="number">2.4e3</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="number">8E-5</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-布尔型"><a href="#PHP-布尔型" class="headerlink" title="PHP 布尔型"></a>PHP 布尔型</h2><p>布尔型可以是 TRUE 或 FALSE。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span>=<span class="literal">true</span>;  </span><br><span class="line"><span class="variable">$y</span>=<span class="literal">false</span>;</span><br></pre></td></tr></table></figure><br>布尔型通常用于条件判断。在接下来的章节中你会学到更多关于条件控制的教程。</p><hr><h2 id="PHP-数组"><a href="#PHP-数组" class="headerlink" title="PHP 数组"></a>PHP 数组</h2><p>数组可以在一个变量中存储多个值。</p><p>在以下实例中创建了一个数组， 然后使用 PHP var_dump() 函数返回数组的数据类型和值：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在接下来的章节中你将学到更多关于数组的知识。</p><hr><h2 id="PHP-对象"><a href="#PHP-对象" class="headerlink" title="PHP 对象"></a>PHP 对象</h2><p>对象数据类型也可以用于存储数据。</p><p>在 PHP 中，对象必须声明。</p><p>首先，你必须使用class关键字声明类对象。类是可以包含属性和方法的结构。</p><p>然后我们在类中定义数据类型，然后在实例化的类中使用数据类型：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123; </span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$color</span>; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$color</span>=<span class="string">&quot;green&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;color = <span class="variable">$color</span>; &#125; </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">what_color</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;color; &#125;&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>以上实例中PHP关键字this就是指向当前对象实例的指针，不指向任何其他对象或类。</p><p>你将会在接下来的章节中学会更多关于对象的知识。</p><hr><h2 id="PHP-NULL-值"><a href="#PHP-NULL-值" class="headerlink" title="PHP NULL 值"></a>PHP NULL 值</h2><p>NULL 值表示变量没有值。NULL 是数据类型为 NULL 的值。</p><p>NULL 值指明一个变量是否为空值。 同样可用于数据空值和NULL值的区别。</p><p>可以通过设置变量值为 NULL 来清空变量数据：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="string">&quot;Hello world!&quot;</span>; </span><br><span class="line"><span class="variable">$x</span>=<span class="literal">null</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="PHP-资源类型"><a href="#PHP-资源类型" class="headerlink" title="PHP 资源类型"></a>PHP 资源类型</h2><p>PHP 资源 resource 是一种特殊变量，保存了到外部资源的一个引用。</p><p>常见资源数据类型有打开文件、数据库连接、图形画布区域等。</p><p>由于资源类型变量保存有为打开文件、数据库连接、图形画布区域等的特殊句柄，因此将其它类型的值转换为资源没有意义。</p><p>使用 <strong>get_resource_type()</strong> 函数可以返回资源（resource）类型：</p><p>​<br>​    get_resource_type(resource $handle): string</p><p>此函数返回一个字符串，用于表示传递给它的 resource 的类型。如果参数不是合法的 resource，将产生错误。</p><p>如下实例：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">mysql_connect</span>();  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_resource_type</span>(<span class="variable">$c</span>).<span class="string">&quot;\n&quot;</span>;  </span><br><span class="line"><span class="comment">// 打印：mysql link  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;foo&quot;</span>,<span class="string">&quot;w&quot;</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_resource_type</span>(<span class="variable">$fp</span>).<span class="string">&quot;\n&quot;</span>;  </span><br><span class="line"><span class="comment">// 打印：file  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$doc</span> = <span class="title function_ invoke__">new_xmldoc</span>(<span class="string">&quot;1.0&quot;</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_resource_type</span>(<span class="variable">$doc</span>-&gt;doc).<span class="string">&quot;\n&quot;</span>;  </span><br><span class="line"><span class="comment">// 打印：domxml document  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure></p><h1 id="PHP-类型比较"><a href="#PHP-类型比较" class="headerlink" title="PHP 类型比较"></a>PHP 类型比较</h1><p>虽然 PHP 是弱类型语言，但也需要明白变量类型及它们的意义，因为我们经常需要对 PHP 变量进行比较，包含松散和严格比较。</p><ul><li>松散比较：使用两个等号 == 比较，只比较值，不比较类型。</li><li>严格比较：用三个等号 === 比较，除了比较值，也比较类型。</li></ul><p>例如，”42” 是一个字符串而 42 是一个整数。FALSE 是一个布尔值而 “FALSE” 是一个字符串。</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(<span class="number">42</span> == <span class="string">&quot;42&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;1、值相等&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL; <span class="comment">// 换行符 if(42 === &quot;42&quot;) &#123;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;2、类型相等&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;3、类型不相等&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>以上实例输出结果为：</p><p>​<br>​    1、值相等<br>​<br>​    3、类型不相等</p><h3 id="PHP中-比较-0、false、null"><a href="#PHP中-比较-0、false、null" class="headerlink" title="PHP中 比较 0、false、null"></a>PHP中 比较 0、false、null</h3><p>测试代码:</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;0 == false: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="number">0</span> == <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;0 === false: &#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="number">0</span> === <span class="literal">false</span>);</span><br><span class="line"><span class="comment">//0 == false: bool(true)</span></span><br><span class="line"><span class="comment">//  0 === false: bool(false)  </span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;0 == null: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="number">0</span> == <span class="literal">null</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;0 === null: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="number">0</span> === <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//  0 == null: bool(true)</span></span><br><span class="line"><span class="comment">//  0 === null: bool(false)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;false == null:&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="literal">false</span> == <span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;false === null: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="literal">false</span> === <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//  false == null: bool(true)</span></span><br><span class="line"><span class="comment">//  false === null: bool(false)</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line"><span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;0&quot; == false: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;0&quot;</span> == <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;0&quot; ===false: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;0&quot;</span> === <span class="literal">false</span>);</span><br><span class="line"><span class="comment">//  &quot;0&quot; == false: bool(true) </span></span><br><span class="line"><span class="comment">//   &quot;0&quot; === false: bool(false)</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;0&quot; == null: &#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;0&quot;</span> == <span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;0&quot; === null: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;0&quot;</span> === <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//  &quot;0&quot; == null: bool(false)    </span></span><br><span class="line"><span class="comment">//  &quot;0&quot; === null: bool(false)</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;&quot; == false: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;&quot;</span> == <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;&quot; === false: &#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;&quot;</span> === <span class="literal">false</span>);</span><br><span class="line"><span class="comment">//  &quot;&quot; == false: bool(true)   </span></span><br><span class="line"><span class="comment">//  &quot;&quot; === false: bool(false)</span></span><br><span class="line">       </span><br><span class="line">    <span class="keyword">echo</span> PHP_EOL;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;&quot; == null: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;&quot;</span> ==<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&quot;&quot; === null: &#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;&quot;</span> === <span class="literal">null</span>);</span><br><span class="line"><span class="comment">//  &quot;&quot; == null: bool(true)    </span></span><br><span class="line"><span class="comment">//  &quot;&quot; === null: bool(false)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br><img src="https://image.chenjichao.site/file/e66ca0f387f568e58e387.png" alt="img"></p><p><img src="https://image.chenjichao.site/file/eeaa666e1799d85311603.png" alt=""></p><h1 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h1><h2 id="常量的特性"><a href="#常量的特性" class="headerlink" title="常量的特性"></a>常量的特性</h2><p>PHP 中的常量是指一旦定义后其值不能被改变的标识符。</p><p>常量值被定义后，在脚本的其他任何地方都不能被改变。</p><p>常量可以用 define() 函数或 const 关键字来定义。</p><h2 id="PHP-常量-1"><a href="#PHP-常量-1" class="headerlink" title="PHP 常量"></a>PHP 常量</h2><ol><li><strong>不变性</strong> : 常量一旦定义，其值不能改变。</li><li><strong>全局作用域</strong> : 常量在定义后，可以在整个脚本的任何地方使用，无需使用 <code>global</code> 关键字。</li><li><strong>数据类型</strong> : 常量的值可以是标量数据类型（如布尔值、整数、浮点数、字符串）或数组（PHP 7 及以上版本）。</li><li><strong>区分大小写</strong> : 常量名称默认是区分大小写的。如果需要定义大小写不敏感的常量，可以在 <code>define()</code> 函数的第三个参数设置为 <code>true</code>。</li></ol><p>常量是一个简单值的标识符，该值在脚本中不能改变。</p><p>一个常量由英文字母、下划线、和数字组成，但数字不能作为首字母出现。 (常量名不需要加 $ 修饰符)。</p><p><strong>注意：</strong> 常量在整个脚本中都可以使用。</p><h2 id="设置-PHP-常量"><a href="#设置-PHP-常量" class="headerlink" title="设置 PHP 常量"></a>设置 PHP 常量</h2><p>设置常量，使用 define() 函数，函数语法如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="title function_ invoke__">define</span> ( <span class="keyword">string</span> <span class="variable">$name</span> , <span class="keyword">mixed</span> <span class="variable">$value</span> [, <span class="keyword">bool</span> <span class="variable">$case_insensitive</span> = <span class="literal">false</span> ] )</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>该函数有三个参数:</p><ul><li><p><strong>name：</strong> 必选参数，常量名称，即标志符。</p></li><li><p><strong>value：</strong> 必选参数，常量的值。</p></li><li><p><strong>case_insensitive</strong> ：可选参数，如果设置为 TRUE，该常量则大小写不敏感，默认是大小写敏感的。</p></li></ul><p><strong>注意：</strong> 自 PHP 7.3.0 开始，定义不区分大小写的常量已被弃用。从 PHP 8.0.0 开始，只有 false 是可接受的值，传递 true<br>将产生一个警告。</p><p>以下实例我们创建一个 <strong>区分大小写的常量</strong> （PHP7.3 版本之后不建议使用）, 常量值为 “欢迎访问 Runoob.com”：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">// 区分大小写的常量名</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;GREETING&quot;</span>, <span class="string">&quot;欢迎访问 Runoob.com&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> GREETING; <span class="comment">// 输出&quot;欢迎访问 Runoob.com&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> greeting; <span class="comment">// 输出&quot;greeting&quot;，但是有警告信息，表示该常量未定义</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>以下实例我们创建一个 <strong>不区分大小写的常量</strong> , 常量值为 “欢迎访问 Runoob.com”：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">// 不区分大小写的常量名 </span></span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&quot;GREETING&quot;</span>, <span class="string">&quot;欢迎访问 Runoob.com&quot;</span>, <span class="literal">true</span>); </span><br><span class="line"><span class="keyword">echo</span> greeting; <span class="comment">// 输出 &quot;欢迎访问 Runoob.com&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="常量是全局的"><a href="#常量是全局的" class="headerlink" title="常量是全局的"></a>常量是全局的</h2><p>常量在定义后，默认是全局变量，可以在整个运行的脚本的任何地方使用。</p><p>以下实例演示了在函数内使用常量，即便常量定义在函数外也可以正常使用常量。</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">define</span>(<span class="string">&quot;GREETING&quot;</span>, <span class="string">&quot;欢迎访问 Runoob.com&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> GREETING; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">myTest</span>(); <span class="comment">// 输出 &quot;欢迎访问 Runoob.com&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="使用-const-关键字"><a href="#使用-const-关键字" class="headerlink" title="使用 const 关键字"></a>使用 const 关键字</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">CONSTANT_NAME</span> = <span class="string">&quot;value&quot;</span>;</span><br></pre></td></tr></table></figure><p>以下是一个使用 const 关键字定义常量的实例：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">SITE_URL</span> = <span class="string">&quot;https://www.runoob.com&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> SITE_URL; <span class="comment">// 输出 &quot;https://www.runoob.com&quot;  </span></span><br></pre></td></tr></table></figure></p><h2 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h2><p>PHP 提供了一些预定义常量，可以在脚本中直接使用。这些常量通常用于获取 PHP 的配置信息、版本信息等。常见的预定义常量有：</p><ul><li><code>PHP_VERSION</code>：当前 PHP 解析器的版本。</li><li><code>PHP_OS</code>：服务器的操作系统。</li><li><code>PHP_INT_MAX</code>：最大的整数值。</li><li><code>E_ERROR</code>、<code>E_WARNING</code>、<code>E_PARSE</code> 等：错误报告级别。</li></ul><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> PHP_VERSION; <span class="comment">// 输出 PHP 版本，例如 &quot;7.4.1&quot;  </span></span><br><span class="line"><span class="keyword">echo</span> PHP_OS; <span class="comment">// 输出操作系统，例如 &quot;Linux&quot;  </span></span><br><span class="line"><span class="keyword">echo</span> PHP_INT_MAX; <span class="comment">// 输出最大的整数值，例如 &quot;9223372036854775807&quot;  </span></span><br></pre></td></tr></table></figure></p><hr><h2 id="常量数组（PHP-7-及以上版本）"><a href="#常量数组（PHP-7-及以上版本）" class="headerlink" title="常量数组（PHP 7 及以上版本）"></a>常量数组（PHP 7 及以上版本）</h2><p>在 PHP 7 及以上版本中，常量也可以是数组。</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;FRUITS&quot;</span>, [  </span><br><span class="line"><span class="string">&quot;Apple&quot;</span>,  </span><br><span class="line"><span class="string">&quot;Banana&quot;</span>,  </span><br><span class="line"><span class="string">&quot;Orange&quot;</span>  </span><br><span class="line">]);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> FRUITS[<span class="number">0</span>]; <span class="comment">// 输出 &quot;Apple&quot;  </span></span><br></pre></td></tr></table></figure><br>或者使用 const：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">COLORS</span> = [  </span><br><span class="line"><span class="string">&quot;Red&quot;</span>,  </span><br><span class="line"><span class="string">&quot;Green&quot;</span>,  </span><br><span class="line"><span class="string">&quot;Blue&quot;</span>  </span><br><span class="line">];  </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> COLORS[<span class="number">1</span>]; <span class="comment">// 输出 &quot;Green&quot;  </span></span><br></pre></td></tr></table></figure></p><h1 id="PHP-字符串变量"><a href="#PHP-字符串变量" class="headerlink" title="PHP 字符串变量"></a>PHP 字符串变量</h1><hr><p>字符串变量用于存储并处理文本。</p><hr><h2 id="PHP-中的字符串变量"><a href="#PHP-中的字符串变量" class="headerlink" title="PHP 中的字符串变量"></a>PHP 中的字符串变量</h2><p>字符串变量用于包含有字符的值。</p><p>在创建字符串之后，我们就可以对它进行操作了。您可以直接在函数中使用字符串，或者把它存储在变量中。</p><p>在下面的实例中，我们创建一个名为 txt 的字符串变量，并赋值为 “Hello world!” 。然后我们输出 txt 变量的值：</p><p><strong>实例</strong></p><p>&lt;?php<br>$txt=”Hello world!”;<br>echo $txt;<br>?&gt;</p><p>  <strong>注释：</strong> 当您赋一个文本值给变量时，请记得给文本值加上单引号或者双引号。  </p><p>现在，让我们来看看一些常用的操作字符串的函数和运算符。</p><hr><h2 id="PHP-并置运算符"><a href="#PHP-并置运算符" class="headerlink" title="PHP 并置运算符"></a>PHP 并置运算符</h2><p>在 PHP 中，只有一个字符串运算符。</p><p>并置运算符 (.) 用于把两个字符串值连接起来。</p><p>下面的实例演示了如何将两个字符串变量连接在一起：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$txt1</span>=<span class="string">&quot;Hello world!&quot;</span>;  </span><br><span class="line"><span class="variable">$txt2</span>=<span class="string">&quot;What a nice day!&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$txt1</span> . <span class="string">&quot; &quot;</span> . <span class="variable">$txt2</span>;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>上面的代码将输出：Hello world! What a nice day!</p><p><strong>提示：</strong> 在上面的代码中，我们已经使用了两次并置运算符。这是由于我们需要在两个字符串之间插入一个空格。</p><hr><h2 id="PHP-strlen-函数"><a href="#PHP-strlen-函数" class="headerlink" title="PHP strlen() 函数"></a>PHP strlen() 函数</h2><p>有时知道字符串值的长度是很有用的。</p><p>strlen() 函数返回字符串的长度（字节数）。</p><p>下面的实例返回字符串 “Hello world!” 的长度：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strlen</span>(<span class="string">&quot;Hello world!&quot;</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>上面的代码将输出：12</p><p><strong>提示：</strong> strlen()<br>常常用在循环和其他函数中，因为那时确定字符串何时结束是很重要的。（例如，在循环中，我们需要在字符串中的最后一个字符之后结束循环。）</p><hr><h2 id="PHP-strpos-函数"><a href="#PHP-strpos-函数" class="headerlink" title="PHP strpos() 函数"></a>PHP strpos() 函数</h2><p>strpos() 函数用于在字符串内查找一个字符或一段指定的文本。</p><p>如果在字符串中找到匹配，该函数会返回第一个匹配的字符位置。如果未找到匹配，则返回 FALSE。</p><p>下面的实例在字符串 “Hello world!” 中查找文本 “world”：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">strpos</span>(<span class="string">&quot;Hello world!&quot;</span>,<span class="string">&quot;world&quot;</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><a href="/try/runcode.php?filename=demo_string_pos&amp;type=php">运行实例 »</a></p><p>上面的代码将输出：6</p><p><strong>提示：</strong> 在上面的实例中，字符串 “world” 的位置是 6。之所以是 6 而不是 7 的原因是，字符串中第一个字符的位置是 0，而不是 1。</p><hr><h2 id="完整的-PHP-String-参考手册"><a href="#完整的-PHP-String-参考手册" class="headerlink" title="完整的 PHP String 参考手册"></a>完整的 PHP String 参考手册</h2><h3 id="PHP-5-String-函数"><a href="#PHP-5-String-函数" class="headerlink" title="PHP 5 String 函数"></a>PHP 5 String 函数</h3><p>PHP String 函数是 PHP 核心的组成部分。无需安装即可使用这些函数。</p><hr><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><a href="func-string-addcslashes.html">addcslashes()</a></td><td>返回在指定的字符前添加反斜杠的字符串。</td></tr><tr><td><a href="func-string-addslashes.html">addslashes()</a></td><td>返回在预定义的字符前添加反斜杠的字符串。</td></tr><tr><td><a href="func-string-bin2hex.html">bin2hex()</a></td><td>把 ASCII 字符的字符串转换为十六进制值。</td></tr><tr><td><a href="func-string-chop.html">chop()</a></td><td>移除字符串右侧的空白字符或其他字符。</td></tr><tr><td><a href="func-string-chr.html">chr()</a></td><td>从指定 ASCII 值返回字符。</td></tr><tr><td><a href="func-string-chunk-split.html">chunk_split()</a></td><td>把字符串分割为一连串更小的部分。</td></tr><tr><td><a href="func-string-convert-cyr-string.html">convert_cyr_string()</a></td><td>把字符串由一种 Cyrillic 字符集转换成另一种。</td></tr><tr><td><a href="func-string-convert-uudecode.html">convert_uudecode()</a></td><td>对 uuencode 编码的字符串进行解码。</td></tr><tr><td><a href="func-string-convert-uuencode.html">convert_uuencode()</a></td><td>使用 uuencode 算法对字符串进行编码。</td></tr><tr><td><a href="func-string-count-chars.html">count_chars()</a></td><td>返回字符串所用字符的信息。</td></tr><tr><td><a href="func-string-crc32.html">crc32()</a></td><td>计算一个字符串的 32 位 CRC（循环冗余校验）。</td></tr><tr><td><a href="func-string-crypt.html">crypt()</a></td><td>单向的字符串加密法（hashing）。</td></tr><tr><td><a href="func-string-echo.html">echo()</a></td><td>输出一个或多个字符串。</td></tr><tr><td><a href="func-string-explode.html">explode()</a></td><td>把字符串打散为数组。</td></tr><tr><td><a href="func-string-fprintf.html">fprintf()</a></td><td>把格式化的字符串写入到指定的输出流。</td></tr><tr><td><a href="func-string-get-html-translation-table.html">get_html_translation_table()</a></td><td>返回 htmlspecialchars() 和 htmlentities() 使用的翻译表。</td></tr><tr><td><a href="func-string-hebrev.html">hebrev()</a></td><td>把希伯来（Hebrew）文本转换为可见文本。</td></tr><tr><td><a href="func-string-hebrevc.html">hebrevc()</a></td><td>把希伯来（Hebrew）文本转换为可见文本，并把新行（\n）转换为 <br>。</td></tr><tr><td><a href="func-string-hex2bin.html">hex2bin()</a></td><td>把十六进制值的字符串转换为 ASCII 字符。</td></tr><tr><td><a href="func-string-html-entity-decode.html">html_entity_decode()</a></td><td>把 HTML 实体转换为字符。</td></tr><tr><td><a href="func-string-htmlentities.html">htmlentities()</a></td><td>把字符转换为 HTML 实体。</td></tr><tr><td><a href="func-string-htmlspecialchars-decode.html">htmlspecialchars_decode()</a></td><td>把一些预定义的 HTML 实体转换为字符。</td></tr><tr><td><a href="func-string-htmlspecialchars.html">htmlspecialchars()</a></td><td>把一些预定义的字符转换为 HTML 实体。</td></tr><tr><td><a href="func-string-implode.html">implode()</a></td><td>返回一个由数组元素组合成的字符串。</td></tr><tr><td><a href="func-string-join.html">join()</a></td><td>implode() 的别名。</td></tr><tr><td><a href="func-string-lcfirst.html">lcfirst()</a></td><td>把字符串中的首字符转换为小写。</td></tr><tr><td><a href="func-string-levenshtein.html">levenshtein()</a></td><td>返回两个字符串之间的 Levenshtein 距离。</td></tr><tr><td><a href="func-string-localeconv.html">localeconv()</a></td><td>返回本地数字及货币格式信息。</td></tr><tr><td><a href="func-string-ltrim.html">ltrim()</a></td><td>移除字符串左侧的空白字符或其他字符。</td></tr><tr><td><a href="func-string-md5.html">md5()</a></td><td>计算字符串的 MD5 散列。</td></tr><tr><td><a href="func-string-md5-file.html">md5_file()</a></td><td>计算文件的 MD5 散列。</td></tr><tr><td><a href="func-string-metaphone.html">metaphone()</a></td><td>计算字符串的 metaphone 键。</td></tr><tr><td><a href="func-string-money-format.html">money_format()</a></td><td>返回格式化为货币字符串的字符串。</td></tr><tr><td><a href="func-string-nl-langinfo.html">nl_langinfo()</a></td><td>返回指定的本地信息。</td></tr><tr><td><a href="func-string-nl2br.html">nl2br()</a></td><td>在字符串中的每个新行之前插入 HTML 换行符。</td></tr><tr><td><a href="func-string-number-format.html">number_format()</a></td><td>通过千位分组来格式化数字。</td></tr><tr><td><a href="func-string-ord.html">ord()</a></td><td>返回字符串中第一个字符的 ASCII 值。</td></tr><tr><td><a href="func-string-parse-str.html">parse_str()</a></td><td>把查询字符串解析到变量中。</td></tr><tr><td><a href="func-string-print.html">print()</a></td><td>输出一个或多个字符串。</td></tr><tr><td><a href="func-string-printf.html">printf()</a></td><td>输出格式化的字符串。</td></tr><tr><td><a href="func-string-quoted-printable-decode.html">quoted_printable_decode()</a></td><td>把 quoted-printable 字符串转换为 8 位字符串。</td></tr><tr><td><a href="func-string-quoted-printable-encode.html">quoted_printable_encode()</a></td><td>把 8 位字符串转换为 quoted-printable 字符串。</td></tr><tr><td><a href="func-string-quotemeta.html">quotemeta()</a></td><td>引用元字符。</td></tr><tr><td><a href="func-string-rtrim.html">rtrim()</a></td><td>移除字符串右侧的空白字符或其他字符。</td></tr><tr><td><a href="func-string-setlocale.html">setlocale()</a></td><td>设置地区信息（地域信息）。</td></tr><tr><td><a href="func-string-sha1.html">sha1()</a></td><td>计算字符串的 SHA-1 散列。</td></tr><tr><td><a href="func-string-sha1-file.html">sha1_file()</a></td><td>计算文件的 SHA-1 散列。</td></tr><tr><td><a href="func-string-similar-text.html">similar_text()</a></td><td>计算两个字符串的相似度。</td></tr><tr><td><a href="func-string-soundex.html">soundex()</a></td><td>计算字符串的 soundex 键。</td></tr><tr><td><a href="func-string-sprintf.html">sprintf()</a></td><td>把格式化的字符串写入一个变量中。</td></tr><tr><td><a href="func-string-sscanf.html">sscanf()</a></td><td>根据指定的格式解析来自一个字符串的输入。</td></tr><tr><td><a href="func-string-str-getcsv.html">str_getcsv()</a></td><td>把 CSV 字符串解析到数组中。</td></tr><tr><td><a href="func-string-str-ireplace.html">str_ireplace()</a></td><td>替换字符串中的一些字符（大小写不敏感）。</td></tr><tr><td><a href="func-string-str-pad.html">str_pad()</a></td><td>把字符串填充为新的长度。</td></tr><tr><td><a href="func-string-str-repeat.html">str_repeat()</a></td><td>把字符串重复指定的次数。</td></tr><tr><td><a href="func-string-str-replace.html">str_replace()</a></td><td>替换字符串中的一些字符（大小写敏感）。</td></tr><tr><td><a href="func-string-str-rot13.html">str_rot13()</a></td><td>对字符串执行 ROT13 编码。</td></tr><tr><td><a href="func-string-str-shuffle.html">str_shuffle()</a></td><td>随机地打乱字符串中的所有字符。</td></tr><tr><td><a href="func-string-str-split.html">str_split()</a></td><td>把字符串分割到数组中。</td></tr><tr><td><a href="func-string-str-word-count.html">str_word_count()</a></td><td>计算字符串中的单词数。</td></tr><tr><td><a href="func-string-strcasecmp.html">strcasecmp()</a></td><td>比较两个字符串（大小写不敏感）。</td></tr><tr><td><a href="func-string-strchr.html">strchr()</a></td><td>查找字符串在另一字符串中的第一次出现。（strstr() 的别名。）</td></tr><tr><td><a href="func-string-strcmp.html">strcmp()</a></td><td>比较两个字符串（大小写敏感）。</td></tr><tr><td><a href="func-string-strcoll.html">strcoll()</a></td><td>比较两个字符串（根据本地设置）。</td></tr><tr><td><a href="func-string-strcspn.html">strcspn()</a></td><td>返回在找到任何指定的字符之前，在字符串查找的字符数。</td></tr><tr><td><a href="func-string-strip-tags.html">strip_tags()</a></td><td>剥去字符串中的 HTML 和 PHP 标签。</td></tr><tr><td><a href="func-string-stripcslashes.html">stripcslashes()</a></td><td>删除由 addcslashes() 函数添加的反斜杠。</td></tr><tr><td><a href="func-string-stripslashes.html">stripslashes()</a></td><td>删除由 addslashes() 函数添加的反斜杠。</td></tr><tr><td><a href="func-string-stripos.html">stripos()</a></td><td>返回字符串在另一字符串中第一次出现的位置（大小写不敏感）。</td></tr><tr><td><a href="func-string-stristr.html">stristr()</a></td><td>查找字符串在另一字符串中第一次出现的位置（大小写不敏感）。</td></tr><tr><td><a href="func-string-strlen.html">strlen()</a></td><td>返回字符串的长度。中文字符串的处理使用 <a href="https://www.runoob.com/php/func-string-mb_strlen.html">mb_strlen() 函数</a>。</td></tr><tr><td><a href="func-string-strnatcasecmp.html">strnatcasecmp()</a></td><td>使用一种”自然排序”算法来比较两个字符串（大小写不敏感）。</td></tr><tr><td><a href="func-string-strnatcmp.html">strnatcmp()</a></td><td>使用一种”自然排序”算法来比较两个字符串（大小写敏感）。</td></tr><tr><td><a href="func-string-strncasecmp.html">strncasecmp()</a></td><td>前 n 个字符的字符串比较（大小写不敏感）。</td></tr><tr><td><a href="func-string-strncmp.html">strncmp()</a></td><td>前 n 个字符的字符串比较（大小写敏感）。</td></tr><tr><td><a href="func-string-strpbrk.html">strpbrk()</a></td><td>在字符串中搜索指定字符中的任意一个。</td></tr><tr><td><a href="func-string-strpos.html">strpos()</a></td><td>返回字符串在另一字符串中第一次出现的位置（大小写敏感）。</td></tr><tr><td><a href="func-string-strrchr.html">strrchr()</a></td><td>查找字符串在另一个字符串中最后一次出现。</td></tr><tr><td><a href="func-string-strrev.html">strrev()</a></td><td>反转字符串。</td></tr><tr><td><a href="func-string-strripos.html">strripos()</a></td><td>查找字符串在另一字符串中最后一次出现的位置(大小写不敏感)。</td></tr><tr><td><a href="func-string-strrpos.html">strrpos()</a></td><td>查找字符串在另一字符串中最后一次出现的位置(大小写敏感)。</td></tr><tr><td><a href="func-string-strspn.html">strspn()</a></td><td>返回在字符串中包含的特定字符的数目。</td></tr><tr><td><a href="func-string-strstr.html">strstr()</a></td><td>查找字符串在另一字符串中的第一次出现（大小写敏感）。</td></tr><tr><td><a href="func-string-strtok.html">strtok()</a></td><td>把字符串分割为更小的字符串。</td></tr><tr><td><a href="func-string-strtolower.html">strtolower()</a></td><td>把字符串转换为小写字母。</td></tr><tr><td><a href="func-string-strtoupper.html">strtoupper()</a></td><td>把字符串转换为大写字母。</td></tr><tr><td><a href="func-string-strtr.html">strtr()</a></td><td>转换字符串中特定的字符。</td></tr><tr><td><a href="func-string-substr.html">substr()</a></td><td>返回字符串的一部分。</td></tr><tr><td><a href="func-string-mb_substr.html">mb_substr()</a></td><td>返回中文字符串的一部分。</td></tr><tr><td><a href="func-string-substr-compare.html">substr_compare()</a></td><td>从指定的开始位置（二进制安全和选择性区分大小写）比较两个字符串。</td></tr><tr><td><a href="func-string-substr-count.html">substr_count()</a></td><td>计算子串在字符串中出现的次数。</td></tr><tr><td><a href="func-string-substr-replace.html">substr_replace()</a></td><td>把字符串的一部分替换为另一个字符串。</td></tr><tr><td><a href="func-string-trim.html">trim()</a></td><td>移除字符串两侧的空白字符和其他字符。</td></tr><tr><td><a href="func-string-ucfirst.html">ucfirst()</a></td><td>把字符串中的首字符转换为大写。</td></tr><tr><td><a href="func-string-ucwords.html">ucwords()</a></td><td>把字符串中每个单词的首字符转换为大写。</td></tr><tr><td><a href="func-string-vfprintf.html">vfprintf()</a></td><td>把格式化的字符串写到指定的输出流。</td></tr><tr><td><a href="func-string-vprintf.html">vprintf()</a></td><td>输出格式化的字符串。</td></tr><tr><td><a href="func-string-vsprintf.html">vsprintf()</a></td><td>把格式化字符串写入变量中。</td></tr><tr><td><a href="func-string-wordwrap.html">wordwrap()</a></td><td>按照指定长度对字符串进行折行处理。</td></tr></tbody></table></div><h1 id="PHP-超级全局变量"><a href="#PHP-超级全局变量" class="headerlink" title="PHP 超级全局变量"></a>PHP 超级全局变量</h1><hr><p>超级全局变量在PHP 4.1.0之后被启用, 是PHP系统中自带的变量，在一个脚本的全部作用域中都可用。</p><hr><h2 id="PHP-超级全局变量-1"><a href="#PHP-超级全局变量-1" class="headerlink" title="PHP 超级全局变量"></a>PHP 超级全局变量</h2><p>PHP中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。</p><p>PHP 超级全局变量列表:</p><ul><li>$GLOBALS</li><li>$_SERVER</li><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_ENV</li><li>$_COOKIE</li><li>$_SESSION</li></ul><p>本章节我们将讲解几个常用的超级全局变量,其余变量我们在接下来几个章节会介绍到。</p><hr><h2 id="PHP-GLOBALS"><a href="#PHP-GLOBALS" class="headerlink" title="PHP $GLOBALS"></a>PHP $GLOBALS</h2><p>$GLOBALS 是PHP的一个超级全局变量组，在一个PHP脚本的全部作用域中都可以访问。</p><p>$GLOBALS 是一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p><p>以下实例介绍了如何使用超级全局变量 $GLOBALS:</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="number">75</span>;</span><br><span class="line">    <span class="variable">$y</span> = <span class="number">25</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addition</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$GLOBALS</span>[<span class="string">&#x27;z&#x27;</span>] = <span class="variable">$GLOBALS</span>[<span class="string">&#x27;x&#x27;</span>] +<span class="variable">$GLOBALS</span>[<span class="string">&#x27;y&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">addition</span>();</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$z</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>以上实例中 z 是一个$GLOBALS数组中的超级全局变量，该变量同样可以在函数外访问。</p><hr><h2 id="PHP-SERVER"><a href="#PHP-SERVER" class="headerlink" title="PHP $_SERVER"></a>PHP $_SERVER</h2><p>$_SERVER 是一个包含了诸如头信息(header)、路径(path)、以及脚本位置(script<br>locations)等等信息的数组。这个数组中的项目由 Web<br>服务器创建。不能保证每个服务器都提供全部项目；服务器可能会忽略一些，或者提供一些没有在这里列举出来的项目。</p><p>以下实例中展示了如何使用$_SERVER中的元素:</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;PHP_SELF&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;SERVER_NAME&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_HOST&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_USER_AGENT&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;SCRIPT_NAME&#x27;</span>]; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>下表列出了所有 $_SERVER 变量中的重要元素:</p><div class="table-container"><table><thead><tr><th>元素/代码</th><th>描述</th></tr></thead><tbody><tr><td>$_SERVER[‘PHP_SELF’]</td><td>当前执行脚本的文件名，与 document root 有关。例如，在地址为 <a href="http://example.com/test.php/foo.bar">http://example.com/test.php/foo.bar</a> 的脚本中使用 $_SERVER[‘PHP_SELF’] 将得到 /test.php/foo.bar。<strong>FILE</strong> 常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0 版本开始，如果 PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。</td></tr><tr><td>$_SERVER[‘GATEWAY_INTERFACE’]</td><td>服务器使用的 CGI 规范的版本；例如，”CGI/1.1”。</td></tr><tr><td>$_SERVER[‘SERVER_ADDR’]</td><td>当前运行脚本所在的服务器的 IP 地址。</td></tr><tr><td>$_SERVER[‘SERVER_NAME’]</td><td>当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。(如: www.runoob.com)</td></tr><tr><td>$_SERVER[‘SERVER_SOFTWARE’]</td><td>服务器标识字符串，在响应请求时的头信息中给出。 (如：Apache/2.2.24)</td></tr><tr><td>$_SERVER[‘SERVER_PROTOCOL’]</td><td>请求页面时通信协议的名称和版本。例如，”HTTP/1.0”。</td></tr><tr><td>$_SERVER[‘REQUEST_METHOD’]</td><td>访问页面使用的请求方法；例如，”GET”, “HEAD”，”POST”，”PUT”。</td></tr><tr><td>$_SERVER[‘REQUEST_TIME’]</td><td>请求开始时的时间戳。从 PHP 5.1.0 起可用。 (如：1377687496)</td></tr><tr><td>$_SERVER[‘QUERY_STRING’]</td><td>query string（查询字符串），如果有的话，通过它进行页面访问。</td></tr><tr><td>$_SERVER[‘HTTP_ACCEPT’]</td><td>当前请求头中 Accept: 项的内容，如果存在的话。</td></tr><tr><td>$_SERVER[‘HTTP_ACCEPT_CHARSET’]</td><td>当前请求头中 Accept-Charset: 项的内容，如果存在的话。例如：”iso-8859-1,*,utf-8”。</td></tr><tr><td>$_SERVER[‘HTTP_HOST’]</td><td>当前请求头中 Host: 项的内容，如果存在的话。</td></tr><tr><td>$_SERVER[‘HTTP_REFERER’]</td><td>引导用户代理到当前页的前一页的地址（如果存在）。由 user agent 设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改 HTTP_REFERER 的功能。简言之，该值并不可信。)</td></tr><tr><td>$_SERVER[‘HTTPS’]</td><td>如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。</td></tr><tr><td>$_SERVER[‘REMOTE_ADDR’]</td><td>浏览当前页面的用户的 IP 地址。</td></tr><tr><td>$_SERVER[‘REMOTE_HOST’]</td><td>浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的 REMOTE_ADDR。</td></tr><tr><td>$_SERVER[‘REMOTE_PORT’]</td><td>用户机器上连接到 Web 服务器所使用的端口号。</td></tr><tr><td>$_SERVER[‘SCRIPT_FILENAME’]</td><td>当前执行脚本的绝对路径。</td></tr><tr><td>$_SERVER[‘SERVER_ADMIN’]</td><td>该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。(如：someone@runoob.com)</td></tr><tr><td>$_SERVER[‘SERVER_PORT’]</td><td>Web 服务器使用的端口。默认值为 “80”。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。</td></tr><tr><td>$_SERVER[‘SERVER_SIGNATURE’]</td><td>包含了服务器版本和虚拟主机名的字符串。</td></tr><tr><td>$_SERVER[‘PATH_TRANSLATED’]</td><td>当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。</td></tr><tr><td>$_SERVER[‘SCRIPT_NAME’]</td><td>包含当前脚本的路径。这在页面需要指向自己时非常有用。<strong>FILE</strong> 常量包含当前脚本(例如包含文件)的完整路径和文件名。</td></tr><tr><td>$_SERVER[‘SCRIPT_URI’]</td><td>URI 用来指定要访问的页面。例如 “/index.html”。</td></tr></tbody></table></div><hr><h2 id="PHP-REQUEST"><a href="#PHP-REQUEST" class="headerlink" title="PHP $_REQUEST"></a>PHP $_REQUEST</h2><p>PHP $_REQUEST 用于收集HTML表单提交的数据。</p><p>以下实例显示了一个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 “Submit” 按钮提交表单数据时,<br>表单数据将发送至\<form>标签中 action 属性中指定的脚本文件。<br>在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量<br>$_REQUEST 来收集表单中的 input 字段数据:</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;&lt;?php echo <span class="subst">$_SERVER</span>[&#x27;PHP_SELF&#x27;];?&gt;&quot;</span>&gt;</span><br><span class="line">Name: </span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;fname&quot;</span>&gt; </span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span>&gt; </span><br><span class="line">&lt;/form&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="meta">?&gt;</span> </span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><h2 id="PHP-POST"><a href="#PHP-POST" class="headerlink" title="PHP $_POST"></a>PHP $_POST</h2><p>PHP $_POST 被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method=”post”。</p><p>以下实例显示了一个输入字段（input）及提交按钮(submit)的表单(form)。 当用户通过点击 “Submit” 按钮提交表单数据时,<br>表单数据将发送至\<form>标签中 action 属性中指定的脚本文件。<br>在这个实例中，我们指定文件来处理表单数据。如果你希望其他的PHP文件来处理该数据，你可以修改该指定的脚本文件名。 然后，我们可以使用超级全局变量<br>$_POST 来收集表单中的 input 字段数据:</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;form method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;&lt;?php echo <span class="subst">$_SERVER</span>[&#x27;PHP_SELF&#x27;];?&gt;&quot;</span>&gt;</span><br><span class="line">Name: &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;fname&quot;</span>&gt; &lt;input type=<span class="string">&quot;submit&quot;</span>&gt; </span><br><span class="line">&lt;/form&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;fname&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="meta">?&gt;</span> </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-GET"><a href="#PHP-GET" class="headerlink" title="PHP $_GET"></a>PHP $_GET</h2><p>PHP $_GET 同样被广泛应用于收集表单数据，在HTML form标签的指定该属性：”method=”get”。</p><p>$_GET 也可以收集URL中发送的数据。</p><p>假定我们有一个包含参数的超链接HTML页面：</p><p>​    </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;test_get.php?subject=PHP&amp;web=runoob.com&quot;</span>&gt;</span>Test $GET<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><p>当用户点击链接 “Test $GET”, 参数 “subject” 和 “web” 将发送至”test_get.php”,你可以在<br>“test_get.php” 文件中使用 $_GET 变量来获取这些数据。</p><p>以下实例显示了 “test_get.php” 文件的代码:</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt; </span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Study &quot;</span> . <span class="variable">$_GET</span>[<span class="string">&#x27;subject&#x27;</span>] . <span class="string">&quot; @ &quot;</span> . <span class="variable">$_GET</span>[<span class="string">&#x27;web&#x27;</span>];</span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><br><strong>提示：</strong> 你如果想学习更多关于 $_POST 和 $_GET 的知识，请访问 PHP 表单章节。</p><h1 id="PHP-魔术常量"><a href="#PHP-魔术常量" class="headerlink" title="PHP 魔术常量"></a>PHP 魔术常量</h1><p>PHP 向它运行的任何脚本提供了大量的预定义常量。</p><p>不过很多常量都是由不同的扩展库定义的，只有在加载了这些扩展库时才会出现，或者动态加载后，或者在编译时已经包括进去了。</p><p>有八个魔术常量它们的值随着它们在代码中的位置改变而改变。</p><p>例如 <strong>LINE</strong> 的值就依赖于它在脚本中所处的行来决定。这些特殊的常量不区分大小写，如下：</p><hr><h2 id="LINE"><a href="#LINE" class="headerlink" title="LINE"></a><strong>LINE</strong></h2><p>文件中的当前行号。</p><p><strong>实例</strong></p><p>&lt;?php echo ‘这是第 “ ‘ . <strong>LINE</strong> . ‘ “ 行’; ?&gt;</p><p>以上实例输出结果为：</p><p>​    </p><pre><code>这是第 “ 2 ” 行</code></pre><p>​    </p><hr><h2 id="FILE"><a href="#FILE" class="headerlink" title="FILE"></a><strong>FILE</strong></h2><p>文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名。</p><p>自 PHP 4.0.2 起，<strong>FILE</strong> 总是包含一个绝对路径（如果是符号连接，则是解析后的绝对路径），而在此之前的版本有时会包含一个相对路径。</p><p>实例:</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><p>&lt;?php echo ‘该文件位于 “ ‘ . <strong>FILE</strong> . ‘ “ ‘; ?&gt;</p><p>以上实例输出结果为：</p><p>​    </p><pre><code>该文件位于 “ E:\wamp\www\test\index.php ”</code></pre><p>​    </p><hr><h2 id="DIR"><a href="#DIR" class="headerlink" title="DIR"></a><strong>DIR</strong></h2><p>文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。</p><p>它等价于 dirname(<strong>FILE</strong>)。除非是根目录，否则目录中名不包括末尾的斜杠。（PHP 5.3.0中新增）</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><p>&lt;?php echo ‘该文件位于 “ ‘ . <strong>DIR</strong> . ‘ “ ‘; ?&gt;</p><p>以上实例输出结果为：</p><p>​    </p><pre><code>该文件位于 “ E:\wamp\www\test ”</code></pre><p>​    </p><hr><h2 id="FUNCTION"><a href="#FUNCTION" class="headerlink" title="FUNCTION"></a><strong>FUNCTION</strong></h2><p>函数名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该函数被定义时的名字（区分大小写）。在 PHP 4 中该值总是小写字母的。</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><p>&lt;?php function test() { echo ‘函数名为：’ . <strong>FUNCTION</strong> ; } test(); ?&gt;</p><p>以上实例输出结果为：</p><p>​    </p><pre><code>函数名为：test</code></pre><p>​    </p><hr><h2 id="CLASS"><a href="#CLASS" class="headerlink" title="CLASS"></a><strong>CLASS</strong></h2><p>类的名称（PHP 4.3.0 新加）。自 PHP 5 起本常量返回该类被定义时的名字（区分大小写）。</p><p>在 PHP 4 中该值总是小写字母的。类名包括其被声明的作用区域（例如 Foo\Bar）。注意自 PHP 5.4 起 <strong>CLASS</strong> 对 trait<br>也起作用。当用在 trait 方法中时，<strong>CLASS</strong> 是调用 trait 方法的类的名字。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><p>&lt;?php class test { function _print() { echo ‘类名为：’ . <strong>CLASS</strong> . “<br>“; echo<br>‘函数名为：’ . <strong>FUNCTION</strong> ; } } $t = new test(); $t-&gt;_print(); ?&gt;</p><p>以上实例输出结果为：</p><p>​    </p><pre><code>类名为：test函数名为：_print</code></pre><p>​    </p><hr><h2 id="TRAIT"><a href="#TRAIT" class="headerlink" title="TRAIT"></a><strong>TRAIT</strong></h2><p>Trait 的名字（PHP 5.4.0 新加）。自 PHP 5.4.0 起，PHP 实现了代码复用的一个方法，称为 traits。</p><p>Trait 名包括其被声明的作用区域（例如 Foo\Bar）。</p><p>从基类继承的成员被插入的 SayWorld Trait 中的 MyHelloWorld 方法所覆盖。其行为 MyHelloWorld<br>类中定义的方法一致。优先顺序是当前类中的方法会覆盖 trait 方法，而 trait 方法又覆盖了基类中的方法。</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><p>&lt;?php class Base { public function sayHello() { echo ‘Hello ‘; } } trait<br>SayWorld { public function sayHello() { parent::sayHello(); echo ‘World!’; } }<br>class MyHelloWorld extends Base { use SayWorld; } $o = new MyHelloWorld();<br>$o-&gt;sayHello(); ?&gt;</p><p>以上例程会输出：</p><p>​    </p><pre><code>Hello World!</code></pre><p>​    </p><hr><h2 id="METHOD"><a href="#METHOD" class="headerlink" title="METHOD"></a><strong>METHOD</strong></h2><p>类的方法名（PHP 5.0.0 新加）。返回该方法被定义时的名字（区分大小写）。</p><p>实例:</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;函数名为：&#x27;</span> . <span class="keyword">__METHOD__</span> ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">test</span>(); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>以上实例输出结果为：</p><p>​    </p><pre><code>函数名为：test</code></pre><p>​    </p><hr><h2 id="NAMESPACE"><a href="#NAMESPACE" class="headerlink" title="NAMESPACE"></a><strong>NAMESPACE</strong></h2><p>当前命名空间的名称（区分大小写）。此常量是在编译时定义的（PHP 5.3.0 新增）。</p><p>实例:</p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">MyProject</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;命名空间为：&quot;&#x27;</span>, <span class="keyword">__NAMESPACE__</span>, <span class="string">&#x27;&quot;&#x27;</span>; <span class="comment">// 输出</span></span><br><span class="line"><span class="string">&quot;MyProject&quot;</span> </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><p>​    </p><pre><code>命名空间为：&quot;MyProject&quot;</code></pre><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php数组</title>
      <link href="/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phparray/"/>
      <url>/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phparray/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-数组"><a href="#PHP-数组" class="headerlink" title="PHP 数组"></a>PHP 数组</h1><hr><p>数组能够在单个变量中存储多个值：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;I like &quot;</span> . <span class="variable">$cars</span>[<span class="number">0</span>] . <span class="string">&quot;, &quot;</span> . <span class="variable">$cars</span>[<span class="number">1</span>] . <span class="string">&quot; and &quot;</span> . <span class="variable">$cars</span>[<span class="number">2</span>] . <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="数组是什么？"><a href="#数组是什么？" class="headerlink" title="数组是什么？"></a>数组是什么？</h2><p>数组是一个能在单个变量中存储多个值的特殊变量。</p><p>如果您有一个项目清单（例如：车名字的清单），将其存储到单个变量中，如下所示：</p><p>$cars1=”Volvo”;<br>$cars2=”BMW”;<br>$cars3=”Toyota”;</p><p>然而，如果您想要遍历数组并找出特定的一个呢？如果数组的项不只 3 个而是 300 个呢？</p><p>解决办法是创建一个数组！</p><p>数组可以在单个变量中存储多个值，并且您可以根据键访问其中的值。</p><hr><h2 id="在-PHP-中创建数组"><a href="#在-PHP-中创建数组" class="headerlink" title="在 PHP 中创建数组"></a>在 PHP 中创建数组</h2><p>在 PHP 中，array() 函数用于创建数组：</p><p>array();</p><p>在 PHP 中，有三种类型的数组：</p><ul><li><strong>数值数组</strong> - 带有数字 ID 键的数组</li><li><strong>关联数组</strong> - 带有指定的键的数组，每个键关联一个值</li><li><strong>多维数组</strong> - 包含一个或多个数组的数组</li></ul><h2 id="PHP-数值数组"><a href="#PHP-数值数组" class="headerlink" title="PHP 数值数组"></a>PHP 数值数组</h2><p>这里有两种创建数值数组的方法：</p><p>自动分配 ID 键（ID 键总是从 0 开始）：</p><p>$cars=array(“Volvo”,”BMW”,”Toyota”);</p><p>人工分配 ID 键：</p><p>$cars[0]=”Volvo”;<br>$cars[1]=”BMW”;<br>$cars[2]=”Toyota”;</p><p>下面的实例创建一个名为 $cars 的数值数组，并给数组分配三个元素,然后打印一段包含数组值的文本：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I like &quot;</span> . <span class="variable">$cars</span>[<span class="number">0</span>] . <span class="string">&quot;, &quot;</span> . <span class="variable">$cars</span>[<span class="number">1</span>] . <span class="string">&quot; and &quot;</span> . <span class="variable">$cars</span>[<span class="number">2</span>] . <span class="string">&quot;.&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="获取数组的长度-count-函数"><a href="#获取数组的长度-count-函数" class="headerlink" title="获取数组的长度 - count() 函数"></a>获取数组的长度 - count() 函数</h2><p>count() 函数用于返回数组的长度（元素的数量）：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">count</span>(<span class="variable">$cars</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="遍历数值数组"><a href="#遍历数值数组" class="headerlink" title="遍历数值数组"></a>遍历数值数组</h2><p>遍历并打印数值数组中的所有值，您可以使用 for 循环，如下所示：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">    <span class="variable">$arrlength</span>=<span class="title function_ invoke__">count</span>(<span class="variable">$cars</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$x</span>=<span class="number">0</span>;<span class="variable">$x</span>&lt;<span class="variable">$arrlength</span>;<span class="variable">$x</span>++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$cars</span>[<span class="variable">$x</span>]; <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-关联数组"><a href="#PHP-关联数组" class="headerlink" title="PHP 关联数组"></a>PHP 关联数组</h2><p>关联数组是使用您分配给数组的指定的键的数组。</p><p>这里有两种创建关联数组的方法：</p><p>$age=array(“Peter”=&gt;”35”,”Ben”=&gt;”37”,”Joe”=&gt;”43”);</p><p>or:</p><p>$age[‘Peter’]=”35”;<br>$age[‘Ben’]=”37”;<br>$age[‘Joe’]=”43”;</p><p>随后可以在脚本中使用指定的键：</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$age</span>=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Peter is &quot;</span> . <span class="variable">$age</span>[<span class="string">&#x27;Peter&#x27;</span>] . <span class="string">&quot; years old.&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="遍历关联数组"><a href="#遍历关联数组" class="headerlink" title="遍历关联数组"></a>遍历关联数组</h2><p>遍历并打印关联数组中的所有值，您可以使用 foreach 循环，如下所示：</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$age</span>=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$age</span> <span class="keyword">as</span> <span class="variable">$x</span>=&gt;<span class="variable">$x_value</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Key=&quot;</span> . <span class="variable">$x</span> . <span class="string">&quot;, Value=&quot;</span> . <span class="variable">$x_value</span>; <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="PHP-5-Array-函数"><a href="#PHP-5-Array-函数" class="headerlink" title="PHP 5 Array 函数"></a>PHP 5 Array 函数</h1><hr><h2 id="PHP-Array-简介"><a href="#PHP-Array-简介" class="headerlink" title="PHP Array 简介"></a>PHP Array 简介</h2><p>PHP Array 函数允许您访问并操作数组。</p><p>支持简单的数组和多维数组。</p><hr><h1 id="PHP-数组排序"><a href="#PHP-数组排序" class="headerlink" title="PHP 数组排序"></a>PHP 数组排序</h1><hr><p>数组中的元素可以按字母或数字顺序进行降序或升序排列。</p><hr><h2 id="PHP-数组排序函数"><a href="#PHP-数组排序函数" class="headerlink" title="PHP - 数组排序函数"></a>PHP - 数组排序函数</h2><p>在本章中，我们将一一介绍下列 PHP 数组排序函数：</p><ul><li>sort() - 对数组进行升序排列</li><li>rsort() - 对数组进行降序排列</li><li>asort() - 根据关联数组的值，对数组进行升序排列</li><li>ksort() - 根据关联数组的键，对数组进行升序排列</li><li>arsort() - 根据关联数组的值，对数组进行降序排列</li><li>krsort() - 根据关联数组的键，对数组进行降序排列</li></ul><h2 id="sort-对数组进行升序排列"><a href="#sort-对数组进行升序排列" class="headerlink" title="sort() - 对数组进行升序排列"></a>sort() - 对数组进行升序排列</h2><p>下面的实例将 $cars 数组中的元素按照字母升序排列：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$cars</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>下面的实例将 $numbers 数组中的元素按照数字升序排列：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$numbers</span>=<span class="keyword">array</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>);  </span><br><span class="line"><span class="title function_ invoke__">sort</span>(<span class="variable">$numbers</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="rsort-对数组进行降序排列"><a href="#rsort-对数组进行降序排列" class="headerlink" title="rsort() - 对数组进行降序排列"></a>rsort() - 对数组进行降序排列</h2><p>下面的实例将 $cars 数组中的元素按照字母降序排列：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">rsort</span>(<span class="variable">$cars</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>下面的实例将 $numbers 数组中的元素按照数字降序排列：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$numbers</span>=<span class="keyword">array</span>(<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">11</span>);  </span><br><span class="line"><span class="title function_ invoke__">rsort</span>(<span class="variable">$numbers</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="asort-根据数组的值，对数组进行升序排列"><a href="#asort-根据数组的值，对数组进行升序排列" class="headerlink" title="asort() - 根据数组的值，对数组进行升序排列"></a>asort() - 根据数组的值，对数组进行升序排列</h2><p>下面的实例根据数组的值，对关联数组进行升序排列：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$age</span>=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">asort</span>(<span class="variable">$age</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="ksort-根据数组的键，对数组进行升序排列"><a href="#ksort-根据数组的键，对数组进行升序排列" class="headerlink" title="ksort() - 根据数组的键，对数组进行升序排列"></a>ksort() - 根据数组的键，对数组进行升序排列</h2><p>下面的实例根据数组的键，对关联数组进行升序排列：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$age</span>=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">ksort</span>(<span class="variable">$age</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="arsort-根据数组的值，对数组进行降序排列"><a href="#arsort-根据数组的值，对数组进行降序排列" class="headerlink" title="arsort() - 根据数组的值，对数组进行降序排列"></a>arsort() - 根据数组的值，对数组进行降序排列</h2><p>下面的实例根据数组的值，对关联数组进行降序排列：</p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$age</span>=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">arsort</span>(<span class="variable">$age</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="krsort-根据数组的键，对数组进行降序排列"><a href="#krsort-根据数组的键，对数组进行降序排列" class="headerlink" title="krsort() - 根据数组的键，对数组进行降序排列"></a>krsort() - 根据数组的键，对数组进行降序排列</h2><p>下面的实例根据数组的键，对关联数组进行降序排列：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$age</span>=<span class="keyword">array</span>(<span class="string">&quot;Peter&quot;</span>=&gt;<span class="string">&quot;35&quot;</span>,<span class="string">&quot;Ben&quot;</span>=&gt;<span class="string">&quot;37&quot;</span>,<span class="string">&quot;Joe&quot;</span>=&gt;<span class="string">&quot;43&quot;</span>);  </span><br><span class="line"><span class="title function_ invoke__">krsort</span>(<span class="variable">$age</span>);  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="PHP-5-Array-函数-1"><a href="#PHP-5-Array-函数-1" class="headerlink" title="PHP 5 Array 函数"></a>PHP 5 Array 函数</h2><div class="table-container"><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><a href="func-array.html">array()</a></td><td>创建数组。</td></tr><tr><td><a href="func-array-change-key-case.html">array_change_key_case()</a></td><td>返回其键均为大写或小写的数组。</td></tr><tr><td><a href="func-array-chunk.html">array_chunk()</a></td><td>把一个数组分割为新的数组块。</td></tr><tr><td><a href="func-array-column.html">array_column()</a></td><td>返回输入数组中某个单一列的值。</td></tr><tr><td><a href="func-array-combine.html">array_combine()</a></td><td>通过合并两个数组（一个为键名数组，一个为键值数组）来创建一个新数组。</td></tr><tr><td><a href="func-array-count-values.html">array_count_values()</a></td><td>用于统计数组中所有值出现的次数。</td></tr><tr><td><a href="func-array-diff.html">array_diff()</a></td><td>比较数组，返回两个数组的差集（只比较键值）。</td></tr><tr><td><a href="func-array-diff-assoc.html">array_diff_assoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值）。</td></tr><tr><td><a href="func-array-diff-key.html">array_diff_key()</a></td><td>比较数组，返回两个数组的差集（只比较键名）。</td></tr><tr><td><a href="func-array-diff-uassoc.html">array_diff_uassoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-diff-ukey.html">array_diff_ukey()</a></td><td>比较数组，返回两个数组的差集（只比较键名，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-fill.html">array_fill()</a></td><td>用给定的键值填充数组。</td></tr><tr><td><a href="func-array-fill-keys.html">array_fill_keys()</a></td><td>用给定的指定键名的键值填充数组。</td></tr><tr><td><a href="func-array-filter.html">array_filter()</a></td><td>用回调函数过滤数组中的元素。</td></tr><tr><td><a href="func-array-flip.html">array_flip()</a></td><td>反转/交换数组中的键名和对应关联的键值。</td></tr><tr><td><a href="func-array-intersect.html">array_intersect()</a></td><td>比较数组，返回两个数组的交集（只比较键值）。</td></tr><tr><td><a href="func-array-intersect-assoc.html">array_intersect_assoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值）。</td></tr><tr><td><a href="func-array-intersect-key.html">array_intersect_key()</a></td><td>比较数组，返回两个数组的交集（只比较键名）。</td></tr><tr><td><a href="func-array-intersect-uassoc.html">array_intersect_uassoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-intersect-ukey.html">array_intersect_ukey()</a></td><td>比较数组，返回两个数组的交集（只比较键名，使用用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-key-exists.html">array_key_exists()</a></td><td>检查指定的键名是否存在于数组中。</td></tr><tr><td><a href="func-array-key-first.html"> array_key_first()</a></td><td>获取指定数组的第一个键值。</td></tr><tr><td><a href="func-array-key-last.html">array_key_last()</a></td><td>获取指定数组的最后一个键值。</td></tr><tr><td><a href="func-array-keys.html">array_keys()</a></td><td>返回数组中所有的键名。</td></tr><tr><td><a href="func-array-map.html">array_map()</a></td><td>将用户自定义函数作用到给定数组的每个值上，返回新的值。</td></tr><tr><td><a href="func-array-merge.html">array_merge()</a></td><td>把一个或多个数组合并为一个数组。</td></tr><tr><td><a href="func-array-merge-recursive.html">array_merge_recursive()</a></td><td>递归地把一个或多个数组合并为一个数组。</td></tr><tr><td><a href="func-array-multisort.html">array_multisort()</a></td><td>对多个数组或多维数组进行排序。</td></tr><tr><td><a href="func-array-pad.html">array_pad()</a></td><td>将指定数量的带有指定值的元素插入到数组中。</td></tr><tr><td><a href="func-array-pop.html">array_pop()</a></td><td>删除数组中的最后一个元素（出栈）。</td></tr><tr><td><a href="func-array-product.html">array_product()</a></td><td>计算数组中所有值的乘积。</td></tr><tr><td><a href="func-array-push.html">array_push()</a></td><td>将一个或多个元素插入数组的末尾（入栈）。</td></tr><tr><td><a href="func-array-rand.html">array_rand()</a></td><td>从数组中随机选出一个或多个元素，返回键名。</td></tr><tr><td><a href="func-array-reduce.html">array_reduce()</a></td><td>通过使用用户自定义函数，迭代地将数组简化为一个字符串，并返回。</td></tr><tr><td><a href="func-array-replace.html">array_replace()</a></td><td>使用后面数组的值替换第一个数组的值。</td></tr><tr><td><a href="func-array-replace-recursive.html">array_replace_recursive()</a></td><td>递归地使用后面数组的值替换第一个数组的值。</td></tr><tr><td><a href="func-array-reverse.html">array_reverse()</a></td><td>将原数组中的元素顺序翻转，创建新的数组并返回。</td></tr><tr><td><a href="func-array-search.html">array_search()</a></td><td>在数组中搜索给定的值，如果成功则返回相应的键名。</td></tr><tr><td><a href="func-array-shift.html">array_shift()</a></td><td>删除数组中的第一个元素，并返回被删除元素的值。</td></tr><tr><td><a href="func-array-slice.html">array_slice()</a></td><td>返回数组中的选定部分。</td></tr><tr><td><a href="func-array-splice.html">array_splice()</a></td><td>把数组中的指定元素去掉并用其它值取代。</td></tr><tr><td><a href="func-array-sum.html">array_sum()</a></td><td>返回数组中所有值的和。</td></tr><tr><td><a href="func-array-udiff.html">array_udiff()</a></td><td>比较数组，返回两个数组的差集（只比较键值，使用一个用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-udiff-assoc.html">array_udiff_assoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</td></tr><tr><td><a href="func-array-udiff-uassoc.html">array_udiff_uassoc()</a></td><td>比较数组，返回两个数组的差集（比较键名和键值，使用两个用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-uintersect.html">array_uintersect()</a></td><td>比较数组，返回两个数组的交集（只比较键值，使用一个用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-uintersect-assoc.html">array_uintersect_assoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值，使用内建函数比较键名，使用用户自定义函数比较键值）。</td></tr><tr><td><a href="func-array-uintersect-uassoc.html">array_uintersect_uassoc()</a></td><td>比较数组，返回两个数组的交集（比较键名和键值，使用两个用户自定义的键名比较函数）。</td></tr><tr><td><a href="func-array-unique.html">array_unique()</a></td><td>删除数组中重复的值。</td></tr><tr><td><a href="func-array-unshift.html">array_unshift()</a></td><td>在数组开头插入一个或多个元素。</td></tr><tr><td><a href="func-array-values.html">array_values()</a></td><td>返回数组中所有的值。</td></tr><tr><td><a href="func-array-walk.html">array_walk()</a></td><td>对数组中的每个成员应用用户函数。</td></tr><tr><td><a href="func-array-walk-recursive.html">array_walk_recursive()</a></td><td>对数组中的每个成员递归地应用用户函数。</td></tr><tr><td><a href="func-array-arsort.html">arsort()</a></td><td>对关联数组按照键值进行降序排序。</td></tr><tr><td><a href="func-array-asort.html">asort()</a></td><td>对关联数组按照键值进行升序排序。</td></tr><tr><td><a href="func-array-compact.html">compact()</a></td><td>创建一个包含变量名和它们的值的数组。</td></tr><tr><td><a href="func-array-count.html">count()</a></td><td>返回数组中元素的数目。</td></tr><tr><td><a href="func-array-current.html">current()</a></td><td>返回数组中的当前元素。</td></tr><tr><td><a href="func-array-each.html">each()</a></td><td>返回数组中当前的键／值对。</td></tr><tr><td><a href="func-array-end.html">end()</a></td><td>将数组的内部指针指向最后一个元素。</td></tr><tr><td><a href="func-array-extract.html">extract()</a></td><td>从数组中将变量导入到当前的符号表。</td></tr><tr><td><a href="func-array-in-array.html">in_array()</a></td><td>检查数组中是否存在指定的值。</td></tr><tr><td><a href="func-array-key.html">key()</a></td><td>从关联数组中取得键名。</td></tr><tr><td><a href="func-array-krsort.html">krsort()</a></td><td>对关联数组按照键名降序排序。</td></tr><tr><td><a href="func-array-ksort.html">ksort()</a></td><td>对关联数组按照键名升序排序。</td></tr><tr><td><a href="func-array-list.html">list()</a></td><td>把数组中的值赋给一些数组变量。</td></tr><tr><td><a href="func-array-natcasesort.html">natcasesort()</a></td><td>用”自然排序”算法对数组进行不区分大小写字母的排序。</td></tr><tr><td><a href="func-array-natsort.html">natsort()</a></td><td>用”自然排序”算法对数组排序。</td></tr><tr><td><a href="func-array-next.html">next()</a></td><td>将数组中的内部指针向后移动一位。</td></tr><tr><td><a href="func-array-pos.html">pos()</a></td><td>current() 的别名。</td></tr><tr><td><a href="func-array-prev.html">prev()</a></td><td>将数组的内部指针倒回一位。</td></tr><tr><td><a href="func-array-range.html">range()</a></td><td>创建一个包含指定范围的元素的数组。</td></tr><tr><td><a href="func-array-reset.html">reset()</a></td><td>将数组的内部指针指向第一个元素。</td></tr><tr><td><a href="func-array-rsort.html">rsort()</a></td><td>对数值数组进行降序排序。</td></tr><tr><td><a href="func-array-shuffle.html">shuffle()</a></td><td>把数组中的元素按随机顺序重新排列。</td></tr><tr><td><a href="func-array-sizeof.html">sizeof()</a></td><td>count() 的别名。</td></tr><tr><td><a href="func-array-sort.html">sort()</a></td><td>对数值数组进行升序排序。</td></tr><tr><td><a href="func-array-uasort.html">uasort()</a></td><td>使用用户自定义的比较函数对数组中的键值进行排序。</td></tr><tr><td><a href="func-array-uksort.html">uksort()</a></td><td>使用用户自定义的比较函数对数组中的键名进行排序。</td></tr><tr><td><a href="func-array-usort.html">usort()</a></td><td>使用用户自定义的比较函数对数组进行排序。</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php输出函数</title>
      <link href="/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpprinthanshu/"/>
      <url>/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpprinthanshu/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-5-echo-和-print-语句"><a href="#PHP-5-echo-和-print-语句" class="headerlink" title="PHP 5 echo 和 print 语句"></a>PHP 5 echo 和 print 语句</h1><hr><p>在 PHP 中有两个基本的输出方式： echo 和 print。</p><hr><h2 id="PHP-echo-和-print-语句"><a href="#PHP-echo-和-print-语句" class="headerlink" title="PHP echo 和 print 语句"></a>PHP echo 和 print 语句</h2><p>echo 和 print 区别:</p><ul><li>echo - 可以输出一个或多个字符串</li><li>print - 只允许输出一个字符串，返回值总为 1</li></ul><p><strong>提示：</strong> echo 输出的速度比 print 快， echo 没有返回值，print有返回值1。</p><hr><h2 id="PHP-echo-语句"><a href="#PHP-echo-语句" class="headerlink" title="PHP echo 语句"></a>PHP echo 语句</h2><p>echo 是一个语言结构，使用的时候可以不用加括号，也可以加上括号： echo 或 echo()。</p><p><strong>显示字符串</strong></p><p>下面的实例演示了如何使用 echo 命令输出字符串（字符串可以包含 HTML 标签）：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;PHP 很有趣!&lt;/h2&gt;&quot;</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello world!&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;我要学 PHP!&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;这是一个&quot;</span>, <span class="string">&quot;字符串，&quot;</span>, <span class="string">&quot;使用了&quot;</span>, <span class="string">&quot;多个&quot;</span>, <span class="string">&quot;参数。&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>显示变量</strong></p><p>下面的实例演示了如何使用 echo 命令输出变量和字符串：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$txt1</span>=<span class="string">&quot;学习 PHP&quot;</span>;</span><br><span class="line"><span class="variable">$txt2</span>=<span class="string">&quot;RUNOOB.COM&quot;</span>;</span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$txt1</span>; <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;在 <span class="subst">$txt2</span> 学习 PHP &quot;</span>; <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; <span class="keyword">echo</span> <span class="string">&quot;我车的品牌是</span></span><br><span class="line"><span class="string"><span class="subst">&#123;$cars[0]&#125;</span>&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-print-语句"><a href="#PHP-print-语句" class="headerlink" title="PHP print 语句"></a>PHP print 语句</h2><p>print 同样是一个语言结构，可以使用括号，也可以不使用括号： print 或 print()。</p><p><strong>显示字符串</strong></p><p>下面的实例演示了如何使用 print 命令输出字符串（字符串可以包含 HTML 标签）：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;&lt;h2&gt;PHP 很有趣!&lt;/h2&gt;&quot;</span>; </span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;Hello world!&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="keyword">print</span> <span class="string">&quot;我要学习 PHP!&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>显示变量</strong></p><p>下面的实例演示了如何使用 print 命令输出变量和字符串：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$txt1</span>=<span class="string">&quot;学习 PHP&quot;</span>;</span><br><span class="line">    <span class="variable">$txt2</span>=<span class="string">&quot;RUNOOB.COM&quot;</span>; </span><br><span class="line">    <span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$txt1</span>; <span class="keyword">print</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;在 <span class="subst">$txt2</span> 学习 PHP &quot;</span>; </span><br><span class="line">    <span class="keyword">print</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line">    <span class="keyword">print</span><span class="string">&quot;我车的品牌是 <span class="subst">&#123;$cars[0]&#125;</span>&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP-EOF-heredoc-使用说明"><a href="#PHP-EOF-heredoc-使用说明" class="headerlink" title="PHP EOF(heredoc) 使用说明"></a>PHP EOF(heredoc) 使用说明</h1><p>PHP<br>EOF(heredoc)是一种在命令行shell（如sh、csh、ksh、bash、PowerShell和zsh）和程序语言（像Perl、PHP、Python和Ruby）里定义一个字符串的方法。</p><p>使用概述：</p><ul><li>1. 必须后接分号，否则编译通不过。</li><li>2. <strong>EOF</strong> 可以用任意其它字符代替，只需保证结束标识与开始标识一致。</li><li><strong>3. 结束标识必须顶格独自占一行(即必须从行首开始，前后不能衔接任何空白和字符)。</strong></li><li>4. 开始标识可以不带引号或带单双引号，不带引号与带双引号效果一致，解释内嵌的变量和转义符号，带单引号则不解释内嵌的变量和转义符号。</li><li>5. 当内容需要内嵌引号（单引号或双引号）时，不需要加转义符，本身对单双引号转义，此处相当与q和qq的用法。</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="keyword">echo</span> &lt;&lt;&lt;EOF  </span><br><span class="line">&lt;h1&gt;我的第一个标题&lt;/h1&gt;  </span><br><span class="line">&lt;p&gt;我的第一个段落。&lt;/p&gt;  </span><br><span class="line">EOF;  </span><br><span class="line"><span class="comment">// 结束需要独立一行且前后不能空格  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>1.以 &lt;&lt;&lt;EOF 开始标记开始，以 EOF 结束标记结束，结束标记必须顶头写，不能有缩进和空格，且在结束标记末尾要有分号 。</p><p>2.开始标记和结束标记相同，比如常用大写的 EOT、EOD、EOF<br>来表示，但是不只限于那几个(也可以用：JSON、HTML等)，只要保证开始标记和结束标记不在正文中出现即可。</p><p>3.位于开始标记和结束标记之间的变量可以被正常解析，但是函数则不可以。在 heredoc 中，变量不需要用连接符 . 或 , 来拼接，如下：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$name</span>=<span class="string">&quot;runoob&quot;</span>;  </span><br><span class="line"><span class="variable">$a</span>= &lt;&lt;&lt;EOF  </span><br><span class="line"><span class="string">&quot;abc&quot;</span><span class="variable">$name</span>  </span><br><span class="line"><span class="string">&quot;123&quot;</span>  </span><br><span class="line">EOF;  </span><br><span class="line"><span class="comment">// 结束需要独立一行且前后不能空格  </span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><h1 id="PHP-数据类型"><a href="#PHP-数据类型" class="headerlink" title="PHP 数据类型"></a>PHP 数据类型</h1><hr><p>PHP 变量存储不同的类型的数据，不同的数据类型可以做不一样的事情。</p><p>PHP 支持以下几种数据类型:</p><ul><li>String（字符串）</li><li>Integer（整型）</li><li>Float（浮点型）</li><li>Boolean（布尔型）</li><li>Array（数组）</li><li>Object（对象）</li><li>NULL（空值）</li><li>Resource（资源类型）</li></ul><hr><h2 id="PHP-字符串"><a href="#PHP-字符串" class="headerlink" title="PHP 字符串"></a>PHP 字符串</h2><p>一个字符串是一串字符的序列，就像 “Hello world!”。</p><p>你可以将任何文本放在单引号和双引号中：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="string">&quot;Hello world!&quot;</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$x</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="string">&#x27;Hello world!&#x27;</span>; <span class="keyword">echo</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-整型"><a href="#PHP-整型" class="headerlink" title="PHP 整型"></a>PHP 整型</h2><p>整数是一个没有小数的数字。</p><p>整数规则:</p><ul><li>整数必须至少有一个数字 (0-9)</li><li>整数不能包含逗号或空格</li><li>整数是没有小数点的</li><li>整数可以是正数或负数</li><li>整型可以用三种格式来指定：十进制， 十六进制（ 以 0x 为前缀）或八进制（前缀为 0）。</li></ul><p>在以下实例中我们将测试不同的数字。</p><p>PHP <a href="/php/php-var_dump-function.html">var_dump() </a> 函数返回变量的数据类型和值：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span> = <span class="number">5985</span>; <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = -<span class="number">345</span>; <span class="comment">// 负数  var_dump($x);</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="number">0x8C</span>; <span class="comment">// 十六进制数 var_dump($x); echo &quot;&lt;br&gt;&quot;; $x = 047; // 八进制数</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-浮点型"><a href="#PHP-浮点型" class="headerlink" title="PHP 浮点型"></a>PHP 浮点型</h2><p>浮点数是带小数部分的数字，或是指数形式。</p><p>在以下实例中我们将测试不同的数字。 PHP var_dump() 函数返回变量的数据类型和值：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span> = <span class="number">10.365</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="number">2.4e3</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>; </span><br><span class="line"><span class="variable">$x</span> = <span class="number">8E-5</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-布尔型"><a href="#PHP-布尔型" class="headerlink" title="PHP 布尔型"></a>PHP 布尔型</h2><p>布尔型可以是 TRUE 或 FALSE。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$x</span>=<span class="literal">true</span>;  </span><br><span class="line"><span class="variable">$y</span>=<span class="literal">false</span>;</span><br></pre></td></tr></table></figure><br>布尔型通常用于条件判断。在接下来的章节中你会学到更多关于条件控制的教程。</p><hr><h2 id="PHP-数组"><a href="#PHP-数组" class="headerlink" title="PHP 数组"></a>PHP 数组</h2><p>数组可以在一个变量中存储多个值。</p><p>在以下实例中创建了一个数组， 然后使用 PHP var_dump() 函数返回数组的数据类型和值：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$cars</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>在接下来的章节中你将学到更多关于数组的知识。</p><hr><h2 id="PHP-对象"><a href="#PHP-对象" class="headerlink" title="PHP 对象"></a>PHP 对象</h2><p>对象数据类型也可以用于存储数据。</p><p>在 PHP 中，对象必须声明。</p><p>首先，你必须使用class关键字声明类对象。类是可以包含属性和方法的结构。</p><p>然后我们在类中定义数据类型，然后在实例化的类中使用数据类型：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123; </span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$color</span>; </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$color</span>=<span class="string">&quot;green&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;color = <span class="variable">$color</span>; &#125; </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">what_color</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;color; &#125;&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><p>以上实例中PHP关键字this就是指向当前对象实例的指针，不指向任何其他对象或类。</p><p>你将会在接下来的章节中学会更多关于对象的知识。</p><hr><h2 id="PHP-NULL-值"><a href="#PHP-NULL-值" class="headerlink" title="PHP NULL 值"></a>PHP NULL 值</h2><p>NULL 值表示变量没有值。NULL 是数据类型为 NULL 的值。</p><p>NULL 值指明一个变量是否为空值。 同样可用于数据空值和NULL值的区别。</p><p>可以通过设置变量值为 NULL 来清空变量数据：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="string">&quot;Hello world!&quot;</span>; </span><br><span class="line"><span class="variable">$x</span>=<span class="literal">null</span>; </span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="PHP-资源类型"><a href="#PHP-资源类型" class="headerlink" title="PHP 资源类型"></a>PHP 资源类型</h2><p>PHP 资源 resource 是一种特殊变量，保存了到外部资源的一个引用。</p><p>常见资源数据类型有打开文件、数据库连接、图形画布区域等。</p><p>由于资源类型变量保存有为打开文件、数据库连接、图形画布区域等的特殊句柄，因此将其它类型的值转换为资源没有意义。</p><p>使用 <strong>get_resource_type()</strong> 函数可以返回资源（resource）类型：</p><p>​<br>    get_resource_type(resource $handle): string</p><p>此函数返回一个字符串，用于表示传递给它的 resource 的类型。如果参数不是合法的 resource，将产生错误。</p><p>如下实例：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">mysql_connect</span>();  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_resource_type</span>(<span class="variable">$c</span>).<span class="string">&quot;\n&quot;</span>;  </span><br><span class="line"><span class="comment">// 打印：mysql link  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;foo&quot;</span>,<span class="string">&quot;w&quot;</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_resource_type</span>(<span class="variable">$fp</span>).<span class="string">&quot;\n&quot;</span>;  </span><br><span class="line"><span class="comment">// 打印：file  </span></span><br><span class="line"></span><br><span class="line"><span class="variable">$doc</span> = <span class="title function_ invoke__">new_xmldoc</span>(<span class="string">&quot;1.0&quot;</span>);  </span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_resource_type</span>(<span class="variable">$doc</span>-&gt;doc).<span class="string">&quot;\n&quot;</span>;  </span><br><span class="line"><span class="comment">// 打印：domxml document  </span></span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php语句</title>
      <link href="/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpyuju/"/>
      <url>/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpyuju/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-If…Else-语句"><a href="#PHP-If…Else-语句" class="headerlink" title="PHP If…Else 语句"></a>PHP If…Else 语句</h1><hr><p>条件语句用于根据不同条件执行不同动作。</p><hr><h2 id="PHP-条件语句"><a href="#PHP-条件语句" class="headerlink" title="PHP 条件语句"></a>PHP 条件语句</h2><p>当您编写代码时，您常常需要为不同的判断执行不同的动作。您可以在代码中使用条件语句来完成此任务。</p><p>在 PHP 中，提供了下列条件语句：</p><ul><li><strong>if 语句</strong> - 在条件成立时执行代码</li><li><strong>if…else 语句</strong> - 在条件成立时执行一块代码，条件不成立时执行另一块代码</li><li><strong>if…elseif….else 语句</strong> - 在若干条件之一成立时执行一个代码块</li><li><strong>switch 语句</strong> - 在若干条件之一成立时执行一个代码块</li></ul><hr><h2 id="PHP-if-语句"><a href="#PHP-if-语句" class="headerlink" title="PHP - if 语句"></a>PHP - if 语句</h2><p>if 语句用于<strong>仅当指定条件成立时执行代码</strong> 。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>if (条件)&#123;    条件成立时要执行的代码;&#125;</code></pre><p>​    </p><p>如果当前时间小于 20，下面的实例将输出 “Have a good day!”：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$t</span>=<span class="title function_ invoke__">date</span>(<span class="string">&quot;H&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;20&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good day!&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="PHP-if…else-语句"><a href="#PHP-if…else-语句" class="headerlink" title="PHP - if…else 语句"></a>PHP - if…else 语句</h2><p><strong>在条件成立时执行一块代码，条件不成立时执行另一块代码</strong> ，请使用 if….else 语句。</p><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>if (_条件_)  &#123;  _条件成立时执行的代码;_  &#125;  else  &#123;  _条件不成立时执行的代码;  _&#125;</code></pre><p>如果当前时间小于 20，下面的实例将输出 “Have a good day!”，否则输出 “Have a good night!”：</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$<span class="number">1</span>t=<span class="title function_ invoke__">date</span>(<span class="string">&quot;H&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;20&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good day!&quot;</span>; &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    echo0 <span class="string">&quot;Have a good night!&quot;</span>; &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-if…elseif…-else-语句"><a href="#PHP-if…elseif…-else-语句" class="headerlink" title="PHP - if…elseif….else 语句"></a>PHP - if…elseif….else 语句</h2><p><strong>在若干条件之一成立时执行一个代码块</strong> ，请使用 if….elseif…else 语句。.</p><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>if (条件)&#123;    if 条件成立时执行的代码;&#125;elseif (条件)&#123;    elseif 条件成立时执行的代码;&#125;else&#123;    条件不成立时执行的代码;&#125;</code></pre><p>如果当前时间小于 10，下面的实例将输出 “Have a good morning!”，如果当前时间不小于 10 且小于 20，则输出 “Have a<br>good day!”，否则输出 “Have a good night!”：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$t</span>=<span class="title function_ invoke__">date</span>(<span class="string">&quot;H&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;10&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good morning!&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$t</span>&lt;<span class="string">&quot;20&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good day!&quot;</span>; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Have a good night!&quot;</span>; &#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h1 id="PHP-switch-语句"><a href="#PHP-switch-语句" class="headerlink" title="PHP - switch 语句"></a>PHP - switch 语句</h1><p>switch 语句用于根据多个不同条件执行不同动作。</p><hr><h2 id="PHP-Switch-语句"><a href="#PHP-Switch-语句" class="headerlink" title="PHP Switch 语句"></a>PHP Switch 语句</h2><p>如果您希望<strong>有选择地执行若干代码块之一</strong> ，请使用 switch 语句。</p><h2 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">switch</span> (expression) &#123;</span><br><span class="line">    <span class="keyword">case</span> value1: <span class="comment">// 代码块1</span></span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> value2: <span class="comment">// 代码块2</span></span><br><span class="line"><span class="keyword">break</span>; <span class="comment">// 更多的 case 语句</span></span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">// 如果没有匹配的值</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><ul><li><code>expression</code> 是要被比较的表达式。</li><li><code>case value:</code> 是可能的值，如果 <code>expression</code> 的值等于某个 <code>case</code> 的值，就执行相应的代码块。</li><li><code>break;</code> 用于终止 <code>switch</code> 语句，防止继续执行下一个 <code>case</code>。</li><li><code>default:</code> 是可选的，用于指定当没有匹配的 <code>case</code> 时执行的代码块。</li></ul><p><strong>工作原理：</strong> 首先对一个简单的表达式 _n_ （通常是变量）进行一次计算。将表达式的值与结构中每个 case 的值进行比较。如果存在匹配，则执行与<br>case 关联的代码。代码执行后，使用 <strong>break</strong> 来阻止代码跳入下一个 case 中继续执行。<strong>default</strong> 语句用于不存在匹配（即没有<br>case 为真）时执行。</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$favcolor</span>=<span class="string">&quot;red&quot;</span>;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$favcolor</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;red&quot;</span>: <span class="keyword">echo</span> <span class="string">&quot;你喜欢的颜色是红色!&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;blue&quot;</span>: <span class="keyword">echo</span> <span class="string">&quot;你喜欢的颜色是蓝色!&quot;</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;green&quot;</span>: <span class="keyword">echo</span> <span class="string">&quot;你喜欢的颜色是绿色!&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>: <span class="keyword">echo</span> <span class="string">&quot;你喜欢的颜色不是 红, 蓝, 或绿色!&quot;</span>; &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP-循环-While-循环"><a href="#PHP-循环-While-循环" class="headerlink" title="PHP 循环 - While 循环"></a>PHP 循环 - While 循环</h1><hr><p>循环执行代码块指定的次数，或者当指定的条件为真时循环执行代码块。</p><hr><h2 id="PHP-循环"><a href="#PHP-循环" class="headerlink" title="PHP 循环"></a>PHP 循环</h2><p>在您编写代码时，您经常需要让相同的代码块一次又一次地重复运行。我们可以在代码中使用循环语句来完成这个任务。</p><p>在 PHP 中，提供了下列循环语句：</p><ul><li><strong>while</strong> - 只要指定的条件成立，则循环执行代码块</li><li><strong>do…while</strong> - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</li><li><strong>for</strong> - 循环执行代码块指定的次数</li><li><strong>foreach</strong> - 根据数组中每个元素来循环代码块</li></ul><hr><h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><p>while 循环将重复执行代码块，直到指定的条件不成立。</p><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>while (条件)&#123;    要执行的代码;&#125;</code></pre><h3 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h3><p>下面的实例首先设置变量 _i_ 的值为 1 ($i=1;)。</p><p>然后，只要 _i_ 小于或者等于 5，while 循环将继续运行。循环每运行一次， _i_ 就会递增 1：</p><p>​    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt; </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$i</span>&lt;=<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;The number is &quot;</span> . <span class="variable">$i</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><p>The number is 1<br>The number is 2<br>The number is 3<br>The number is 4<br>The number is 5</p><hr><h2 id="do…while-语句"><a href="#do…while-语句" class="headerlink" title="do…while 语句"></a>do…while 语句</h2><p>do…while 语句会至少执行一次代码，然后检查条件，只要条件成立，就会重复进行循环。</p><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>do&#123;    要执行的代码;&#125;while (条件);</code></pre><h3 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h3><p>下面的实例首先设置变量 _i_ 的值为 1 ($i=1;)。</p><p>然后，开始 do…while 循环。循环将变量 _i_ 的值递增 1，然后输出。先检查条件（ _i_ 小于或者等于 5），只要 _i_ 小于或者等于<br>5，循环将继续运行：</p><p>​    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;  </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span>=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;The number is &quot;</span> . <span class="variable">$i</span> . <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span>&lt;=<span class="number">5</span>);</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>输出：</p><p>The number is 2<br>The number is 3<br>The number is 4<br>The number is 5<br>The number is 6</p><h1 id="PHP-循环-For-循环"><a href="#PHP-循环-For-循环" class="headerlink" title="PHP 循环 - For 循环"></a>PHP 循环 - For 循环</h1><hr><p>循环执行代码块指定的次数，或者当指定的条件为真时循环执行代码块。</p><hr><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><p>for 循环用于您预先知道脚本需要运行的次数的情况。</p><h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>for (初始值; 条件; 增量)    &#123;        要执行的代码;    &#125;</code></pre><p>参数：</p><ul><li><strong>初始值</strong> ：主要是初始化一个变量值，用于设置一个计数器（但可以是任何在循环的开始被执行一次的代码）。</li><li><strong>条件</strong> ：循环执行的限制条件。如果为 TRUE，则循环继续。如果为 FALSE，则循环结束。</li><li><strong>增量</strong> ：主要用于递增计数器（但可以是任何在循环的结束被执行的代码）。</li></ul><p><strong>注释：</strong> 上面的<strong>初始值</strong> 和<strong>增量</strong> 参数可为空，或者有多个表达式（用逗号分隔）。</p><h3 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h3><p>下面的实例定义一个初始值为 i=1 的循环。只要变量 i 小于或者等于 5，循环将继续运行。循环每运行一次，变量 i 就会递增 1：</p><p><strong>实例</strong><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span>&lt;=<span class="number">5</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;数字为 &quot;</span> . <span class="variable">$i</span> . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><br>输出：</p><p>​    </p><pre><code>数字为 1数字为 2数字为 3数字为 4数字为 5</code></pre><hr><h2 id="foreach-循环"><a href="#foreach-循环" class="headerlink" title="foreach 循环"></a>foreach 循环</h2><p>foreach 循环用于遍历数组。</p><h3 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h3><p>​    </p><pre><code>foreach ($array as $value)    &#123;        要执行代码;    &#125;</code></pre><p>每进行一次循环，当前数组元素的值就会被赋值给 $value 变量（数组指针会逐一地移动），在进行下一次循环时，您将看到数组中的下一个值。</p><p>​    </p><pre><code>foreach ($array as $key =&gt; $value)    &#123;        要执行代码;    &#125;</code></pre><p>每一次循环，当前数组元素的键与值就都会被赋值给 $key 和 $value 变量（数字指针会逐一地移动），在进行下一次循环时，你将看到数组中的下一个键与值。</p><h3 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h3><p>下面的实例演示了一个输出给定数组的值的循环：</p><h2 id="实例-7"><a href="#实例-7" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="keyword">array</span>(<span class="string">&quot;Google&quot;</span>,<span class="string">&quot;Runoob&quot;</span>,<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$value</span> . PHP_EOL; </span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><p>​    </p><pre><code>GoogleRunoobTaobao</code></pre><p>下面的实例演示了一个输出给定数组键与值的循环：</p><h2 id="实例-8"><a href="#实例-8" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="keyword">array</span>(<span class="number">1</span>=&gt;<span class="string">&quot;Google&quot;</span>, <span class="number">2</span>=&gt;<span class="string">&quot;Runoob&quot;</span>, <span class="number">3</span>=&gt;<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$x</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;key 为 &quot;</span> . <span class="variable">$key</span> . <span class="string">&quot;，对应的 value 为 &quot;</span>. <span class="variable">$value</span> . PHP_EOL;</span><br><span class="line">    &#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出：</p><p>​    </p><pre><code>key  为 1，对应的 value 为 Googlekey  为 2，对应的 value 为 Runoobkey  为 3，对应的 value 为 Taobao</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php运算符</title>
      <link href="/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/yunsuanfu/"/>
      <url>/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/yunsuanfu/</url>
      
        <content type="html"><![CDATA[<h1 id="PHP-运算符"><a href="#PHP-运算符" class="headerlink" title="PHP 运算符"></a>PHP 运算符</h1><hr><p>本章节我们将讨论 PHP 中不同运算符的应用。</p><p>在 PHP 中，赋值运算符 = 用于给变量赋值。</p><p>在 PHP 中，算术运算符 + 用于把值加在一起。</p><hr><h2 id="PHP-算术运算符"><a href="#PHP-算术运算符" class="headerlink" title="PHP 算术运算符"></a>PHP 算术运算符</h2><div class="table-container"><table><thead><tr><th style="text-align:left">算符</th><th style="text-align:left">名称</th><th style="text-align:left">描述</th><th style="text-align:left">实例</th><th style="text-align:left">结果</th></tr></thead><tbody><tr><td style="text-align:left">x + y</td><td style="text-align:left">加</td><td style="text-align:left">x 和 y 的和</td><td style="text-align:left">2 + 2</td><td style="text-align:left">4</td></tr><tr><td style="text-align:left">x - y</td><td style="text-align:left">减</td><td style="text-align:left">x 和 y 的差</td><td style="text-align:left">5 - 2</td><td style="text-align:left">3</td></tr><tr><td style="text-align:left">x * y</td><td style="text-align:left">乘</td><td style="text-align:left">x 和 y 的积</td><td style="text-align:left">5 * 2</td><td style="text-align:left">10</td></tr><tr><td style="text-align:left">x / y</td><td style="text-align:left">除</td><td style="text-align:left">x 和 y 的商</td><td style="text-align:left">15 / 5</td><td style="text-align:left">3</td></tr><tr><td style="text-align:left">x % y</td><td style="text-align:left">模（除法的余数）</td><td style="text-align:left">x 除以 y 的余数</td><td style="text-align:left">5 % 2 10 % 8 10 % 2</td><td style="text-align:left">1 2 0</td></tr><tr><td style="text-align:left">-x</td><td style="text-align:left">设置负数</td><td style="text-align:left">取 x 的相反符号</td><td style="text-align:left"><code>&lt;?php $x = 2; echo -$x; ?&gt;</code></td><td style="text-align:left">-2</td></tr><tr><td style="text-align:left">~x</td><td style="text-align:left">取反</td><td style="text-align:left">x 取反，按二进制位进行”取反”运算。运算规则：<code>~1=-2;    ~0=-1;</code></td><td style="text-align:left"><code>&lt;?php $x = 2; echo ~$x; ?&gt;</code></td><td style="text-align:left">-3</td></tr><tr><td style="text-align:left">a . b</td><td style="text-align:left">并置</td><td style="text-align:left">连接两个字符串</td><td style="text-align:left">“Hi” . “Ha”</td><td style="text-align:left">HiHa</td></tr></tbody></table></div><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$x</span>=<span class="number">10</span>; <span class="variable">$y</span>=<span class="number">6</span>; </span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$x</span> \+ <span class="variable">$y</span>); <span class="comment">// 输出16 </span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">// 换行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$x</span> \-<span class="variable">$y</span>); <span class="comment">// 输出4</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">// 换行</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">echo</span> (<span class="variable">$x</span> * <span class="variable">$y</span>); <span class="comment">// 输出60</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">// 换行 </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">echo</span> (<span class="variable">$x</span> / <span class="variable">$y</span>); <span class="comment">// 输出1.6666666666667</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">// 换行</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">echo</span> (<span class="variable">$x</span> % <span class="variable">$y</span>); <span class="comment">// 输出4</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>; <span class="comment">// 换行 echo -$x;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP7+ 版本新增整除运算符 <strong>intdiv()</strong> ，该函数返回值为第一个参数除于第二个参数的值并取整（向下取整），使用实例：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">intdiv</span>(<span class="number">10</span>, <span class="number">3</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上实例会输出：int(3)</p><hr><h2 id="PHP-赋值运算符"><a href="#PHP-赋值运算符" class="headerlink" title="PHP 赋值运算符"></a>PHP 赋值运算符</h2><p>在 PHP 中，基本的赋值运算符是 =。它意味着左操作数被设置为右侧表达式的值。也就是说，$x = 5 的值是 5。</p><div class="table-container"><table><thead><tr><th>运算符</th><th>等同于</th><th>描述</th></tr></thead><tbody><tr><td>x = y</td><td>x = y</td><td>左操作数被设置为右侧表达式的值</td></tr><tr><td>x += y</td><td>x = x + y</td><td>加</td></tr><tr><td>x -= y</td><td>x = x - y</td><td>减</td></tr><tr><td>x *= y</td><td>x = x * y</td><td>乘</td></tr><tr><td>x /= y</td><td>x = x / y</td><td>除</td></tr><tr><td>x %= y</td><td>x = x % y</td><td>模（除法的余数）</td></tr><tr><td>a .= b</td><td>a = a . b</td><td>连接两个字符串</td></tr></tbody></table></div><p>以下实例演示了使用不同赋值运算符得到的不同结果：</p><p><strong>实例</strong></p><p>&lt;?php<br>    $x=10;<br>    echo $x; // 输出10</p><pre><code>$y=20;$y += 100;echo $y; // 输出120$z=50;$z -=25;echo $z; // 输出25$i=5;$i *= 6;echo $i; // 输出30$j=10;$j /= 5;echo $j;// 输出2$k=15;$k %= 4;echo $k; // 输出3 </code></pre><p>?&gt;</p><p>以下实例演示了使用不同字符串运算符得到的相同结果：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="variable">$b</span> = <span class="variable">$a</span> . <span class="string">&quot; world!&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$b</span>; <span class="comment">// 输出Hello world!</span></span><br><span class="line"><span class="variable">$x</span>=<span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="variable">$x</span> .= <span class="string">&quot; world!&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$x</span>; <span class="comment">// 输出Hello world!  </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-递增-递减运算符"><a href="#PHP-递增-递减运算符" class="headerlink" title="PHP 递增/递减运算符"></a>PHP 递增/递减运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>++ x</td><td>预递增</td><td>x 加 1，然后返回 x</td></tr><tr><td>x ++</td><td>后递增</td><td>返回 x，然后 x 加 1</td></tr><tr><td>-- x</td><td>预递减</td><td>x 减 1，然后返回 x</td></tr><tr><td>x —</td><td>后递减</td><td>返回 x，然后 x 减 1</td></tr></tbody></table></div><p>以下实例演示了使用递增/递减运算符得到的结果：</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$x</span>=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">echo</span> ++<span class="variable">$x</span>; <span class="comment">// 输出11</span></span><br><span class="line">    <span class="variable">$y</span>=<span class="number">10</span>; <span class="keyword">echo</span> <span class="variable">$y</span>++; <span class="comment">// 输出10</span></span><br><span class="line">    <span class="variable">$z</span>=<span class="number">5</span>; <span class="keyword">echo</span> \--<span class="variable">$z</span>; <span class="comment">//输出4</span></span><br><span class="line">    <span class="variable">$i</span>=<span class="number">5</span>; <span class="keyword">echo</span> <span class="variable">$i</span>\--; <span class="comment">// 输出5 </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-比较运算符"><a href="#PHP-比较运算符" class="headerlink" title="PHP 比较运算符"></a>PHP 比较运算符</h2><p>比较操作符可以让您比较两个值：</p><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>x == y</td><td>等于</td><td>如果 x 等于 y，则返回 true</td><td>5==8 返回 false</td></tr><tr><td>x === y</td><td>绝对等于</td><td>如果 x 等于 y，且它们类型相同，则返回 true</td><td>5===”5” 返回 false</td></tr><tr><td>x != y</td><td>不等于</td><td>如果 x 不等于 y，则返回 true</td><td>5!=8 返回 true</td></tr><tr><td>x &lt;&gt; y</td><td>不等于</td><td>如果 x 不等于 y，则返回 true</td><td>5&lt;&gt;8 返回 true</td></tr><tr><td>x !== y</td><td>不绝对等于</td><td>如果 x 不等于 y，或它们类型不相同，则返回 true</td><td>5!==”5” 返回 true</td></tr><tr><td>x &gt; y</td><td>大于</td><td>如果 x 大于 y，则返回 true</td><td>5&gt;8 返回 false</td></tr><tr><td>x &lt; y</td><td>小于</td><td>如果 x 小于 y，则返回 true</td><td>5&lt;8 返回 true</td></tr><tr><td>x &gt;= y</td><td>大于等于</td><td>如果 x 大于或者等于 y，则返回 true</td><td>5&gt;=8 返回 false</td></tr><tr><td>x &lt;= y</td><td>小于等于</td><td>如果 x 小于或者等于 y，则返回 true</td><td>5&lt;=8 返回 true</td></tr></tbody></table></div><p>以下实例演示了使用一些比较运算符得到的不同结果：</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span>=<span class="number">100</span>;</span><br><span class="line">    <span class="variable">$y</span>=<span class="string">&quot;100&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> == <span class="variable">$y</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> === <span class="variable">$y</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> != <span class="variable">$y</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> !== <span class="variable">$y</span>);</span><br><span class="line">    <span class="keyword">echo</span><span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="variable">$a</span>=<span class="number">50</span>; <span class="variable">$b</span>=<span class="number">90</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span> &gt; <span class="variable">$b</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span> &lt; <span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-逻辑运算符"><a href="#PHP-逻辑运算符" class="headerlink" title="PHP 逻辑运算符"></a>PHP 逻辑运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th><th>实例</th></tr></thead><tbody><tr><td>x and y</td><td>与</td><td>如果 x 和 y 都为 true，则返回 true</td><td>x=6</td></tr><tr><td>y=3</td><td></td><td></td><td></td></tr><tr><td>(x &lt; 10 and y &gt; 1) 返回 true</td><td></td><td></td><td></td></tr><tr><td>x or y</td><td>或</td><td>如果 x 和 y 至少有一个为 true，则返回 true</td><td>x=6</td></tr><tr><td>y=3</td><td></td><td></td><td></td></tr><tr><td>(x==6 or y==5) 返回 true</td><td></td><td></td><td></td></tr><tr><td>x xor y</td><td>异或</td><td>如果 x 和 y 有且仅有一个为 true，则返回 true</td><td>x=6</td></tr><tr><td>y=3</td><td></td><td></td><td></td></tr><tr><td>(x==6 xor y==3) 返回 false</td><td></td><td></td><td></td></tr><tr><td>x &amp;&amp; y</td><td>与</td><td>如果 x 和 y 都为 true，则返回 true</td><td>x=6</td></tr><tr><td>y=3</td><td></td><td></td><td></td></tr><tr><td>(x &lt; 10 &amp;&amp; y &gt; 1) 返回 true</td><td></td><td></td><td></td></tr><tr><td>x</td><td></td><td>y</td><td>或</td></tr><tr><td>y=3</td><td></td><td></td><td></td></tr><tr><td>(x==5</td><td></td><td>y==5) 返回 false</td><td></td></tr><tr><td>! x</td><td>非</td><td>如果 x 不为 true，则返回 true</td><td>x=6</td></tr><tr><td>y=3</td><td></td><td></td><td></td></tr><tr><td>!(x==y) 返回 true</td><td></td><td></td></tr></tbody></table></div><hr><h2 id="PHP-数组运算符"><a href="#PHP-数组运算符" class="headerlink" title="PHP 数组运算符"></a>PHP 数组运算符</h2><div class="table-container"><table><thead><tr><th>运算符</th><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>x + y</td><td>集合</td><td>x 和 y 的集合</td></tr><tr><td>x == y</td><td>相等</td><td>如果 x 和 y 具有相同的键/值对，则返回 true</td></tr><tr><td>x === y</td><td>恒等</td><td>如果 x 和 y 具有相同的键/值对，且顺序相同类型相同，则返回 true</td></tr><tr><td>x != y</td><td>不相等</td><td>如果 x 不等于 y，则返回 true</td></tr><tr><td>x &lt;&gt; y</td><td>不相等</td><td>如果 x 不等于 y，则返回 true</td></tr><tr><td>x !== y</td><td>不恒等</td><td>如果 x 不等于 y，则返回 true</td></tr></tbody></table></div><p>以下实例演示了使用一些数组运算符得到的不同结果：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$x</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;red&quot;</span>, <span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;green&quot;</span>);</span><br><span class="line">    <span class="variable">$y</span> = <span class="keyword">array</span>(<span class="string">&quot;c&quot;</span> =&gt; <span class="string">&quot;blue&quot;</span>, <span class="string">&quot;d&quot;</span>=&gt; <span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">    <span class="variable">$z</span> = <span class="variable">$x</span> \+ <span class="variable">$y</span>; <span class="comment">// $x 和 $y 数组合并</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$z</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> == <span class="variable">$y</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> === <span class="variable">$y</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> != <span class="variable">$y</span>); <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> &lt;&gt; <span class="variable">$y</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$x</span> !==<span class="variable">$y</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><p>另一个条件运算符是”?:”（或三元）运算符 。</p><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(expr1) ? (expr2) : (expr3) </span><br></pre></td></tr></table></figure><p>对 expr1 求值为 TRUE 时的值为 expr2，在 expr1 求值为 FALSE 时的值为 expr3。</p><p>自 PHP 5.3 起，可以省略三元运算符中间那部分。表达式 <strong>expr1 ?: expr3</strong> 在 expr1 求值为 TRUE 时返回 expr1，否则返回<br>expr3。</p><p><strong>实例</strong></p><p>以下实例中通过判断 $_GET 请求中含有 user 值，如果有返回 $_GET[‘user’]，否则返回 nobody：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 普通写法</span></span><br><span class="line"><span class="variable">$username</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]) ? <span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>] : <span class="string">&#x27;nobody&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>, PHP_EOL;</span><br><span class="line"><span class="comment">// PHP 5.3+ 版本写法</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>] ?:<span class="string">&#x27;nobody&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$username</span>, PHP_EOL;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> PHP_EOL 是一个换行符，兼容更大平台。</p><p>在 PHP7+ 版本多了一个 NULL 合并运算符 ??，实例如下：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 如果 $_GET[&#x27;user&#x27;] 不存在返回 &#x27;nobody&#x27;，否则返回 $_GET[&#x27;user&#x27;] 的值 </span></span><br><span class="line"><span class="variable">$username</span> =<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>] ?? <span class="string">&#x27;nobody&#x27;</span>;</span><br><span class="line"><span class="comment">// 类似的三元运算符</span></span><br><span class="line"><span class="variable">$username</span> = <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>]) ?<span class="variable">$_GET</span>[<span class="string">&#x27;user&#x27;</span>] : <span class="string">&#x27;nobody&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="组合比较符-PHP7"><a href="#组合比较符-PHP7" class="headerlink" title="组合比较符(PHP7+)"></a>组合比较符(PHP7+)</h2><p>PHP7+ 支持组合比较符（combined comparison operator）也称之为太空船操作符，符号为<br>&lt;=&gt;。组合比较运算符可以轻松实现两个变量的比较，当然不仅限于数值类数据的比较。</p><p>语法格式如下：</p><blockquote><p>c = $a &lt;=&gt; $b;</p></blockquote><p>解析如下：</p><ul><li>如果<strong>$a &gt; $b</strong>, 则 <strong>$c</strong> 的值为 <strong>1</strong> 。</li><li>如果 <strong>$a == $b</strong> , 则 <strong>$c</strong> 的值为 <strong>0</strong> 。</li><li>如果 <strong>$a &lt; $b</strong>, 则 <strong>$c</strong> 的值为 <strong>-1</strong> 。</li></ul><p>实例如下：</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 整型</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">// 0</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="number">1</span> &lt;=&gt; <span class="number">2</span>; <span class="comment">// -1</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="number">2</span> &lt;=&gt; <span class="number">1</span>; <span class="comment">// 1 // 浮点型</span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">// 0</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="number">1.5</span> &lt;=&gt; <span class="number">2.5</span>; <span class="comment">// -1</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="number">2.5</span> &lt;=&gt; <span class="number">1.5</span>; <span class="comment">// 1 // 字符串</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a&quot;</span> &lt;=&gt; <span class="string">&quot;a&quot;</span>; <span class="comment">// 0</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a&quot;</span> &lt;=&gt; <span class="string">&quot;b&quot;</span>; <span class="comment">// -1</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;b&quot;</span> &lt;=&gt; <span class="string">&quot;a&quot;</span>; <span class="comment">// 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h2><p>下表按照优先级从高到低列出了运算符。同一行中的运算符具有相同优先级，此时它们的结合方向决定求值顺序。</p><p><strong>说明</strong> ：左 ＝ 从左到右，右 ＝ 从右到左。</p><div class="table-container"><table><thead><tr><th>结合方向</th><th>运算符</th><th>附加信息</th></tr></thead><tbody><tr><td>无</td><td>clone new</td><td>clone 和 new</td></tr><tr><td>左</td><td>[</td><td>array()</td></tr><tr><td>右</td><td>++ — ~ (int) (float) (string) (array) (object) (bool) @</td><td>类型和递增／递减</td></tr><tr><td>无</td><td>instanceof</td><td>类型</td></tr><tr><td>右</td><td>!</td><td>逻辑运算符</td></tr><tr><td>左</td><td>* / %</td><td>算术运算符</td></tr><tr><td>左</td><td>+ – .</td><td>算术运算符和字符串运算符</td></tr><tr><td>左</td><td>&lt;&lt; &gt;&gt;</td><td>位运算符</td></tr><tr><td>无</td><td>== != === !== &lt;&gt;</td><td>比较运算符</td></tr><tr><td>左</td><td>&amp;</td><td>位运算符和引用</td></tr><tr><td>左</td><td>^</td><td>位运算符</td></tr><tr><td>左</td><td></td><td></td></tr><tr><td>左</td><td>&amp;&amp;</td><td>逻辑运算符</td></tr><tr><td>左</td><td></td><td></td></tr><tr><td>左</td><td>? :</td><td>三元运算符</td></tr><tr><td>右</td><td>= += -= *= /= .= %= &amp;=</td><td>= ^= &lt;&lt;= &gt;&gt;= =&gt;</td></tr><tr><td>左</td><td>and</td><td>逻辑运算符</td></tr><tr><td>左</td><td>xor</td><td>逻辑运算符</td></tr><tr><td>左</td><td>or</td><td>逻辑运算符</td></tr><tr><td>左</td><td>,</td><td>多处用到</td></tr></tbody></table></div><p>运算符优先级中，or 和 ||，&amp;&amp; 和 and 都是逻辑运算符，效果一样，但是其优先级却不一样。</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 优先级： &amp;&amp; &gt; = &gt; and</span></span><br><span class="line"><span class="comment">// 优先级： || &gt; = &gt; or</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">3</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> <span class="keyword">or</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$c</span>); <span class="comment">// 这里的 $c 为 int 值3，而不是 boolean 值 true</span></span><br><span class="line"><span class="variable">$d</span> = <span class="variable">$a</span> || <span class="variable">$b</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$d</span>); <span class="comment">//这里的 $d 就是 boolean 值 true  ?&gt;</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><blockquote><p>int(3)<br>bool(true)</p></blockquote><h3 id="括号的使用"><a href="#括号的使用" class="headerlink" title="括号的使用"></a>括号的使用</h3><p>我们通过括号的配对来明确标明运算顺序，而非靠运算符优先级和结合性来决定，通常能够增加代码的可读性。</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 括号优先运算 </span></span><br><span class="line">    </span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>; </span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>; </span><br><span class="line"><span class="variable">$c</span> = <span class="number">3</span>; </span><br><span class="line"><span class="variable">$d</span> = <span class="variable">$a</span> \+ <span class="variable">$b</span> * <span class="variable">$c</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$d</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$e</span> = (<span class="variable">$a</span> \+ <span class="variable">$b</span>) * <span class="variable">$c</span>;<span class="comment">// 使用括号 </span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$e</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上实例输出结果为：</p><p>​    </p><pre><code>79</code></pre><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php基础</title>
      <link href="/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpbasic/"/>
      <url>/2024/08/06/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/php/phpbasic/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="PHP-语法"><a href="#PHP-语法" class="headerlink" title="PHP 语法"></a>PHP 语法</h1><hr><p>PHP 脚本在服务器上执行，然后将纯 HTML 结果发送回浏览器。</p><hr><h2 id="基本的-PHP-语法"><a href="#基本的-PHP-语法" class="headerlink" title="基本的 PHP 语法"></a>基本的 PHP 语法</h2><p>PHP 脚本可以放在文档中的任何位置。</p><p>PHP 脚本以 &lt;?php 开始，以 ?&gt; 结束：</p>   <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PHP 代码</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP 文件的默认文件扩展名是 .php。</p><p>PHP 文件通常包含 HTML 标签和一些 PHP 脚本代码。</p><p>下面，我们提供了一个简单的 PHP 文件实例，它可以向浏览器输出文本 “Hello World!”：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello World!&quot;</span>; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>PHP 中的每个代码行都必须以分号结束。分号是一种分隔符，用于把指令集区分开来。</p><p>通过 PHP，有两种在浏览器输出文本的基础指令：<strong>echo</strong> 和 <strong>print</strong> 。</p><hr><h2 id="PHP-中的注释实例"><a href="#PHP-中的注释实例" class="headerlink" title="PHP 中的注释实例"></a>PHP 中的注释实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">// 这是 PHP 单行注释  </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">这是 </span></span><br><span class="line"><span class="comment">PHP 多行 </span></span><br><span class="line"><span class="comment">注释 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h1 id="PHP-变量"><a href="#PHP-变量" class="headerlink" title="PHP 变量"></a>PHP 变量</h1><hr><p>变量是用于存储信息的”容器”：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="number">5</span>; <span class="variable">$y</span>=<span class="number">6</span>; <span class="variable">$z</span>=<span class="variable">$x</span>+<span class="variable">$y</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$z</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>与代数类似</p><p>x=5<br>y=6<br>z=x+y</p><p>在代数中，我们使用字母（如 x），并给它赋值（如 5）。</p><p>从上面的表达式 z=x+y ，我们可以计算出 z 的值为 11。</p><p>在 PHP 中，这些字母被称为<strong>变量</strong> 。</p><blockquote><p>变量是用于存储数据的容器。  </p></blockquote><hr><h2 id="PHP-变量-1"><a href="#PHP-变量-1" class="headerlink" title="PHP 变量"></a>PHP 变量</h2><p>与代数类似，可以给 PHP 变量赋予某个值（x=5）或者表达式（z=x+y）。</p><p>变量可以是很短的名称（如 x 和 y）或者更具描述性的名称（如 age、carname、totalvolume）。</p><p>PHP 变量规则：</p><ul><li>变量以 $ 符号开始，后面跟着变量的名称</li><li>变量名必须以字母或者下划线字符开始</li><li>变量名只能包含字母、数字以及下划线（A-z、0-9 和 _ ）</li><li>变量名不能包含空格</li><li>变量名是区分大小写的（$y 和 $Y 是两个不同的变量）</li></ul><blockquote><p>PHP 语句和 PHP 变量都是区分大小写的。  </p></blockquote><hr><h2 id="创建（声明）PHP-变量"><a href="#创建（声明）PHP-变量" class="headerlink" title="创建（声明）PHP 变量"></a>创建（声明）PHP 变量</h2><p>PHP 没有声明变量的命令。</p><p>变量在您第一次赋值给它的时候被创建：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="variable">$txt</span>=<span class="string">&quot;Hello world!&quot;</span>; </span><br><span class="line"><span class="variable">$x</span>=<span class="number">5</span>; <span class="variable">$y</span>=<span class="number">10.5</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在上面的语句执行中，变量 <strong>txt</strong> 将保存值 <strong>Hello world!</strong> ，且变量 <strong>x</strong> 将保存值 <strong>5</strong> 。</p><p><strong>注释：</strong> 当您赋一个文本值给变量时，请在文本值两侧加上引号。</p><hr><h2 id="PHP-是一门弱类型语言"><a href="#PHP-是一门弱类型语言" class="headerlink" title="PHP 是一门弱类型语言"></a>PHP 是一门弱类型语言</h2><p>在上面的实例中，我们注意到，不必向 PHP 声明该变量的数据类型。</p><p>PHP 会根据变量的值，自动把变量转换为正确的数据类型。</p><p>在强类型的编程语言中，我们必须在使用变量前先声明（定义）变量的类型和名称。</p><hr><h2 id="PHP-变量作用域"><a href="#PHP-变量作用域" class="headerlink" title="PHP 变量作用域"></a>PHP 变量作用域</h2><p>变量的作用域是脚本中变量可被引用/使用的部分。</p><p>PHP 有四种不同的变量作用域：</p><ul><li>local</li><li>global</li><li>static</li><li>parameter</li></ul><hr><h2 id="局部和全局作用域"><a href="#局部和全局作用域" class="headerlink" title="局部和全局作用域"></a>局部和全局作用域</h2><p>在所有函数外部定义的变量，拥有全局作用域。除了函数外，全局变量可以被脚本中的任何部分访问，要在一个函数中访问一个全局变量，需要使用 global 关键字。</p><p>在 PHP 函数内部声明的变量是局部变量，仅能在函数内部访问：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="variable">$x</span>=<span class="number">5</span>; <span class="comment">// 全局变量  </span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="variable">$y</span>=<span class="number">10</span>; <span class="comment">// 局部变量  </span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;测试函数内变量:&lt;p&gt;&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;变量 x 为: <span class="subst">$x</span>&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;变量 y 为: <span class="subst">$y</span>&quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">myTest</span>();  </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p&gt;测试函数外变量:&lt;p&gt;&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;变量 x 为: <span class="subst">$x</span>&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;变量 y 为: <span class="subst">$y</span>&quot;</span>;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在以上实例中 myTest() 函数定义了 $x 和 $y 变量。 $x 变量在函数外声明，所以它是全局变量 ， $y 变量在函数内声明所以它是局部变量。</p><p>当我们调用myTest()函数并输出两个变量的值, 函数将会输出局部变量 $y 的值，但是不能输出 $x 的值，因为 $x<br>变量在函数外定义，无法在函数内使用，如果要在一个函数中访问一个全局变量，需要使用 global 关键字。</p><p>然后我们在myTest()函数外输出两个变量的值，函数将会输出全局变量 $x 的值，但是不能输出 $y 的值，因为 $y 变量在函数中定义，属于局部变量。</p><blockquote><p>你可以在不同函数中使用相同的变量名称，因为这些函数内定义的变量名是局部变量，只作用于该函数内。  </p></blockquote><hr><h2 id="PHP-global-关键字"><a href="#PHP-global-关键字" class="headerlink" title="PHP global 关键字"></a>PHP global 关键字</h2><p>global 关键字用于函数内访问全局变量。</p><p>在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 global 关键字：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="number">5</span>;</span><br><span class="line"><span class="variable">$y</span>=<span class="number">10</span>; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function">    </span>&#123; </span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$x</span>,<span class="variable">$y</span>; <span class="variable">$y</span>=<span class="variable">$x</span>+<span class="variable">$y</span>; </span><br><span class="line">    &#125; </span><br><span class="line"><span class="title function_ invoke__">myTest</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$y</span>; <span class="comment">// 输出 15 </span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>PHP 将所有全局变量存储在一个名为 $GLOBALS[_index_] 的数组中。 _index_<br>保存变量的名称。这个数组可以在函数内部访问，也可以直接用来更新全局变量。</p><p>上面的实例可以写成这样：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> <span class="variable">$x</span>=<span class="number">5</span>; <span class="variable">$y</span>=<span class="number">10</span>; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$GLOBALS</span>[<span class="string">&#x27;y&#x27;</span>]=<span class="variable">$GLOBALS</span>[<span class="string">&#x27;x&#x27;</span>]+<span class="variable">$GLOBALS</span>[<span class="string">&#x27;y&#x27;</span>]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">myTest</span>(); </span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$y</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="Static-作用域"><a href="#Static-作用域" class="headerlink" title="Static 作用域"></a>Static 作用域</h2><p>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候您希望某个局部变量不要被删除。</p><p>要做到这一点，请在您第一次声明变量时使用 <strong>static</strong> 关键字：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$x</span>=<span class="number">0</span>; <span class="keyword">echo</span> <span class="variable">$x</span>; <span class="variable">$x</span>++; <span class="keyword">echo</span> PHP_EOL; <span class="comment">// 换行符 </span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="title function_ invoke__">myTest</span>();</span><br><span class="line">    <span class="title function_ invoke__">myTest</span>();</span><br><span class="line">    <span class="title function_ invoke__">myTest</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后，每次调用该函数时，该变量将会保留着函数前一次被调用时的值。</p><p><strong>注释：</strong> 该变量仍然是函数的局部变量。</p><hr><h2 id="参数作用域"><a href="#参数作用域" class="headerlink" title="参数作用域"></a>参数作用域</h2><p>参数是通过调用代码将值传递给函数的局部变量。</p><p>参数是在参数列表中声明的，作为函数声明的一部分：</p><p><strong>实例</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myTest</span>(<span class="params"><span class="variable">$x</span></span>) </span>&#123; <span class="keyword">echo</span> <span class="variable">$x</span>; &#125; <span class="title function_ invoke__">myTest</span>(<span class="number">5</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码执行与命令执行漏洞</title>
      <link href="/2024/07/17/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/daima/"/>
      <url>/2024/07/17/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/daima/</url>
      
        <content type="html"><![CDATA[<h1 id="代码执行与命令执行漏洞"><a href="#代码执行与命令执行漏洞" class="headerlink" title="代码执行与命令执行漏洞"></a>代码执行与命令执行漏洞</h1><p>[toc]</p><h2 id="代码执行介绍"><a href="#代码执行介绍" class="headerlink" title="代码执行介绍"></a>代码执行介绍</h2><blockquote><p>当用户提交的参数被作为代码的时候，此时称为代码注入。广义代码注入：覆盖大半安全漏洞分类，例如SQL注入、xss跨站等。狭义：动态代码执行函数的参数过滤不严格，导致用户输入数据作为服务端代码执行。</p></blockquote><p><strong>以php为例：</strong></p><h3 id="代码执行-相关函数"><a href="#代码执行-相关函数" class="headerlink" title="代码执行(相关函数)"></a>代码执行(相关函数)</h3><p>大致分为五类：</p><p>1、eval+assert函数：接受字符串，使接受字符串作为脚本执行</p><p>2、preg_replace /e：正则匹配</p><p>3、用户自定义函数：用户可定义自己的函数执行</p><p>4、动态函数：声明变量，接受函数名称，通过变量名调用函数</p><p>5、其他</p><h4 id="1-eval-assert"><a href="#1-eval-assert" class="headerlink" title="1.eval+assert"></a>1.eval+assert</h4><h5 id="1-直接输入"><a href="#1-直接输入" class="headerlink" title="(1)直接输入"></a>(1)直接输入</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">eval</span>(php <span class="number">4</span>,php <span class="number">5</span>,php <span class="number">7</span>) -把字符串作为php代码执行，当用户可以控制字符串那么此时存在代码注入漏洞</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="keyword">string</span> <span class="variable">$code</span>) : <span class="keyword">mixed</span></span><br><span class="line">把字符串code作为php代码执行</span><br><span class="line"><span class="keyword">mixed</span>说明一个函数可以接受不同的(但不一定是所有的)类型</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">hightlight_file</span>(<span class="keyword">__FILE__</span>);<span class="comment">//输出文件内容</span></span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;phpinfo();&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">hightlight_file</span>(<span class="keyword">__FILE__</span>);<span class="comment">//输出文件内容</span></span><br><span class="line"><span class="title function_ invoke__">assert</span>(<span class="string">&quot;phpinfo()&quot;</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-通过GET-POST方式输入"><a href="#2-通过GET-POST方式输入" class="headerlink" title="(2)通过GET|POST方式输入"></a>(2)通过GET|POST方式输入</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">hightlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$cmd</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=phpinfo();</span></span><br></pre></td></tr></table></figure><p>安全人员手段：加引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&quot;\$ret = strtolower(&#x27;cmd&#x27;);&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>方法：闭合+注释<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=&#x27;);phpinfo()//</span></span><br></pre></td></tr></table></figure></p><p>如果开启了GPC就无法使用(会自动消除\\成\)</p><p>如果使用stripslashes()会将传入的’变成\‘</p><h4 id="2-preg-replace"><a href="#2-preg-replace" class="headerlink" title="2.preg_replace"></a>2.preg_replace</h4><p>执行正则表达式的搜索和替换</p><p>原本是执行正常的正则表达式的搜索和替换，但是存在危险的/e修饰，使preg_replace()将replacement参数当作PHP代码执行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    @<span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/abc/e&quot;</span>,<span class="variable">$REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>],<span class="string">&quot;abcd&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=phpinfo()</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/&lt;data&gt;(.*)&lt;/\data&gt;/e&#x27;</span>,<span class="string">&#x27;$ret=&quot;\\1&quot;;&#x27;</span>;<span class="variable">$cmd</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$ret</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=&lt;data&gt;&#123;$(phpinfo())&#125;&lt;/data&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-create-function执行漏洞"><a href="#3-create-function执行漏洞" class="headerlink" title="3.create_function执行漏洞"></a>3.create_function执行漏洞</h4><p>主要用来创建匿名函数，如果没有严格对参数传递进行过滤，攻击者可以构造特殊字符串传递给create_function(string $args, string $code)执行任意命令</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$func</span> = <span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="variable">$func</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=phpinfo();</span></span><br></pre></td></tr></table></figure><h5 id="动态函数调用"><a href="#动态函数调用" class="headerlink" title="动态函数调用"></a>动态函数调用</h5><p>示例一：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;func&quot;</span>]))&#123;</span><br><span class="line">        <span class="variable">$myfunc</span> = <span class="variable">$_GET</span>[<span class="string">&quot;func&quot;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$myfunc</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?func=phpinfo();</span></span><br></pre></td></tr></table></figure><p>示例二：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>](<span class="variable">$_GET</span>(<span class="string">&#x27;b&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?a=assert&amp;b=phpinfo();</span></span><br></pre></td></tr></table></figure><p>此时等价于执行 <strong>assert(phpinfo());</strong></p><h5 id="用户自定义函数回调"><a href="#用户自定义函数回调" class="headerlink" title="用户自定义函数回调"></a>用户自定义函数回调</h5><h6 id="call-user-func-、call-user-func-array"><a href="#call-user-func-、call-user-func-array" class="headerlink" title="call_user_func()、call_user_func_array():"></a>call_user_func()、call_user_func_array():</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="string">&#x27;assert&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=phpinfo()</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$array</span>[<span class="number">0</span>] = <span class="variable">$cmd</span>;</span><br><span class="line"><span class="title function_ invoke__">call_user_func_array</span>(<span class="string">&#x27;assert&#x27;</span>,<span class="variable">$array</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?cmd=phpinfo()</span></span><br></pre></td></tr></table></figure><h6 id="array-filter、array-map"><a href="#array-filter、array-map" class="headerlink" title="array_filter、array_map:"></a>array_filter、array_map:</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="variable">$func</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;func&#x27;</span>];</span><br><span class="line"><span class="variable">$array1</span> = <span class="keyword">array</span>(<span class="variable">$cmd</span>);</span><br><span class="line"><span class="variable">$result</span> = <span class="title function_ invoke__">array_filter</span>(<span class="variable">$array1</span>, <span class="variable">$func</span>); <span class="comment">//$func为回调函数，过滤$array1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入：http:<span class="comment">//127.0.0.1/?func=system&amp;cmd=whoami</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matplotlib</title>
      <link href="/2024/07/11/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/matplotlib/"/>
      <url>/2024/07/11/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/matplotlib/</url>
      
        <content type="html"><![CDATA[<h1 id="Matplotlib库"><a href="#Matplotlib库" class="headerlink" title="Matplotlib库"></a>Matplotlib库</h1><p>[toc]</p><h2 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h2><blockquote><p>ipython中可用魔法方法 %matplotilb inline</p><p>pycharm中必须plt.show()</p></blockquote><h2 id="使用定义"><a href="#使用定义" class="headerlink" title="使用定义"></a>使用定义</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h2 id="matplotlib三层结构"><a href="#matplotlib三层结构" class="headerlink" title="matplotlib三层结构"></a>matplotlib三层结构</h2><h3 id="1-容器层"><a href="#1-容器层" class="headerlink" title="1.容器层"></a>1.容器层</h3><p>主要由Canvas、figure、Axes组成。</p><p>Canvas是位于最底层的系统层，也是需要用户来操作的第一层，在绘画用于画布的角色。</p><p>Figure是Canvas上一层，也是用户来操作的应用层的第一层，充当画布的角色。</p><p>Axes是应用层的第二层，相当于画布上的绘图层的角色。</p><ul><li>Figure:指整个图形(可以通过plt.figure()设置画布的大小和分辨率等)</li><li>Axes(坐标系):数据的绘图区域</li><li>Axis(坐标轴):坐标系中的一个轴，包括大小限制、刻度和刻度表标签</li></ul><p>特点：</p><blockquote><p>一个figure(图像)可以包含多个Axes(坐标系/绘图区)，但是一个Axes只能属于一个figure</p><p>一个Axes(坐标系/绘图区)可以包含多个Axis(坐标轴)，两个即为2d坐标系，3个即为3d坐标系</p></blockquote><h3 id="2-辅助显示层"><a href="#2-辅助显示层" class="headerlink" title="2.辅助显示层"></a>2.辅助显示层</h3><p>是除了根据数据绘制出的图形以外的部分，主要有Axes外形、边框线、Axis(坐标轴)、图例、标题等</p><p>该层不会对图像产生实质性影响</p><h3 id="3-图像层"><a href="#3-图像层" class="headerlink" title="3.图像层"></a>3.图像层</h3><p>指通过plot、scatter、bar、histogram、pie等函数绘制出的图像</p><h2 id="一、折线图-plot"><a href="#一、折线图-plot" class="headerlink" title="一、折线图(plot)"></a>一、折线图(plot)</h2><h3 id="1-格式"><a href="#1-格式" class="headerlink" title="1.格式"></a>1.格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plot(x,y,fmt,*args,**kwargs)</span><br></pre></td></tr></table></figure><blockquote><p>x:表示x轴的数据，默认为range(len(y))。</p><p>y:表示y轴的数据</p><p>fmt:表示快速设置线条样式的格式字符串</p><p>label:表示应用于图例的标签文本</p></blockquote><h3 id="2-设置颜色、线条、数据标记"><a href="#2-设置颜色、线条、数据标记" class="headerlink" title="2.设置颜色、线条、数据标记"></a>2.设置颜色、线条、数据标记</h3><h4 id="基础颜色"><a href="#基础颜色" class="headerlink" title="基础颜色"></a>基础颜色</h4><p>主要有3种表示方式：单词缩写或单词、十六进制或HTML模式、RGB模式。</p><h5 id="单词缩写或单词："><a href="#单词缩写或单词：" class="headerlink" title="单词缩写或单词："></a>单词缩写或单词：</h5><div class="table-container"><table><thead><tr><th>单词缩写</th><th>单词</th><th>说明</th></tr></thead><tbody><tr><td>c</td><td>cyan</td><td>青色</td></tr><tr><td>m</td><td>magenda</td><td>洋红色</td></tr><tr><td>y</td><td>yellow</td><td>黄色</td></tr><tr><td>k</td><td>black</td><td>黑色</td></tr><tr><td>r</td><td>red</td><td>红色</td></tr><tr><td>g</td><td>green</td><td>绿色</td></tr><tr><td>b</td><td>blue</td><td>蓝色</td></tr><tr><td>w</td><td>while</td><td>自色</td></tr></tbody></table></div><h4 id="线型-linestyle或ls"><a href="#线型-linestyle或ls" class="headerlink" title="线型(linestyle或ls)"></a>线型(linestyle或ls)</h4><p>内置4种线条的线型：短虚线(‘:’)、点划线(‘-.’)、长虚线(‘—‘)、实线(‘-‘)。默认实线。</p><h4 id="数据标记-marker"><a href="#数据标记-marker" class="headerlink" title="数据标记(marker)"></a>数据标记(marker)</h4><h5 id="未填充的标记"><a href="#未填充的标记" class="headerlink" title="未填充的标记"></a>未填充的标记</h5><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/sphx_glr_marker_reference_001.png" alt="未填充的标记"></p><h5 id="填充标记"><a href="#填充标记" class="headerlink" title="填充标记"></a>填充标记</h5><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/sphx_glr_marker_reference_002.png" alt="填充标记"></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos安装python3</title>
      <link href="/2024/06/30/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%AE%89%E8%A3%85/python_download/"/>
      <url>/2024/06/30/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%AE%89%E8%A3%85/python_download/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.centos.bz/tag/centos7/">Centos7</a>默认自带了Python2.7版本,但是因为项目需要使用<a href="https://www.centos.bz/tag/python3/">Python3</a>.x你可以按照此文的三个方法进行安装.</p><p>注：本文示例安装版本为Python3.5，</p><h2 id="一、Python源代码编译安装"><a href="#一、Python源代码编译安装" class="headerlink" title="一、Python源代码编译安装"></a>一、Python源代码编译安装</h2><p>安装必要工具 yum-utils ，它的功能是管理repository及扩展包的工具 (主要是针对repository)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install yum-utils</span><br></pre></td></tr></table></figure><p>使用yum-builddep为Python3构建环境,安装缺失的软件依赖,使用下面的命令会自动处理.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum-builddep python</span><br></pre></td></tr></table></figure><p>完成后下载Python3的源码包（笔者以Python3.5为例），<a href="https://www.centos.bz/tag/python-3/">Python</a>源码包目录： <a href="https://www.centos.bz/tag/https/">https</a>://www.python.org/ftp/python/ ，截至发博当日Python3的最新版本为 3.7.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -O https://www.python.org/ftp/python/3.5.0/Python-3.5.0.tgz</span><br></pre></td></tr></table></figure><p>最后一步，编译安装Python3，默认的安装目录是 /usr/local 如果你要改成其他目录可以在编译(make)前使用 configure 命令后面追加参数 “–prefix=/alternative/path” 来完成修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar xf Python-3.5.0.tgz</span><br><span class="line">$ cd Python-3.5.0</span><br><span class="line">$ ./configure</span><br><span class="line">$ make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure><p>至此你已经在你的<a href="https://www.centos.bz/tag/centos/">CentOS</a>系统中成功安装了python3、pip3、setuptools，查看python版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ python3 -V</span><br></pre></td></tr></table></figure><p>如果你要使用Python3作为python的默认版本，你需要修改一下 bashrc 文件，增加一行<a href="https://www.centos.bz/tag/alias/">alias</a>参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias python=&#x27;/usr/local/bin/python3.5&#x27;</span><br></pre></td></tr></table></figure><p>由于CentOS 7建议不要动/etc/bashrc文件，而是把用户自定义的配置放入/etc/profile.d/目录中，具体方法为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile.d/python.sh</span><br></pre></td></tr></table></figure><p>输入alias参数 alias python=’/usr/local/bin/python3.5’，保存退出</p><p>如果非root用户创建的文件需要注意设置权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/profile.d/python.sh</span><br></pre></td></tr></table></figure><p>重启会话使配置生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile.d/python.sh</span><br></pre></td></tr></table></figure><h2 id="二、从EPEL仓库安装"><a href="#二、从EPEL仓库安装" class="headerlink" title="二、从EPEL仓库安装"></a>二、从EPEL仓库安装</h2><p>最新的EPEL 7仓库提供了Python3（python 3.4）的安装源，如果你使用CentOS7或更新的版本的系统你也可以按照下面的步骤很轻松的从EPEL仓库安装。</p><p>安装最新版本的EPEL</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br></pre></td></tr></table></figure><p>用yum安装python 3.4:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python34</span><br></pre></td></tr></table></figure><p>注意：上面的安装方法并未安装pip和setuptools，如果你要安装这两个库可以使用下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">sudo /usr/bin/python3.4 get-pip.py</span><br></pre></td></tr></table></figure><h2 id="三、从SCL-Software-Collections-仓库安装"><a href="#三、从SCL-Software-Collections-仓库安装" class="headerlink" title="三、从SCL(Software Collections)仓库安装"></a>三、从SCL(Software Collections)仓库安装</h2><p>最后一种方法是通过Software Collections (SCL) repository来安装，需要注意的是SCL仓库仅支持CentOS 6.5以上版本，最新版的SCL提供了Python3.3版本，具体安装步骤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install python33</span><br></pre></td></tr></table></figure><p>从SCL中使用python3，你需要一行命令来启用Python3：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scl enable python33 &lt;command&gt;</span><br></pre></td></tr></table></figure><p>您还可以使用Python编译器来调用一个bash <a href="https://www.centos.bz/category/shell/">shell</a>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scl enable python33 bash</span><br></pre></td></tr></table></figure><p><strong>总结</strong></p><p>笔者建议使用前两种方法，老司机使用方法一编译安装；新手使用方法二yum二进制安装，简单方便。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos防火墙管理firewalld</title>
      <link href="/2024/06/27/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/centos/firewalld/"/>
      <url>/2024/06/27/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/centos/firewalld/</url>
      
        <content type="html"><![CDATA[<h1 id="一、构成"><a href="#一、构成" class="headerlink" title="一、构成"></a>一、构成</h1><h2 id="iptables防火墙策略"><a href="#iptables防火墙策略" class="headerlink" title="iptables防火墙策略"></a>iptables防火墙策略</h2><ul><li><h3 id="由内核层面的netfilter网络过滤器处理"><a href="#由内核层面的netfilter网络过滤器处理" class="headerlink" title="由内核层面的netfilter网络过滤器处理"></a><strong>由内核层面的netfilter网络过滤器处理</strong></h3></li></ul><h2 id="firewalld防火墙策略"><a href="#firewalld防火墙策略" class="headerlink" title="firewalld防火墙策略"></a>firewalld防火墙策略</h2><ul><li><h3 id="交由内核层面的nftables包过滤框架处理"><a href="#交由内核层面的nftables包过滤框架处理" class="headerlink" title="交由内核层面的nftables包过滤框架处理"></a><strong>交由内核层面的nftables包过滤框架处理</strong></h3></li><li><h3 id="支持动态更新技术"><a href="#支持动态更新技术" class="headerlink" title="支持动态更新技术"></a><strong>支持动态更新技术</strong></h3></li><li><h3 id="加入区域的概念"><a href="#加入区域的概念" class="headerlink" title="加入区域的概念"></a><strong>加入区域的概念</strong></h3></li></ul><h3 id="zone区域原理"><a href="#zone区域原理" class="headerlink" title="zone区域原理"></a>zone区域原理</h3><ul><li><strong>drop(丢弃):任何接收的数据包都会被丢弃，没有任何恢复。仅能有发送出的网络连接</strong></li><li><strong>block(限制):任何接收的网络连接都能被IPV4的icmp-host-prohibited信息和IPV6的icmp6-adm-prohidited信息所拒绝</strong></li><li><strong>public(公共):在公共区域使用，不能相信网络内的其他计算机不会对你的计算机造成危险，只能接受经过选区的连接</strong></li><li><strong>external(外部):特别是为路由器启用了伪装功能的外部网。你不能信任来自网络的其他计算，不能相信它们不会对你的计算机造成危害，只能接收经过选择的连接。</strong></li><li><strong>dmz(非军事区):用于你的非军事区内的计算机，此区域内可公开访问，可以有限地进入你的内部网络，仅仅接收经过选择的连接</strong></li><li><strong>work(工作):用于工作区。你可以基本相信网络内的其他计算机不会危害你的计算机。仅仅接收经过选择的连接</strong></li><li><strong>home(家庭):用于家庭网络。你可以基本信任网络内的其他计算机不会危害你的计算机。仅接收经过选择的连接</strong></li><li><strong>internal(内部):于内部网络。你可以基本上信任网络内的其他计算机不会威胁你的计算机。仅仅接受经过选择的连接。</strong></li><li><strong>trusted(信任):可接受所有的网络连接</strong>。</li></ul><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="一、启动"><a href="#一、启动" class="headerlink" title="一、启动"></a>一、启动</h3><h4 id="1-启动"><a href="#1-启动" class="headerlink" title="1.启动"></a>1.启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br></pre></td></tr></table></figure><h4 id="2-关闭"><a href="#2-关闭" class="headerlink" title="2.关闭"></a>2.关闭</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><h4 id="3-查看状态"><a href="#3-查看状态" class="headerlink" title="3.查看状态"></a>3.查看状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><h4 id="4-开机禁用"><a href="#4-开机禁用" class="headerlink" title="4.开机禁用"></a>4.开机禁用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><h4 id="5-开机启用"><a href="#5-开机启用" class="headerlink" title="5.开机启用"></a>5.开机启用</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable firewalld</span><br></pre></td></tr></table></figure><h3 id="二、管理防火墙规则"><a href="#二、管理防火墙规则" class="headerlink" title="二、管理防火墙规则"></a>二、管理防火墙规则</h3><h4 id="1-查看版本"><a href="#1-查看版本" class="headerlink" title="1.查看版本"></a>1.查看版本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewalld-cmd --version</span><br></pre></td></tr></table></figure><h4 id="2-查看帮助"><a href="#2-查看帮助" class="headerlink" title="2.查看帮助"></a>2.查看帮助</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewalld-cmd --help</span><br></pre></td></tr></table></figure><h4 id="3-显示状态"><a href="#3-显示状态" class="headerlink" title="3.显示状态"></a>3.显示状态</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewalld-cmd --state</span><br></pre></td></tr></table></figure><h4 id="4-查看所有开发的端口"><a href="#4-查看所有开发的端口" class="headerlink" title="4.查看所有开发的端口"></a>4.查看所有开发的端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewalld-cmd --zone=public--list-ports</span><br></pre></td></tr></table></figure><h4 id="5-更新防火墙规则"><a href="#5-更新防火墙规则" class="headerlink" title="5.更新防火墙规则"></a>5.更新防火墙规则</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewalld-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="三、端口管理"><a href="#三、端口管理" class="headerlink" title="三、端口管理"></a>三、端口管理</h3><ul><li><p><strong>添加80端口，协议为 TCP</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall - cmd -- zone = public -- add - port =80/tcp</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>查询80端</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall - cmd -- zone = public -- query - port =80/tcp</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><strong>删除80端口</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- firewall - cmd -- zone = public -- remove - port =80/tcp</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos磁盘挂载命令</title>
      <link href="/2024/06/27/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/centos/%E7%A3%81%E7%9B%98%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/06/27/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/centos/%E7%A3%81%E7%9B%98%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>前几天在玩docker，需要大磁盘存储数据，所以顺带学习centos磁盘相关的命令</p><h1 id="一、磁盘查看"><a href="#一、磁盘查看" class="headerlink" title="一、磁盘查看"></a>一、磁盘查看</h1><p><strong>isblk</strong>:查看磁盘大小和挂载情况</p><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><div class="table-container"><table><thead><tr><th>-a</th><th>显示所有设备信息</th><th>-m</th><th>显示权限信息</th></tr></thead><tbody><tr><td>-b</td><td>显示以字节为单位的设备大小</td><td>-n</td><td>不显示标题</td></tr><tr><td>-e</td><td>排除指定设备</td><td>-o</td><td>输出列信息</td></tr><tr><td>-f</td><td>显示文件系统信息</td><td>-p</td><td>使用key=value格式显示信息</td></tr><tr><td>-h</td><td>显示帮助信息</td><td>-r</td><td>使用原始格式显示信息</td></tr><tr><td>-i</td><td>仅使用字符</td><td>-t</td><td>显示拓扑结构信息</td></tr><tr><td>-l</td><td>使用列表格式显示</td><td>-V</td><td>显示版本信息</td></tr></tbody></table></div><h1 id="二、磁盘分区"><a href="#二、磁盘分区" class="headerlink" title="二、磁盘分区"></a>二、磁盘分区</h1><p>所有磁盘信息都在/dev/目录下</p><p>使用fdisk /dev/磁盘名称进行分区，如fdisk /dev/sdb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">a   toggle a bootable flag                                   <span class="comment"># 切换可启动标志</span></span><br><span class="line">b   edit bsd disklabel　　　　　　　　　　　　　　　　　　         <span class="comment"># 编辑磁盘标记</span></span><br><span class="line">c   toggle the dos compatibility flag　　　　　　　　　　　　　　 <span class="comment"># 切换dos兼容标志</span></span><br><span class="line">d   delete a partition　　　　　　　　　　　　　　　　　　　　　　　 <span class="comment"># 删除一个分区</span></span><br><span class="line">g   create a new empty GPT partition table             　　   <span class="comment"># 创建一个空的GPT分区表</span></span><br><span class="line">G   create an IRIX (SGI) partition table            　　      <span class="comment"># 创建一个IRIX分区表</span></span><br><span class="line">l   list known partition types　　　　　　　　　　　　　　　　　　　<span class="comment"># 列出已知的分区类型</span></span><br><span class="line">m   <span class="built_in">print</span> this menu　　　　　　　　　　　　　　　　　　　　　　　　　　<span class="comment"># 打印菜单　　　　　　　　　　　　　　　　　　　</span></span><br><span class="line">n   add a new partition                                       <span class="comment"># 添加一个分区</span></span><br><span class="line">o   create a new empty DOS partition table                    <span class="comment"># 创建一个空的DOS分区表</span></span><br><span class="line">p   <span class="built_in">print</span> the partition table                                 <span class="comment"># 打印分区表</span></span><br><span class="line">q   quit without saving changes                               <span class="comment"># 退出不保存</span></span><br><span class="line">s   create a new empty Sun disklabel                          <span class="comment"># 创建一个空的sun磁盘标签</span></span><br><span class="line">t   change a partition<span class="string">&#x27;s system id                            # 改变一个分区的类型</span></span><br><span class="line"><span class="string">u   change display/entry units                                # 改变显示的单位</span></span><br><span class="line"><span class="string">v   verify the partition table                                # 验证分区表</span></span><br><span class="line"><span class="string">w   write table to disk and exit                              # 写分区表并退出</span></span><br><span class="line"><span class="string">x   extra functionality (experts only)                        # 高级功能</span></span><br></pre></td></tr></table></figure><p>正常情况下添加新磁盘的命令：</p><ul><li><p>输入n添加新分区</p></li><li><p>输入p新建主分区</p></li><li><p>指定分区编号，输入1即可</p></li><li><p>指定起始扇区，默认即可，不推荐更改</p></li><li><p>指定结束扇区，代表分区大小，可以使用K，M，G指定分区大小，例如分配50G则输入50G即可</p></li></ul><p><img src="https://i-blog.csdnimg.cn/blog_migrate/960744ced83e361f9ff7198a536244e0.png" alt="img"></p><p>执行上述操作之后，需要输入 w 确定分区，不然不会生效</p><p><img src="http://alist.chenjichao.site/d/%E4%B8%80%E5%88%BB%E7%9B%B8%E5%86%8C/5e82bfcb0a8c8620617b618dd6fad652.png" alt="img"></p><h1 id="三、格式化分区"><a href="#三、格式化分区" class="headerlink" title="三、格式化分区"></a>三、格式化分区</h1><p><strong>mkfs </strong>   分区系统格式磁盘分区</p><p>磁盘分区完毕后自然就是要进行文件系统的格式化<br>格式化其实就是创建文件系统。命令就是\=\=\=&gt;mkfs（make fileststem），这个命令只是个综合命令。它会调用正确的文件系统格式化工具<br>功能：mkfs是个综合命令<br>使用:<br>mkfs [tab] [tab]：按下两下tab键查看系统支持哪些文件系统的格式化功能。<br>mkfs -t [文件系统格式名]===&gt;等同于mkfs.文件系统格式名。<br>如：mkfs -t xfs 与 mkfs.xfs相同。</p><h1 id="四、挂载分区"><a href="#四、挂载分区" class="headerlink" title="四、挂载分区"></a>四、挂载分区</h1><h2 id="mount暂时挂载"><a href="#mount暂时挂载" class="headerlink" title="mount暂时挂载"></a>mount暂时挂载</h2><p>1.此种方式挂载只是暂时挂载，系统重启之后需要重新挂载才行<br>2.现在把sdb1挂载到之前创建的/root/RepositoryDisk目录下<br>3.挂载分区使用 mount 命令：mount 分区 挂载目录，挂载之后可以通过lsblk -f查看是否挂载成功</p><h2 id=""><a href="#" class="headerlink" title=" "></a> </h2>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> centos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>proc目录概述</title>
      <link href="/2024/06/22/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/proc/"/>
      <url>/2024/06/22/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/proc/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-proc目录"><a href="#Linux-proc目录" class="headerlink" title="Linux/proc目录"></a>Linux/proc目录</h1><p>[toc]</p><p>linux上的/proc目录是一种文件系统，即proc文件系统，与其他文件系统不同的是，/proc是一种伪文件系统，也叫虚拟文件系统，存储的是当前内核运行的一系列特殊文件</p><p>基于/proc文件系统如上所述的特殊性，其内的文件也常被称作虚拟文件，并具有一些独特的特点。例如，其中有些文件虽然使用查看命令查看时会返回大量信息，但文件本身的大小却会显示为0字节。此外，这些特殊文件中大多数文件的时间及日期属性通常为当前系统时间和日期，这跟它们随时会被刷新（存储于RAM中）有关。 </p><p>为了查看及使用上的方便，这些文件通常会按照相关性进行分类存储于不同的目录甚至子目录中，如/proc/scsi目录中存储的就是当前系统上所有SCSI设备的相关信息，/proc/N中存储的则是系统当前正在运行的进程的相关信息，其中N为正在运行的进程（可以想象得到，在某进程结束后其相关目录则会消失）。 </p><p>大量虚拟文件可以通过cat、more或者less，有些文件信息表述的内容可以一目了然，但也有文件的信息却不怎么具有可读性。不过，这些可读性较差的文件在使用一些命令如apm、free、lspci或top查看时却可以有着不错的表现。</p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 系统文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux系统状态的查看</title>
      <link href="/2024/06/22/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D/linuxbasic-2/"/>
      <url>/2024/06/22/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D/linuxbasic-2/</url>
      
        <content type="html"><![CDATA[<h1 id="linux命令—系统状态的查看"><a href="#linux命令—系统状态的查看" class="headerlink" title="linux命令—系统状态的查看"></a>linux命令—系统状态的查看</h1><p>[toc]</p><h1 id="w命令"><a href="#w命令" class="headerlink" title="w命令"></a>w命令</h1><p>w命令是一个linux中用来显示当前登录用户及这些用户正在做什么的命令。也能显示系统运行时长及系统平均负载情况</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w[OPTIONS][USER]</span><br></pre></td></tr></table></figure><h1 id="vmstat命令"><a href="#vmstat命令" class="headerlink" title="vmstat命令"></a>vmstat命令</h1><p>vmstat命令是最常见的监控工具，可以展示给定时间间隔和服务器的状态值，包括服务器的cpu使用率、内存使用、虚拟内存交换情况、IO(磁盘)读写情况</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/fd50b0bb5810c0fd20fb53aeb5161d5.jpg" alt="fd50b0bb5810c0fd20fb53aeb5161d5"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vmstat [seconds_time] [times]</span><br></pre></td></tr></table></figure><p>表示seconds_time秒下进行times次对系统的状态输出</p><h2 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h2><p>动态展示系统中各进程资源占用状态，类似于windows的任务管理器。</p><p>特点：把占用系统高的放在最前面</p><h2 id="sar命令"><a href="#sar命令" class="headerlink" title="sar命令"></a>sar命令</h2><p>是目前linux上最为全面的系统性能分析工具之一，可以从多方面分析</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sar --help</span><br><span class="line">Usage: sar [ options ] [ &lt;interval&gt; [ &lt;count&gt; ] ]</span><br><span class="line">Options are:</span><br><span class="line">[ -A ] [ -b ] [ -B ] [ -C ] [ -d ] [ -h ] [ -m ] [ -p ] [ -q ] [ -r ] [ -R ]</span><br><span class="line">[ -S ] [ -t ] [ -u [ ALL ] ] [ -v ] [ -V ] [ -w ] [ -W ] [ -y ]</span><br><span class="line">[ -I &#123; &lt;int&gt; [,...] | SUM | ALL | XALL &#125; ] [ -P &#123; &lt;cpu&gt; [,...] | ALL &#125; ]</span><br><span class="line">[ -j &#123; ID | LABEL | PATH | UUID | ... &#125; ] [ -n &#123; &lt;keyword&gt; [,...] | ALL &#125; ]</span><br><span class="line">[ -o [ &lt;filename&gt; ] | -f [ &lt;filename&gt; ] ] [ --legacy ]</span><br><span class="line">[ -i &lt;interval&gt; ] [ -s [ &lt;hh:mm:ss&gt; ] ] [ -e [ &lt;hh:mm:ss&gt; ] ]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-A：所有报告的总和</span><br><span class="line">-u：输出CPU使用情况的统计信息</span><br><span class="line">-v：输出inode、文件和其他内核表的统计信息</span><br><span class="line">-d：输出每一个块设备的活动信息</span><br><span class="line">-r：输出内存和交换空间的统计信息</span><br><span class="line">-b：显示I/O和传送速率的统计信息-R：输出内存页面的统计信息</span><br><span class="line">-y：终端设备活动情况</span><br><span class="line">-w：输出系统交换活动信息</span><br><span class="line">-B：显示换页状态；</span><br><span class="line">-e：设置显示报告的结束时间</span><br><span class="line">-f：从指定文件提取报告</span><br><span class="line">-i：设状态信息刷新的间隔时间</span><br><span class="line">-p：报告每个CPU的状态</span><br><span class="line">-q：平均负载分析</span><br></pre></td></tr></table></figure><h3 id="二、统计CPU使用情况"><a href="#二、统计CPU使用情况" class="headerlink" title="二、统计CPU使用情况"></a>二、统计CPU使用情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sar -u  #统计CPU的使用情况，每间隔1秒钟统计一次总共统计三次：#sar -u 1 3</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sar -u 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">09:42:45 PM     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">09:42:46 PM     all      0.00      0.00      0.00      0.00      0.00    100.00</span><br><span class="line">09:42:47 PM     all      0.03      0.00      0.03      0.00      0.00     99.94</span><br><span class="line">09:42:48 PM     all      0.03      0.00      0.03      0.00      0.00     99.94</span><br><span class="line">Average:        all      0.02      0.00      0.02      0.00      0.00     99.96</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sar -o test.txt -u 1 3#其中-o表示以二进制的格式把结果存入到test.txt文件中，不能使用cat，more，less等查看</span><br><span class="line">sar -u -f test.txt   #查看该二进制结果文件</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">09:46:14 PM     CPU     %user     %nice   %system   %iowait    %steal     %idle</span><br><span class="line">09:46:15 PM     all      0.00      0.00      0.00      0.00      0.00    100.00</span><br><span class="line">09:46:16 PM     all      0.03      0.00      0.03      0.00      0.00     99.94</span><br><span class="line">09:46:17 PM     all      0.00      0.00      0.03      0.00      0.00     99.97</span><br><span class="line">Average:        all      0.01      0.00      0.02      0.00      0.00     99.97</span><br></pre></td></tr></table></figure><h3 id="三、平均负载统计分析"><a href="#三、平均负载统计分析" class="headerlink" title="三、平均负载统计分析"></a>三、平均负载统计分析</h3><p>sar -q #查看平均负载：其中每间隔1秒钟统计一次总共统计三次 #sar -q 1 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sar -q 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">09:58:39 PM   runq-sz  plist-sz   ldavg-1   ldavg-5  ldavg-15</span><br><span class="line">09:58:40 PM         0      1535      0.00      0.03      0.00</span><br><span class="line">09:58:41 PM         0      1535      0.00      0.03      0.00</span><br><span class="line">09:58:42 PM         0      1535      0.00      0.03      0.00</span><br><span class="line">Average:            0      1535      0.00      0.03      0.00</span><br></pre></td></tr></table></figure><p>runq-sz 运行队列的长度（等待运行的进程数，每核的CP不能超过3个）<br>plist-sz 进程列表中的进程（processes）和线程数（threads）的数量<br>ldavg-1 最后1分钟的CPU平均负载，即将多核CPU过去一分钟的负载相加再除以核心数得出的平均值，5分钟和15分钟以此类推<br>ldavg-5 最后5分钟的CPU平均负载<br>ldavg-15 最后15分钟的CPU平均负载</p><h3 id="四、内存统计分析"><a href="#四、内存统计分析" class="headerlink" title="四、内存统计分析"></a>四、内存统计分析</h3><p>sar -r #查看内存使用情况，每间隔1秒钟统计一次总共统计三次：#sar -W 1 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sar -r 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">10:01:15 PM kbmemfree kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit</span><br><span class="line">10:01:16 PM 233550984  30597240     11.58    758212  20745900  14822388      5.44</span><br><span class="line">10:01:17 PM 233550836  30597388     11.58    758212  20745900  14822388      5.44</span><br><span class="line">10:01:18 PM 233551972  30596252     11.58    758212  20745900  14822388      5.44</span><br><span class="line">Average:    233551264  30596960     11.58    758212  20745900  14822388      5.44</span><br></pre></td></tr></table></figure><p>kbmemfree 空闲的物理内存大小<br>kbmemused 使用中的物理内存大小<br>%memused 物理内存使用率<br>kbbuffers 内核中作为缓冲区使用的物理内存大小，kbbuffers和kbcached:这两个值就是free命令中的buffer和cache.<br>kbcached 缓存的文件大小<br>kbcommit 保证当前系统正常运行所需要的最小内存，即为了确保内存不溢出而需要的最少内存（物理内存+Swap分区）<br>commit 这个值是kbcommit与内存总量（物理内存+swap分区）的一个百分比的值</p><h3 id="五、统计swap分区"><a href="#五、统计swap分区" class="headerlink" title="五、统计swap分区"></a>五、统计swap分区</h3><p>sar -W #查看系统swap分区的统计信息：每间隔1秒钟统计一次总共统计三次：#sar -W 1 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># sar -W 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">10:03:21 PM  pswpin/s pswpout/s</span><br><span class="line">10:03:22 PM      0.00      0.00</span><br><span class="line">10:03:23 PM      0.00      0.00</span><br><span class="line">10:03:24 PM      0.00      0.00</span><br><span class="line">Average:         0.00      0.00</span><br></pre></td></tr></table></figure><h3 id="六、查看磁盘IO"><a href="#六、查看磁盘IO" class="headerlink" title="六、查看磁盘IO"></a>六、查看磁盘IO</h3><p>sar -b #查看I/O和传递速率的统计信息，每间隔1秒钟统计一次总共统计三次：#sar -b 1 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sar -b 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">10:06:16 PM       tps      rtps      wtps   bread/s   bwrtn/s</span><br><span class="line">10:06:17 PM     30.00      0.00     30.00      0.00    240.00</span><br><span class="line">10:06:18 PM      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:06:19 PM      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">Average:        10.00      0.00     10.00      0.00     80.00</span><br></pre></td></tr></table></figure><p>tps 磁盘每秒钟的IO总数，等于iostat中的tps<br>rtps 每秒钟从磁盘读取的IO总数<br>wtps 每秒钟从写入到磁盘的IO总数<br>bread/s 每秒钟从磁盘读取的块总数<br>bwrtn/s 每秒钟此写入到磁盘的块总数</p><h3 id="七、查看磁盘使用情况"><a href="#七、查看磁盘使用情况" class="headerlink" title="七、查看磁盘使用情况"></a>七、查看磁盘使用情况</h3><p>sar -d #磁盘使用详情统计，每间隔1秒钟统计一次总共统计三次：#sar -d 1 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sar -d 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">10:08:16 PM       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class="line">10:08:17 PM    dev8-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:08:17 PM  dev253-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:08:17 PM  dev253-1      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">10:08:17 PM       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class="line">10:08:18 PM    dev8-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:08:18 PM  dev253-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:08:18 PM  dev253-1      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">10:08:18 PM       DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class="line">10:08:19 PM    dev8-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:08:19 PM  dev253-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:08:19 PM  dev253-1      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">Average:          DEV       tps  rd_sec/s  wr_sec/s  avgrq-sz  avgqu-sz     await     svctm     %util</span><br><span class="line">Average:       dev8-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">Average:     dev253-0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">Average:     dev253-1      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br></pre></td></tr></table></figure><p>DEV 磁盘设备的名称，如果不加-p，会显示dev253-0类似的设备名称，因此加上-p显示的名称更直接<br>tps：每秒I/O的传输总数<br>rd_sec/s 每秒读取的扇区的总数<br>wr_sec/s 每秒写入的扇区的总数<br>avgrq-sz 平均每次次磁盘I/O操作的数据大小（扇区）<br>avgqu-sz 磁盘请求队列的平均长度<br>await 从请求磁盘操作到系统完成处理，每次请求的平均消耗时间，包括请求队列等待时间，单位是毫秒（1秒等于1000毫秒），等于寻道时间+队列时间+服务时间<br>svctm I/O的服务处理时间，即不包括请求队列中的时间<br>%util I/O请求占用的CPU百分比，值越高，说明I/O越慢</p><h3 id="八、网络使用分析"><a href="#八、网络使用分析" class="headerlink" title="八、网络使用分析"></a>八、网络使用分析</h3><p>sar -n #统计网络信息<br>sar -n选项使用6个不同的开关：DEV，EDEV，NFS，NFSD，SOCK，IP，EIP，ICMP，EICMP，TCP，ETCP，UDP，SOCK6，IP6，EIP6，ICMP6，EICMP6和UDP6 ，DEV显示网络接口信息，EDEV显示关于网络错误的统计数据，NFS统计活动的NFS客户端的信息，NFSD统计NFS服务器的信息，SOCK显示套接字信息，ALL显示所有5个开关。它们可以单独或者一起使用。<br>1.10.1：sar -n DEV 1 1： 每间隔1秒统计一次，总计统计1次，下面的average是在多次统计后的平均值<br>#IFACE 本地网卡接口的名称<br>#rxpck/s 每秒钟接受的数据包<br>#txpck/s 每秒钟发送的数据库<br>#rxKB/S 每秒钟接受的数据包大小，单位为KB<br>#txKB/S 每秒钟发送的数据包大小，单位为KB<br>#rxcmp/s 每秒钟接受的压缩数据包<br>#txcmp/s 每秒钟发送的压缩包<br>#rxmcst/s 每秒钟接收的多播数据包</p><p>sar -n EDEV 1 1 #统计网络设备通信失败信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sar -n DEV 1 1</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">10:13:52 PM     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class="line">10:13:53 PM        lo     16.00     16.00      1.86      1.86      0.00      0.00      0.00</span><br><span class="line">10:13:53 PM      eth0    132.00     25.00     14.28      2.34      0.00      0.00      0.00</span><br><span class="line">10:13:53 PM      eth1      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:13:53 PM      eth2      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">10:13:53 PM      eth3      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line"></span><br><span class="line">Average:        IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s</span><br><span class="line">Average:           lo     16.00     16.00      1.86      1.86      0.00      0.00      0.00</span><br><span class="line">Average:         eth0    132.00     25.00     14.28      2.34      0.00      0.00      0.00</span><br><span class="line">Average:         eth1      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">Average:         eth2      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br><span class="line">Average:         eth3      0.00      0.00      0.00      0.00      0.00      0.00      0.00</span><br></pre></td></tr></table></figure><p>IFACE 网卡名称<br>rxerr/s 每秒钟接收到的损坏的数据包<br>txerr/s 每秒钟发送的数据包错误数<br>coll/s 当发送数据包时候，每秒钟发生的冲撞（collisions）数，这个是在半双工模式下才有<br>rxdrop/s 当由于缓冲区满的时候，网卡设备接收端每秒钟丢掉的网络包的数目<br>txdrop/s 当由于缓冲区满的时候，网络设备发送端每秒钟丢掉的网络包的数目<br>txcarr/s 当发送数据包的时候，每秒钟载波错误发生的次数<br>rxfram 在接收数据包的时候，每秒钟发生的帧对其错误的次数<br>rxfifo 在接收数据包的时候，每秒钟缓冲区溢出的错误发生的次数<br>txfifo 在发生数据包 的时候，每秒钟缓冲区溢出的错误发生的次数<br>1.10.3：sar -n SOCK 1 1 #统计socket连接信息</p><p>sar -n SOCK 1 1 #统计socket连接信息<br>totsck 当前被使用的socket总数<br>tcpsck 当前正在被使用的TCP的socket总数<br>udpsck 当前正在被使用的UDP的socket总数<br>rawsck 当前正在被使用于RAW的skcket总数<br>if-frag 当前的IP分片的数目<br>tcp-tw TCP套接字中处于TIME-WAIT状态的连接数量</p><h6 id="如果你使用FULL关键字，相当于上述DEV、EDEV和SOCK三者的综合"><a href="#如果你使用FULL关键字，相当于上述DEV、EDEV和SOCK三者的综合" class="headerlink" title="如果你使用FULL关键字，相当于上述DEV、EDEV和SOCK三者的综合"></a>如果你使用FULL关键字，相当于上述DEV、EDEV和SOCK三者的综合</h6><p>sar -n TCP 1 3 #TCP连接的统计<br>active/s 新的主动连接<br>passive/s 新的被动连接<br>iseg/s 接受的段<br>oseg/s 输出的段</p><p>sar -n 使用总结</p><p>-n DEV ： 网络接口统计信息。<br>-n EDEV ： 网络接口错误。<br>-n IP ： IP数据报统计信息。<br>-n EIP ： IP错误统计信息。<br>-n TCP ： TCP统计信息。<br>-n ETCP ： TCP错误统计信息。<br>-n SOCK ： 套接字使用。</p><h3 id="九、进程，文件状态"><a href="#九、进程，文件状态" class="headerlink" title="九、进程，文件状态"></a>九、进程，文件状态</h3><p>sar -v #进程、inode、文件和锁表状态 ，每间隔1秒钟统计一次总共统计三次：#sar -v 1 3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sar -v 1 3</span><br><span class="line">Linux 2.6.32-696.el6.x86_64 (lgh)   10/06/2019      _x86_64_        (32 CPU)</span><br><span class="line"></span><br><span class="line">10:17:06 PM dentunusd   file-nr  inode-nr    pty-nr</span><br><span class="line">10:17:07 PM   2165205      5440    371435         1</span><br><span class="line">10:17:08 PM   2165205      5440    371434         1</span><br><span class="line">10:17:09 PM   2165205      5440    371434         1</span><br><span class="line">Average:      2165205      5440    371434         1</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dentunusd 在缓冲目录条目中没有使用的条目数量<br>file-nr 被系统使用的文件句柄数量<br>inode-nr 已经使用的索引数量<br>pty-nr 使用的pty数量</p><h1 id="nload命令"><a href="#nload命令" class="headerlink" title="nload命令"></a>nload命令</h1><p>centos安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br><span class="line">yum install -y nload</span><br></pre></td></tr></table></figure><p>ubuntu安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install -y nload</span><br></pre></td></tr></table></figure><p>用于查看linux网络流量状况，实时输出</p><h1 id="free命令"><a href="#free命令" class="headerlink" title="free命令"></a>free命令</h1><p>显示内存使用情况，包括实体内存、虚拟的交换文件内存、共享内存区段，以及系统核心使用的缓冲区等</p><p>参数：</p><ul><li><p>-b 　以Byte为单位显示内存使用情况。</p></li><li><p>-k 　以KB为单位显示内存使用情况。</p></li><li><p>-m 　以MB为单位显示内存使用情况。</p></li><li><p>-h 　以合适的单位显示内存使用情况，最大为三位数，自动计算对应的单位值。单位有：</p><ul><li><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B = bytes</span><br><span class="line">K = kilos</span><br><span class="line">M = megas</span><br><span class="line">G = gigas</span><br><span class="line">T = teras</span><br></pre></td></tr></table></figure></li></ul></li><li><p>-o 　不显示缓冲区调节列。</p></li><li><p>-s&lt;间隔秒数&gt; 　持续观察内存使用状况</p></li><li><p>-t 　显示内存总和列。</p></li><li><p>实例</p><p>显示内存使用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># free //显示内存使用信息</span><br><span class="line">total used free shared buffers cached</span><br><span class="line">Mem: 254772 184568 70204 0 5692 89892</span><br><span class="line">-/+ buffers/cache: 88984 165788</span><br><span class="line">Swap: 524280 65116 459164</span><br></pre></td></tr></table></figure><p>以总和的形式显示内存的使用信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># free -t //以总和的形式查询内存的使用信息</span><br><span class="line">total used free shared buffers cached</span><br><span class="line">Mem: 254772 184868 69904 0 5936 89908</span><br><span class="line">-/+ buffers/cache: 89024 165748</span><br><span class="line">Swap: 524280 65116 459164</span><br><span class="line">Total: 779052 249984 529068</span><br></pre></td></tr></table></figure><p>周期性的查询内存使用信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># free -s 10 //每10s 执行一次命令</span><br><span class="line">total used free shared buffers cached</span><br><span class="line">Mem: 254772 187628 67144 0 6140 89964</span><br><span class="line">-/+ buffers/cache: 91524 163248</span><br><span class="line">Swap: 524280 65116 459164</span><br><span class="line"></span><br><span class="line">total used free shared buffers cached</span><br><span class="line">Mem: 254772 187748 67024 0 6164 89940</span><br><span class="line">-/+ buffers/cache: 91644 163128</span><br><span class="line">Swap: 524280 65116 459164</span><br></pre></td></tr></table></figure></li></ul><h1 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h1><p>显示系统进程</p><ul><li>-A 列出所有的进程</li><li>-w 显示加宽可以显示较多的资讯</li><li>-au 显示较详细的资讯</li><li>-aux 显示所有包含其他使用者的进程</li><li>au(x) 输出格式 ：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND</span><br></pre></td></tr></table></figure><ul><li>USER: 行程拥有者</li><li>PID: pid</li><li>%CPU: 占用的 CPU 使用率</li><li>%MEM: 占用的记忆体使用率</li><li>VSZ: 占用的虚拟记忆体大小</li><li>RSS: 占用的记忆体大小</li><li>TTY: 终端的次要装置号码 (minor device number of tty)</li><li>STAT: 该行程的状态:<ul><li>D: 无法中断的休眠状态 (通常 IO 的进程)</li><li>R: 正在执行中</li><li>S: 静止状态</li><li>T: 暂停执行</li><li>Z: 不存在但暂时无法消除</li><li>W: 没有足够的记忆体分页可分配</li><li>&lt;: 高优先序的行程</li><li>N: 低优先序的行程</li><li>L: 有记忆体分页分配并锁在记忆体内 (实时系统或捱A I/O)</li></ul></li><li>START: 行程开始时间</li><li>TIME: 执行的时间</li><li>COMMAND:所执行的指令</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查找指定进程格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep 进程关键字</span><br></pre></td></tr></table></figure><p>例如显示 php 的进程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># ps -ef | grep php</span><br><span class="line">root       794     1  0  2020 ?        00:00:52 php-fpm: master process (/etc/php/7.3/fpm/php-fpm.conf)</span><br><span class="line">www-data   951   794  0  2020 ?        00:24:15 php-fpm: pool www</span><br><span class="line">www-data   953   794  0  2020 ?        00:24:14 php-fpm: pool www</span><br><span class="line">www-data   954   794  0  2020 ?        00:24:29 php-fpm: pool www</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>显示进程信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"># ps -A </span><br><span class="line">PID TTY     TIME CMD</span><br><span class="line">  1 ?    00:00:02 init</span><br><span class="line">  2 ?    00:00:00 kthreadd</span><br><span class="line">  3 ?    00:00:00 migration/0</span><br><span class="line">  4 ?    00:00:00 ksoftirqd/0</span><br><span class="line">  5 ?    00:00:00 watchdog/0</span><br><span class="line">  6 ?    00:00:00 events/0</span><br><span class="line">  7 ?    00:00:00 cpuset</span><br><span class="line">  8 ?    00:00:00 khelper</span><br><span class="line">  9 ?    00:00:00 netns</span><br><span class="line">  10 ?    00:00:00 async/mgr</span><br><span class="line">  11 ?    00:00:00 pm</span><br><span class="line">  12 ?    00:00:00 sync_supers</span><br><span class="line">  13 ?    00:00:00 bdi-default</span><br><span class="line">  14 ?    00:00:00 kintegrityd/0</span><br><span class="line">  15 ?    00:00:02 kblockd/0</span><br><span class="line">  16 ?    00:00:00 kacpid</span><br><span class="line">  17 ?    00:00:00 kacpi_notify</span><br><span class="line">  18 ?    00:00:00 kacpi_hotplug</span><br><span class="line">  19 ?    00:00:27 ata/0</span><br><span class="line">……省略部分结果</span><br><span class="line">30749 pts/0  00:00:15 gedit</span><br><span class="line">30886 ?    00:01:10 qtcreator.bin</span><br><span class="line">30894 ?    00:00:00 qtcreator.bin </span><br><span class="line">31160 ?    00:00:00 dhclient</span><br><span class="line">31211 ?    00:00:00 aptd</span><br><span class="line">31302 ?    00:00:00 sshd</span><br><span class="line">31374 pts/2  00:00:00 bash</span><br><span class="line">31396 pts/2  00:00:00 ps</span><br></pre></td></tr></table></figure><p>显示指定用户信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># ps -u root //显示root进程用户信息</span><br><span class="line"> PID TTY     TIME CMD</span><br><span class="line">  1 ?    00:00:02 init</span><br><span class="line">  2 ?    00:00:00 kthreadd</span><br><span class="line">  3 ?    00:00:00 migration/0</span><br><span class="line">  4 ?    00:00:00 ksoftirqd/0</span><br><span class="line">  5 ?    00:00:00 watchdog/0</span><br><span class="line">  6 ?    00:00:00 events/0</span><br><span class="line">  7 ?    00:00:00 cpuset</span><br><span class="line">  8 ?    00:00:00 khelper</span><br><span class="line">  9 ?    00:00:00 netns</span><br><span class="line">  10 ?    00:00:00 async/mgr</span><br><span class="line">  11 ?    00:00:00 pm</span><br><span class="line">  12 ?    00:00:00 sync_supers</span><br><span class="line">  13 ?    00:00:00 bdi-default</span><br><span class="line">  14 ?    00:00:00 kintegrityd/0</span><br><span class="line">  15 ?    00:00:02 kblockd/0</span><br><span class="line">  16 ?    00:00:00 kacpid</span><br><span class="line">……省略部分结果</span><br><span class="line">30487 ?    00:00:06 gnome-terminal</span><br><span class="line">30488 ?    00:00:00 gnome-pty-helpe</span><br><span class="line">30489 pts/0  00:00:00 bash</span><br><span class="line">30670 ?    00:00:00 debconf-communi </span><br><span class="line">30749 pts/0  00:00:15 gedit</span><br><span class="line">30886 ?    00:01:10 qtcreator.bin</span><br><span class="line">30894 ?    00:00:00 qtcreator.bin </span><br><span class="line">31160 ?    00:00:00 dhclient</span><br><span class="line">31211 ?    00:00:00 aptd</span><br><span class="line">31302 ?    00:00:00 sshd</span><br><span class="line">31374 pts/2  00:00:00 bash</span><br><span class="line">31397 pts/2  00:00:00 ps</span><br></pre></td></tr></table></figure><p>显示所有进程信息，连同命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># ps -ef //显示所有命令，连带命令行</span><br><span class="line">UID    PID PPID C STIME TTY     TIME CMD</span><br><span class="line">root     1   0 0 10:22 ?    00:00:02 /sbin/init</span><br><span class="line">root     2   0 0 10:22 ?    00:00:00 [kthreadd]</span><br><span class="line">root     3   2 0 10:22 ?    00:00:00 [migration/0]</span><br><span class="line">root     4   2 0 10:22 ?    00:00:00 [ksoftirqd/0]</span><br><span class="line">root     5   2 0 10:22 ?    00:00:00 [watchdog/0]</span><br><span class="line">root     6   2 0 10:22 ?    /usr/lib/NetworkManager</span><br><span class="line">……省略部分结果</span><br><span class="line">root   31302 2095 0 17:42 ?    00:00:00 sshd: root@pts/2 </span><br><span class="line">root   31374 31302 0 17:42 pts/2  00:00:00 -bash</span><br><span class="line">root   31400   1 0 17:46 ?    00:00:00 /usr/bin/python /usr/sbin/aptd</span><br><span class="line">root   31407 31374 0 17:48 pts/2  00:00:00 ps -ef</span><br></pre></td></tr></table></figure><h1 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a>netstat命令</h1><p>是一个用来监控TCP/IP网络的非常有用的工具，可以显示路由表、实际的网络连接以及每一个网络接口设备的状态信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat [-acCeFghilMnNoprstuvVwx][-A&lt;网络类型&gt;][--ip]</span><br></pre></td></tr></table></figure><ul><li>-a或—all 显示所有连线中的Socket。</li><li>-A&lt;网络类型&gt;或—&lt;网络类型&gt; 列出该网络类型连线中的相关地址。</li><li>-c或—continuous 持续列出网络状态。</li><li>-C或—cache 显示路由器配置的快取信息。</li><li>-e或—extend 显示网络其他相关信息。</li><li>-F或—fib 显示路由缓存。</li><li>-g或—groups 显示多重广播功能群组组员名单。</li><li>-h或—help 在线帮助。</li><li>-i或—interfaces 显示网络界面信息表单。</li><li>-l或—listening 显示监控中的服务器的Socket。</li><li>-M或—masquerade 显示伪装的网络连线。</li><li>-n或—numeric 直接使用IP地址，而不通过域名服务器。</li><li>-N或—netlink或—symbolic 显示网络硬件外围设备的符号连接名称。</li><li>-o或—timers 显示计时器。</li><li>-p或—programs 显示正在使用Socket的程序识别码和程序名称。</li><li>-r或—route 显示Routing Table。</li><li>-s或—statistics 显示网络工作信息统计表。</li><li>-t或—tcp 显示TCP传输协议的连线状况。</li><li>-u或—udp 显示UDP传输协议的连线状况。</li><li>-v或—verbose 显示指令执行过程。</li><li>-V或—version 显示版本信息。</li><li>-w或—raw 显示RAW传输协议的连线状况。</li><li>-x或—unix 此参数的效果和指定”-A unix”参数相同。</li><li>—ip或—inet 此参数的效果和指定”-A inet”参数相同。</li></ul><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>显示详细的网络状况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># netstat -a</span><br></pre></td></tr></table></figure><p>显示当前户籍UDP连接状况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># netstat -nu</span><br></pre></td></tr></table></figure><p>显示UDP端口号的使用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># netstat -apu</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address        Foreign Address       State    PID/Program name  </span><br><span class="line">udp    0   0 *:32768           *:*                   -          </span><br><span class="line">udp    0   0 *:nfs            *:*                   -          </span><br><span class="line">udp    0   0 *:641            *:*                   3006/rpc.statd   </span><br><span class="line">udp    0   0 192.168.0.3:netbios-ns   *:*                   3537/nmbd      </span><br><span class="line">udp    0   0 *:netbios-ns        *:*                   3537/nmbd      </span><br><span class="line">udp    0   0 192.168.0.3:netbios-dgm   *:*                   3537/nmbd      </span><br><span class="line">udp    0   0 *:netbios-dgm        *:*                   3537/nmbd      </span><br><span class="line">udp    0   0 *:tftp           *:*                   3346/xinetd     </span><br><span class="line">udp    0   0 *:999            *:*                   3366/rpc.rquotad  </span><br><span class="line">udp    0   0 *:sunrpc          *:*                   2986/portmap    </span><br><span class="line">udp    0   0 *:ipp            *:*                   6938/cupsd     </span><br><span class="line">udp    0   0 *:1022           *:*                   3392/rpc.mountd   </span><br><span class="line">udp    0   0 *:638            *:*                   3006/rpc.statd</span><br></pre></td></tr></table></figure><p>显示网卡列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># netstat -i</span><br><span class="line">Kernel Interface table</span><br><span class="line">Iface    MTU Met  RX-OK RX-ERR RX-DRP RX-OVR  TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class="line">eth0    1500  0  181864   0   0   0  141278   0   0   0 BMRU</span><br><span class="line">lo    16436  0   3362   0   0   0   3362   0   0   0 LRU</span><br></pre></td></tr></table></figure><p>显示组播组的关系</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># netstat -g</span><br><span class="line">IPv6/IPv4 Group Memberships</span><br><span class="line">Interface    RefCnt Group</span><br><span class="line">--------------- ------ ---------------------</span><br><span class="line">lo       1   ALL-SYSTEMS.MCAST.NET</span><br><span class="line">eth0      1   ALL-SYSTEMS.MCAST.NET</span><br><span class="line">lo       1   ff02::1</span><br><span class="line">eth0      1   ff02::1:ff0a:b0c</span><br><span class="line">eth0      1   ff02::1</span><br></pre></td></tr></table></figure><p>显示网络统计信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"># netstat -s</span><br><span class="line">Ip:</span><br><span class="line">  184695 total packets received</span><br><span class="line">  0 forwarded</span><br><span class="line">  0 incoming packets discarded</span><br><span class="line">  184687 incoming packets delivered</span><br><span class="line">  143917 requests sent out</span><br><span class="line">  32 outgoing packets dropped</span><br><span class="line">  30 dropped because of missing route</span><br><span class="line">Icmp:</span><br><span class="line">  676 ICMP messages received</span><br><span class="line">  5 input ICMP message failed.</span><br><span class="line">  ICMP input histogram:</span><br><span class="line">    destination unreachable: 44</span><br><span class="line">    echo requests: 287</span><br><span class="line">    echo replies: 345</span><br><span class="line">  304 ICMP messages sent</span><br><span class="line">  0 ICMP messages failed</span><br><span class="line">  ICMP output histogram:</span><br><span class="line">    destination unreachable: 17</span><br><span class="line">    echo replies: 287</span><br><span class="line">Tcp:</span><br><span class="line">  473 active connections openings</span><br><span class="line">  28 passive connection openings</span><br><span class="line">  4 failed connection attempts</span><br><span class="line">  11 connection resets received</span><br><span class="line">  1 connections established</span><br><span class="line">  178253 segments received</span><br><span class="line">  137936 segments send out</span><br><span class="line">  29 segments retransmited</span><br><span class="line">  0 bad segments received.</span><br><span class="line">  336 resets sent</span><br><span class="line">Udp:</span><br><span class="line">  5714 packets received</span><br><span class="line">  8 packets to unknown port received.</span><br><span class="line">  0 packet receive errors</span><br><span class="line">  5419 packets sent</span><br><span class="line">TcpExt:</span><br><span class="line">  1 resets received for embryonic SYN_RECV sockets</span><br><span class="line">  ArpFilter: 0</span><br><span class="line">  12 TCP sockets finished time wait in fast timer</span><br><span class="line">  572 delayed acks sent</span><br><span class="line">  3 delayed acks further delayed because of locked socket</span><br><span class="line">  13766 packets directly queued to recvmsg prequeue.</span><br><span class="line">  1101482 packets directly received from backlog</span><br><span class="line">  19599861 packets directly received from prequeue</span><br><span class="line">  46860 packets header predicted</span><br><span class="line">  14541 packets header predicted and directly queued to user</span><br><span class="line">  TCPPureAcks: 12259</span><br><span class="line">  TCPHPAcks: 9119</span><br><span class="line">  TCPRenoRecovery: 0</span><br><span class="line">  TCPSackRecovery: 0</span><br><span class="line">  TCPSACKReneging: 0</span><br><span class="line">  TCPFACKReorder: 0</span><br><span class="line">  TCPSACKReorder: 0</span><br><span class="line">  TCPRenoReorder: 0</span><br><span class="line">  TCPTSReorder: 0</span><br><span class="line">  TCPFullUndo: 0</span><br><span class="line">  TCPPartialUndo: 0</span><br><span class="line">  TCPDSACKUndo: 0</span><br><span class="line">  TCPLossUndo: 0</span><br><span class="line">  TCPLoss: 0</span><br><span class="line">  TCPLostRetransmit: 0</span><br><span class="line">  TCPRenoFailures: 0</span><br><span class="line">  TCPSackFailures: 0</span><br><span class="line">  TCPLossFailures: 0</span><br><span class="line">  TCPFastRetrans: 0</span><br><span class="line">  TCPForwardRetrans: 0</span><br><span class="line">  TCPSlowStartRetrans: 0</span><br><span class="line">  TCPTimeouts: 29</span><br><span class="line">  TCPRenoRecoveryFail: 0</span><br><span class="line">  TCPSackRecoveryFail: 0</span><br><span class="line">  TCPSchedulerFailed: 0</span><br><span class="line">  TCPRcvCollapsed: 0</span><br><span class="line">  TCPDSACKOldSent: 0</span><br><span class="line">  TCPDSACKOfoSent: 0</span><br><span class="line">  TCPDSACKRecv: 0</span><br><span class="line">  TCPDSACKOfoRecv: 0</span><br><span class="line">  TCPAbortOnSyn: 0</span><br><span class="line">  TCPAbortOnData: 1</span><br><span class="line">  TCPAbortOnClose: 0</span><br><span class="line">  TCPAbortOnMemory: 0</span><br><span class="line">  TCPAbortOnTimeout: 3</span><br><span class="line">  TCPAbortOnLinger: 0</span><br><span class="line">  TCPAbortFailed: 3</span><br><span class="line">  TCPMemoryPressures: 0</span><br></pre></td></tr></table></figure><p>显示监听的套接口</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"># netstat -l</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address        Foreign Address       State   </span><br><span class="line">tcp    0   0 *:32769           *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:nfs            *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:644            *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:1002           *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:netbios-ssn        *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:sunrpc          *:*             LISTEN   </span><br><span class="line">tcp    0   0 vm-dev:ipp         *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:telnet          *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:601            *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:microsoft-ds       *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:http           *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:ssh            *:*             LISTEN   </span><br><span class="line">tcp    0   0 *:https           *:*             LISTEN   </span><br><span class="line">udp    0   0 *:32768           *:*                   </span><br><span class="line">udp    0   0 *:nfs            *:*                   </span><br><span class="line">udp    0   0 *:641            *:*                   </span><br><span class="line">udp    0   0 192.168.0.3:netbios-ns   *:*                   </span><br><span class="line">udp    0   0 *:netbios-ns        *:*                   </span><br><span class="line">udp    0   0 192.168.0.3:netbios-dgm   *:*                   </span><br><span class="line">udp    0   0 *:netbios-dgm        *:*                   </span><br><span class="line">udp    0   0 *:tftp           *:*                   </span><br><span class="line">udp    0   0 *:999            *:*                   </span><br><span class="line">udp    0   0 *:sunrpc          *:*                   </span><br><span class="line">udp    0   0 *:ipp            *:*                   </span><br><span class="line">udp    0   0 *:1022           *:*                   </span><br><span class="line">udp    0   0 *:638            *:*                   </span><br><span class="line">Active UNIX domain sockets (only servers)</span><br><span class="line">Proto RefCnt Flags    Type    State     I-Node Path</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10621 @/tmp/fam-root-</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   7096  /var/run/acpid.socket</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   9792  /tmp/.gdm_socket</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   9927  /tmp/.X11-unix/X0</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10489 /tmp/ssh-lbUnUf4552/agent.4552</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10558 /tmp/ksocket-root/kdeinit__0</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10560 /tmp/ksocket-root/kdeinit-:0</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10570 /tmp/.ICE-unix/dcop4664-1270815442</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10843 /tmp/.ICE-unix/4735</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10591 /tmp/ksocket-root/klauncherah3arc.slave-socket</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   7763  /var/run/iiim/.iiimp-unix/9010</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   11047 /tmp/orbit-root/linc-1291-0-1e92c8082411</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   11053 /tmp/orbit-root/linc-128e-0-dc070659cbb3</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   8020  /var/run/dbus/system_bus_socket</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   58927 /tmp/mcop-root/vm-dev-2c28-4beba75f</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   7860  /tmp/.font-unix/fs7100</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   7658  /dev/gpmctl</span><br><span class="line">unix 2   [ ACC ]   STREAM   LISTENING   10498 @/tmp/dbus-s2MLJGO5Ci</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 命令介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法</title>
      <link href="/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Data%20Structures%20And%20Algorithms%20basic/"/>
      <url>/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/Data%20Structures%20And%20Algorithms%20basic/</url>
      
        <content type="html"><![CDATA[<h1 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h1><p>[toc]</p><h1 id="算法与数据结构"><a href="#算法与数据结构" class="headerlink" title="算法与数据结构"></a>算法与数据结构</h1><h2 id="数据结构与抽象数据类型"><a href="#数据结构与抽象数据类型" class="headerlink" title="数据结构与抽象数据类型"></a>数据结构与抽象数据类型</h2><p><img src="https://image.chenjichao.site/file/09af015886049df98a959.png" alt="image-20240616092654473"></p><h3 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h3><p>可以二元组B=(D,R)表示，其中D是数据元素集合，R是D中数据元素间关系集合</p><p>问题决定逻辑结构</p><p>线性结构：</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/4d6411285d83bf790205d.png" alt="image-20240616092955746"></p><p>图状结构：</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/248b29c08167f6b0c581f.png" alt="image-20240616093005961"></p><p>树形结构：</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/acf36a1e75564858e556a.png" alt="image-20240616093020824"></p><h3 id="存储结构"><a href="#存储结构" class="headerlink" title="存储结构"></a>存储结构</h3><p>数据的逻辑结构是独立于计算机的，它与数据在计算机中的存储无关，如果将数据在计算机中无规律地存储，是没有用的。</p><p>对于一个数据结构B=(K,R),必须建立从结点集合到计算机某个存储区域M的一个映象，这个映象要直接或间接地表达结点之间的关系R</p><h4 id="顺序存储"><a href="#顺序存储" class="headerlink" title="顺序存储"></a>顺序存储</h4><ul><li><p>将逻辑上相邻的结点存储在连续存储区域M的相邻的存储单元中，使逻辑相邻的节点一定是物理位置相邻</p></li><li><p>数组就是顺序储存的一个典型</p></li></ul><h4 id="链式存储"><a href="#链式存储" class="headerlink" title="链式存储"></a>链式存储</h4><ul><li>链式存储方式是给每一个结点附加一个指针段，一个结点的指针所指的是该结点的后继的存储地址；</li><li>一个结点可能有多个后继，所以指针段可以是一个指针，也可以是多个指针。</li></ul><h4 id="索引存储"><a href="#索引存储" class="headerlink" title="索引存储"></a>索引存储</h4><ul><li>元素的地址集中储存在索引区域中，搜索索引区域可以快速获取数据地址。</li><li>以线性结构为例，设开始结点的索引号为1，其他结点的索引号等于其驱结点的索引号加1，则每一个结点都有唯一的索引号，根据结点的索引号确定该结点的储存地址，进而访问结点数据。</li><li>字典的索引目录就是索引存储的实例，通过索引可以快速查到所在页码。</li></ul><h4 id="散列存储"><a href="#散列存储" class="headerlink" title="散列存储"></a>散列存储</h4><ul><li>构造一个函数h，实现从集合K到存储区域M的映射；</li><li>函数的定义域为K，值域为M，K中的每一个结点ki在计算机中的存储地址由h(ki)确定；</li><li>仅需要计算即可获得数据的存储地址。</li></ul><h3 id="运算集合"><a href="#运算集合" class="headerlink" title="运算集合"></a>运算集合</h3><p>对于一批数据，数据的运算是定义在数据的逻辑结构上的，而运算的具体实现依赖于数据的存储结构。</p><blockquote><p><strong>插入</strong>：在一个结构中添加一个新节点。</p><p><strong>删除</strong>：在一个结构中删除一个结点。</p><p><strong>检索</strong>：在一个结构中查找满足条件。</p><p><strong>输出</strong>：将一个结构所有结点的值打印、输出。</p><p><strong>排序</strong>：将一个结构中所有结点按某种顺序重新排列。</p></blockquote><h3 id="抽象数据结构"><a href="#抽象数据结构" class="headerlink" title="抽象数据结构"></a>抽象数据结构</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>从机器指令、汇编语言中没有类型的概念，到现在的面向对象程序设计语言中抽象数据类型概念的出现，程序设计经历了一次次抽象，数据的抽象经历了三个发展阶段。</p><h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><ul><li>是与实现无关的数据类型，是一种数据模型及定于在该模型上的一组运算</li><li>抽象数据的描述包括给出抽象数据的名称、数据的集合、数据之间的关系和操作的集合等方面的描述</li></ul><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/image-20241013095837574.png" alt="image-20241013095837574"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA的类型</title>
      <link href="/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/JAVAbasic/"/>
      <url>/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/java/JAVAbasic/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="JAVA基础"><a href="#JAVA基础" class="headerlink" title="JAVA基础"></a>JAVA基础</h1><h2 id="一、JAVA的数据类型"><a href="#一、JAVA的数据类型" class="headerlink" title="一、JAVA的数据类型"></a>一、JAVA的数据类型</h2><h3 id="1-字符型char"><a href="#1-字符型char" class="headerlink" title="1.字符型char"></a>1.字符型char</h3><p>表示通常意义上字符，用’’括起来</p><p>如：’A’,’中’等</p><p>采用unicode编码</p><h3 id="2-布尔值-逻辑值"><a href="#2-布尔值-逻辑值" class="headerlink" title="2.布尔值/逻辑值"></a>2.布尔值/逻辑值</h3><p>采用逻辑运算，一般用于程序流程控制</p><p>一般取值为ture或false(不能用0/1代替)</p><h3 id="3-整型"><a href="#3-整型" class="headerlink" title="3.整型"></a>3.整型</h3><p>有固定表数范围和字符长度，不受操作系统和硬件影响</p><div class="table-container"><table><thead><tr><th>类型</th><th>占用字节</th><th>表数范围</th></tr></thead><tbody><tr><td>byte</td><td>1字节</td><td>-128~127</td></tr><tr><td>short</td><td>2字节</td><td>-2^15~2^15-1</td></tr><tr><td>int</td><td>4字节</td><td>-2^31~2^31-1</td></tr><tr><td>long</td><td>8字节</td><td>-2^63~2^63-1</td></tr></tbody></table></div><h4 id="整型默认问题"><a href="#整型默认问题" class="headerlink" title="整型默认问题"></a>整型默认问题</h4><p>java整型变量默认int</p><p>声明长整型常量在常量后加’l’或’L’；</p><p>如：整型3、长整型3L；</p><p>注意默认特性的编程应用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">long</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">922336414641456314L</span>;</span><br></pre></td></tr></table></figure><h4 id="Java中数值变量的声明："><a href="#Java中数值变量的声明：" class="headerlink" title="Java中数值变量的声明："></a>Java中数值变量的声明：</h4><p><strong>二进制变量的声明以0b为前缀；</strong><br><strong>八进制变量的声明以0为前缀；</strong><br><strong>十六进制变量的声明以0x为前缀</strong></p><p>二进制、八进制、十六进制数值在运用时候自动转为对应的十进制的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0b11</span>;   <span class="comment">//声明二进制变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">011</span>;    <span class="comment">//声明八进制变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">11</span>;     <span class="comment">//声明十进制变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">0x11</span>;   <span class="comment">//声明十六进制变量</span></span><br><span class="line">    System.out.println(<span class="string">&quot;a：&quot;</span>+a); <span class="comment">//3</span></span><br><span class="line">    System.out.println(<span class="string">&quot;b：&quot;</span>+b); <span class="comment">//9</span></span><br><span class="line">    System.out.println(<span class="string">&quot;c：&quot;</span>+c); <span class="comment">//11</span></span><br><span class="line">    System.out.println(<span class="string">&quot;d：&quot;</span>+d); <span class="comment">//17</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>十进制转其它进制：<br><strong>十进制转二进制：Integer.toBinaryString(i);</strong><br><strong>十进制转八进制：Integer.toOctalString(i);</strong><br><strong>十进制转十六进制：Integer.toHexString(i);</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args)</span><br><span class="line">&#123;</span><br><span class="line">    int i = 15;</span><br><span class="line">    System.out.println(&quot;十进制15对应的二进制为：&quot;+Integer.toBinaryString(i));  //1111</span><br><span class="line">    System.out.println(&quot;十进制15对应的八进制为：&quot;+Integer.toOctalString(i));   //17</span><br><span class="line">    System.out.println(i);  //15</span><br><span class="line">    System.out.println(&quot;十进制15对应的十六进制为：&quot;+Integer.toHexString(i));    //f</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-浮点型"><a href="#4-浮点型" class="headerlink" title="4.浮点型"></a>4.浮点型</h3><p>分类：单精度浮点、双精度浮点</p><div class="table-container"><table><thead><tr><th>类型</th><th>占用存储空间</th><th>表数范围</th></tr></thead><tbody><tr><td>float</td><td>4字节</td><td>-3.403E38~3.403E38</td></tr><tr><td>double</td><td>8字节</td><td>-1.798E308~1.798E308</td></tr></tbody></table></div><p>JAVA浮点型默认为double型，如要声明float，则在数字后加f或F</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">double d = 3.14;</span><br><span class="line">float f = 3.14f;</span><br></pre></td></tr></table></figure><h2 id="二、JAVA的引用数据类型"><a href="#二、JAVA的引用数据类型" class="headerlink" title="二、JAVA的引用数据类型"></a>二、JAVA的引用数据类型</h2><p>指向一个对象在内存中的位置</p><ul><li>本质上是很强的完整性和安全性的指针(不能使用++、—运算)</li><li>包括：类、接口、数组</li></ul><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>用来表示变量名、类名、方法名、数组名和文件名等</p><p>是有效的字符序列</p><h4 id="规则："><a href="#规则：" class="headerlink" title="规则："></a>规则：</h4><h5 id="正常规则"><a href="#正常规则" class="headerlink" title="正常规则"></a>正常规则</h5><ul><li>由字母、下划线(_)、美元符号($)组合而成</li><li>以字符、下划线或美元符号开头，不能以数字开头</li></ul><h5 id="JAVA潜规则"><a href="#JAVA潜规则" class="headerlink" title="JAVA潜规则"></a>JAVA潜规则</h5><p>要求：“见名思义”</p><ul><li>stuName,area等，循环控制变量除外</li><li>类名首字母大写，如String</li><li>变量、方法及对象的首字母小写</li><li>所有单词靠在一起，大写中间单词首字母</li><li>变量大写所有字母</li><li>JAVA包全部小写</li></ul><h5 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h5><p>是指系统所保留使用的表示符</p><p>java不允许用户对关键字赋予其他的含义</p><h2 id="三、常量与变量"><a href="#三、常量与变量" class="headerlink" title="三、常量与变量"></a>三、常量与变量</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>概念：在程序的运行过程中可变的量，通常用来记录运算中间结果或保存数据</p><p>特点：先声明后使用</p><h4 id="变量的声明"><a href="#变量的声明" class="headerlink" title="变量的声明"></a>变量的声明</h4><p>变量声明是一个完整的语句，用分号结束</p><p><strong>变量四要素：名字、类型、值、作用域</strong></p><h4 id="变量形式"><a href="#变量形式" class="headerlink" title="变量形式"></a>变量形式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> <span class="number">10</span>;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>概念：一经建立，在整个程序过程中都不会改变</p><p>形式与变量基本相同，前面加关键字final</p><h4 id="常量形式"><a href="#常量形式" class="headerlink" title="常量形式"></a>常量形式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">int</span> MIN=<span class="number">10</span>; \\常量标识符一般为大写</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html</title>
      <link href="/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E5%89%8D%E7%AB%AF/html/html/"/>
      <url>/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E5%89%8D%E7%AB%AF/html/html/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>标记语言，实现图片、音频、视频、超链接等</p><h2 id="一、声明html"><a href="#一、声明html" class="headerlink" title="一、声明html"></a>一、声明html</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewpoet&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 网页标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>这是网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 身体，主要写标签内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- html双标签包含文档所有内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、标签"><a href="#二、标签" class="headerlink" title="二、标签"></a>二、标签</h2><h3 id="单标签"><a href="#单标签" class="headerlink" title="单标签"></a>单标签</h3><h4 id="1-图像标签"><a href="#1-图像标签" class="headerlink" title="1.图像标签"></a>1.图像标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>src:图片路径位置(必选)</p><p>alt:图片加载失败时文字提示说明(必选)</p></blockquote><h4 id="2-换行标签"><a href="#2-换行标签" class="headerlink" title="2.换行标签"></a>2.换行标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>sjklandfo<span class="tag">&lt;<span class="name">br</span>&gt;</span>djksbhnfijkl<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>sjklandfo<br>djksbhnfijkl</p><h4 id="3-输入标签"><a href="#3-输入标签" class="headerlink" title="3.输入标签"></a>3.输入标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-关键字标签"><a href="#4-关键字标签" class="headerlink" title="4.关键字标签"></a>4.关键字标签</h4><h5 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h5><p>\<meta> 标签定义关于 HTML 文档的元数据。元数据是关于数据的数据（信息）。</p><p>\<meta> 标签始终位于 <head> 元素 内，通常用于指定字符集、页面描述、关键词、文档作者和视口设置：</p><p>元数据不会显示在页面上，但可以被机器解析。</p><p>浏览器（如何显示内容或重新加载页面）、搜索引擎（关键词）和其他网络服务会用到元数据。</p><p><strong>提示：</strong>meta 元素有多种不同用法，而且一个 HTML 文档中可以多个 meta 元素。</p><p><strong>提示：</strong>通过 <code>&lt;meta&gt;</code> 标签，有一种方法让网页设计师控制视口（即用户在网页中可见的区域）（请参见下面的”设置视口”实例）。</p><p><strong>注意：</strong>每个 meta 元素只能用于一种用途。如果想要使用的特性不止一个，那就应该在 head 元素中添加多个 meta 元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&#x27;description&#x27;</span> <span class="attr">content</span>=<span class="string">&#x27;abcd&#x27;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-资源标签"><a href="#5-资源标签" class="headerlink" title="5.资源标签"></a>5.资源标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="双标签"><a href="#双标签" class="headerlink" title="双标签"></a>双标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">开始标签</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">结束标签</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-标题标签"><a href="#1-标题标签" class="headerlink" title="1.标题标签"></a>1.标题标签</h4><p>h1~h6</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>二级标签<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>三级标签<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>四级标签<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>五级标签<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>六级标签<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><p><h1>一级标签</h1></p><p><h2>二级标签</h2></p><p><h3>三级标签</h3></p><p><h4>四级标签</h4></p><p><h5>五级标签</h5></p><h6>六级标签</h6><h4 id="2-段落标签"><a href="#2-段落标签" class="headerlink" title="2.段落标签"></a>2.段落标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>段落标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>段落标签</p><h4 id="3-超连接"><a href="#3-超连接" class="headerlink" title="3.超连接"></a>3.超连接</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;&quot;</span>&gt;</span>跳转网站<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href是指当前a跳转的网站(必选)</p><p>target有两个属性(可选):</p><blockquote><p>​    _blank:新开窗口<br>​    _self:当前窗口(默认)</p></blockquote><h4 id="4-音频视频标签"><a href="#4-音频视频标签" class="headerlink" title="4.音频视频标签"></a>4.音频视频标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src:图片路径位置(必选)</p><p>controls:控件(必选)</p><h4 id="5-表格标签"><a href="#5-表格标签" class="headerlink" title="5.表格标签"></a>5.表格标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1,cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1,cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2,cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2,cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table border="1" cellspacing="0">    <tr>        <td>Header 1</td>        <td>Header 2</td>    </tr>   <tr>        <td>row 1,cell 1</td>        <td>row 1,cell 2</td>    </tr>    <tr>        <td>row 2,cell 1</td>        <td>row 2,cell 2</td>    </tr></table><p>border:有1的实线</p><p>cellspacing:空格</p><p>tr:行</p><p>td:列</p><p>快捷写法:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">table&gt;tr*4&gt;td*3//四行三列</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Header 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>Header 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>row 1 and 2,cell 1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 1,cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;td&gt;row 2,cell 1&lt;/td&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>row 2,cell 2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><table border="1" cellspacing="0">    <tr>        <td>Header 1</td>        <td>Header 2</td>    </tr>   <tr>        <td rowspan="2">row 1 and 2,cell 1</td>        <td>row 1,cell 2</td>    </tr>    <tr>        <!-- <td>row 2,cell 1</td>-->        <td>row 2,cell 2</td>    </tr></table><p>rowspan:跨列</p><p>colspan:跨行</p><h4 id="6-文本格式化标签"><a href="#6-文本格式化标签" class="headerlink" title="6.文本格式化标签"></a>6.文本格式化标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>粗体文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>强调文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>更小的文本<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span> (删除线)<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span> (插入的文本)<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span> (下标文本)<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span> (上标文字)<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;3px&quot;</span> <span class="attr">color</span>=<span class="string">&quot;blue&quot;</span>&gt;</span>文本大小及颜色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span>代码格式<span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p><b>粗体文本</b><br><em>强调文本</em><br><i>斜体文本</i><br><small>更小的文本</small></p><p><del> (删除线)</del><br><ins> (插入的文本)</ins><br><sub> (下标文本)</sub><br><sup> (上标文字)</sup></p><font size="3px" color="blue">文本大小及颜色</font><p><pre>print(“hello world”)<pre></p><h4 id="7-列表代码"><a href="#7-列表代码" class="headerlink" title="7.列表代码"></a>7.列表代码</h4><h5 id="1-无序列表"><a href="#1-无序列表" class="headerlink" title="(1)无序列表"></a>(1)无序列表</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-有序列表"><a href="#2-有序列表" class="headerlink" title="(2)有序列表"></a>(2)有序列表</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8-表单列表"><a href="#8-表单列表" class="headerlink" title="8.表单列表"></a>8.表单列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--input:输入框 有不同作用 type类型不同--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--文本输入框--&gt;</span></span><br><span class="line">昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;int&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单选框--&gt;</span></span><br><span class="line">    性别：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span>男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;womon&quot;</span>&gt;</span>女</span><br><span class="line">     <span class="comment">&lt;!--多选框--&gt;</span></span><br><span class="line">    爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;chang&quot;</span>&gt;</span>唱<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span><span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;tiao&quot;</span>&gt;</span>跳<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span><span class="attr">name</span>=<span class="string">&quot;hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;rap&quot;</span>&gt;</span>rap</span><br><span class="line">    <span class="comment">&lt;!--下拉框--&gt;</span></span><br><span class="line">    地址：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;sichuan&quot;</span>&gt;</span>四川<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;hangzhou&quot;</span>&gt;</span>杭州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--多选框--&gt;</span></span><br><span class="line">    个人简介：<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span> <span class="attr">col</span>=<span class="string">&quot;&quot;</span> <span class="attr">row</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--提交按钮与重置按钮--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><form action="" method="get" >    <div>    昵称：<input type="text">    </div>    <div>    密码：<input type="int">    </div>    性别：<input type="radio" name="sex" value="man">男<input type="radio" name="sex" value="womon">女    <div>    爱好：<input type="checkbox" name="hobby" value="chang">唱<input type="checkbox"name="hobby" value="tiao">跳<input type="checkbox"name="hobby" value="rap">rap    </div>    <div>    地址：<select name="" id="">    <option value="beijing">北京</option>     <option value="sichuan">四川</option>     <option value="hangzhou">杭州</option>    </select>    </div>    <div>    个人简介：<textarea name="" id="" col="" row=""></textarea>    </div>     <input type="submit">     <input type="reset"></form><h2 id="三、特殊字符"><a href="#三、特殊字符" class="headerlink" title="三、特殊字符"></a>三、特殊字符</h2><table class="weby" cellspacing="0" cellpadding="2" border="1" align="center"><tbody><tr><td bgcolor="#ccc">HTML 原代码</td><td bgcolor="#ccc">显示结果</td><td bgcolor="#ccc">描述</td></tr><tr><td>&amp;lt;</td><td>&lt;</td><td>小于号或显示标记</td></tr><tr><td>&amp;gt;</td><td>&gt;</td><td>大于号或显示标记</td></tr><tr><td>&amp;amp;</td><td>&amp;</td><td>可用于显示其它特殊字符</td></tr><tr><td>&amp;quot;</td><td>“</td><td>引号</td></tr><tr><td>&amp;reg;</td><td>®</td><td>已注册</td></tr><tr><td>&amp;copy;</td><td>©</td><td>版权</td></tr><tr><td>&amp;trade;</td><td>™</td><td>商标</td></tr><tr><td>&amp;ensp;</td><td> </td><td>半个空白位</td></tr><tr><td>&amp;emsp;</td><td> </td><td>一个空白位</td></tr><tr><td>&amp;nbsp;</td><td></td><td>不断行的空白</td></tr></tbody></table><table class="weby" cellspacing="0" cellpadding="2" border="1" align="center"><tbody><tr><td bgcolor="#ccc">HTML 原代码</td><td bgcolor="#ccc">显示结果</td><td bgcolor="#ccc">描述</td></tr><tr><td>&amp;lt;</td><td>&lt;</td><td>小于号或显示标记</td></tr><tr><td>&amp;gt;</td><td>&gt;</td><td>大于号或显示标记</td></tr><tr><td>&amp;amp;</td><td>&amp;</td><td>可用于显示其它特殊字符</td></tr><tr><td>&amp;quot;</td><td>“</td><td>引号</td></tr><tr><td>&amp;reg;</td><td>®</td><td>已注册</td></tr><tr><td>&amp;copy;</td><td>©</td><td>版权</td></tr><tr><td>&amp;trade;</td><td>™</td><td>商标</td></tr><tr><td>&amp;ensp;</td><td> </td><td>半个空白位</td></tr><tr><td>&amp;emsp;</td><td> </td><td>一个空白位</td></tr><tr><td>&amp;nbsp;</td><td></td><td>不断行的空白</td></tr></tbody></table><table cellspacing="0" cellpadding="2" border="0" align="center"><tbody><tr><td colspan="10"> </td></tr><tr><td align="center">´</td><td>&amp;acute;</td><td align="center">©</td><td>&amp;copy;</td><td align="center">&gt;</td><td>&amp;gt;</td><td align="center">µ</td><td>&amp;micro;</td><td align="center">®</td><td>&amp;reg;</td></tr><tr><td align="center">&amp;</td><td>&amp;amp;</td><td align="center">°</td><td>&amp;deg;</td><td align="center">¡</td><td>&amp;iexcl;</td><td align="center"></td><td>&amp;nbsp;</td><td align="center">»</td><td>&amp;raquo;</td></tr><tr><td align="center">¦</td><td>&amp;brvbar;</td><td align="center">÷</td><td>&amp;divide;</td><td align="center">¿</td><td>&amp;iquest;</td><td align="center">¬</td><td>&amp;not;</td><td align="center">§</td><td>&amp;sect;</td></tr><tr><td align="center">•</td><td>&amp;bull;</td><td align="center">½</td><td>&amp;frac12;</td><td align="center">«</td><td>&amp;laquo;</td><td align="center">¶</td><td>&amp;para;</td><td align="center">¨</td><td>&amp;uml;</td></tr><tr><td align="center">¸</td><td>&amp;cedil;</td><td align="center">¼</td><td>&amp;frac14;</td><td align="center">&lt;</td><td>&amp;lt;</td><td align="center">±</td><td>&amp;plusmn;</td><td align="center">×</td><td>&amp;times;</td></tr><tr><td align="center">¢</td><td>&amp;cent;</td><td align="center">¾</td><td>&amp;frac34;</td><td align="center">¯</td><td>&amp;macr;</td><td align="center">“</td><td>&amp;quot;</td><td align="center">™</td><td>&amp;trade;</td></tr><tr><td colspan="10"> </td></tr><tr><td align="center">€</td><td>&amp;euro;</td><td align="center">£</td><td>&amp;pound;</td><td align="center">¥</td><td>&amp;yen;</td><td align="center"></td><td></td><td align="center"></td><td></td></tr><tr><td colspan="10"> </td></tr><tr><td align="center">„</td><td>&amp;bdquo;</td><td align="center">…</td><td>&amp;hellip;</td><td align="center">·</td><td>&amp;middot;</td><td align="center">›</td><td>&amp;rsaquo;</td><td align="center">ª</td><td>&amp;ordf;</td></tr><tr><td align="center">ˆ</td><td>&amp;circ;</td><td align="center">“</td><td>&amp;ldquo;</td><td align="center">—</td><td>&amp;mdash;</td><td align="center">’</td><td>&amp;rsquo;</td><td align="center">º</td><td>&amp;ordm;</td></tr><tr><td align="center">†</td><td>&amp;dagger;</td><td align="center">‹</td><td>&amp;lsaquo;</td><td align="center">–</td><td>&amp;ndash;</td><td align="center">‚</td><td>&amp;sbquo;</td><td align="center">”</td><td>&amp;rdquo;</td></tr><tr><td align="center">‡</td><td>&amp;Dagger;</td><td align="center">‘</td><td>&amp;lsquo;</td><td align="center">‰</td><td>&amp;permil;</td><td align="center">­</td><td>&amp;shy;</td><td align="center">˜</td><td>&amp;tilde;</td></tr><tr><td colspan="10"> </td></tr><tr><td align="center">≈</td><td>&amp;asymp;</td><td align="center">⁄</td><td>&amp;frasl;</td><td align="center">←</td><td>&amp;larr;</td><td align="center">∂</td><td>&amp;part;</td><td align="center">♠</td><td>&amp;spades;</td></tr><tr><td align="center">∩</td><td>&amp;cap;</td><td align="center">≥</td><td>&amp;ge;</td><td align="center">≤</td><td>&amp;le;</td><td align="center">″</td><td>&amp;Prime;</td><td align="center">∑</td><td>&amp;sum;</td></tr><tr><td align="center">♣</td><td>&amp;clubs;</td><td align="center">↔</td><td>&amp;harr;</td><td align="center">◊</td><td>&amp;loz;</td><td align="center">′</td><td>&amp;prime;</td><td align="center">↑</td><td>&amp;uarr;</td></tr><tr><td align="center">↓</td><td>&amp;darr;</td><td align="center">♥</td><td>&amp;hearts;</td><td align="center">−</td><td>&amp;minus;</td><td align="center">∏</td><td>&amp;prod;</td><td align="center">‍</td><td>&amp;zwj;</td></tr><tr><td align="center">♦</td><td>&amp;diams;</td><td align="center">∞</td><td>&amp;infin;</td><td align="center">≠</td><td>&amp;ne;</td><td align="center">√</td><td>&amp;radic;</td><td align="center">‌</td><td>&amp;zwnj;</td></tr><tr><td align="center">≡</td><td>&amp;equiv;</td><td align="center">∫</td><td>&amp;int;</td><td align="center">‾</td><td>&amp;oline;</td><td align="center">→</td><td>&amp;rarr;</td><td width="46"></td><td width="63"></td></tr><tr><td colspan="10"> </td></tr><tr><td align="center">α</td><td>&amp;alpha;</td><td align="center">η</td><td>&amp;eta;</td><td align="center">μ</td><td>&amp;mu;</td><td align="center">π</td><td>&amp;pi;</td><td align="center">θ</td><td>&amp;theta;</td></tr><tr><td align="center">β</td><td>&amp;beta;</td><td align="center">γ</td><td>&amp;gamma;</td><td align="center">ν</td><td>&amp;nu;</td><td align="center">ψ</td><td>&amp;psi;</td><td align="center">υ</td><td>&amp;upsilon;</td></tr><tr><td align="center">χ</td><td>&amp;chi;</td><td align="center">ι</td><td>&amp;iota;</td><td align="center">ω</td><td>&amp;omega;</td><td align="center">ρ</td><td>&amp;rho;</td><td align="center">ξ</td><td>&amp;xi;</td></tr><tr><td align="center">δ</td><td>&amp;delta;</td><td align="center">κ</td><td>&amp;kappa;</td><td align="center">ο</td><td>&amp;omicron;</td><td align="center">σ</td><td>&amp;sigma;</td><td align="center">ζ</td><td>&amp;zeta;</td></tr><tr><td align="center">ε</td><td>&amp;epsilon;</td><td align="center">λ</td><td>&amp;lambda;</td><td align="center">φ</td><td>&amp;phi;</td><td align="center">τ</td><td>&amp;tau;</td><td></td><td></td></tr><tr><td colspan="10"> </td></tr><tr><td align="center">Α</td><td>&amp;Alpha;</td><td align="center">Η</td><td>&amp;Eta;</td><td align="center">Μ</td><td>&amp;Mu;</td><td align="center">Π</td><td>&amp;Pi;</td><td align="center">Θ</td><td>&amp;Theta;</td></tr><tr><td align="center">Β</td><td>&amp;Beta;</td><td align="center">Γ</td><td>&amp;Gamma;</td><td align="center">Ν</td><td>&amp;Nu;</td><td align="center">Ψ</td><td>&amp;Psi;</td><td align="center">Υ</td><td>&amp;Upsilon;</td></tr><tr><td align="center">Χ</td><td>&amp;Chi;</td><td align="center">Ι</td><td>&amp;Iota;</td><td align="center">Ω</td><td>&amp;Omega;</td><td align="center">Ρ</td><td>&amp;Rho;</td><td align="center">Ξ</td><td>&amp;Xi;</td></tr><tr><td align="center">Δ</td><td>&amp;Delta;</td><td align="center">Κ</td><td>&amp;Kappa;</td><td align="center">Ο</td><td>&amp;Omicron;</td><td align="center">Σ</td><td>&amp;Sigma;</td><td align="center">Ζ</td><td>&amp;Zeta;</td></tr><tr><td align="center">Ε</td><td>&amp;Epsilon;</td><td align="center">Λ</td><td>&amp;Lambda;</td><td align="center">Φ</td><td>&amp;Phi;</td><td align="center">Τ</td><td>&amp;Tau;</td><td align="center">ς</td><td>&amp;sigmaf;</td></tr><tr><td colspan="10"> </td></tr></tbody></table><h2 id="四、语义标签"><a href="#四、语义标签" class="headerlink" title="四、语义标签"></a>四、语义标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>导航<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>文章<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>页脚<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="div与span"><a href="#div与span" class="headerlink" title="div与span"></a>div与span</h4><p>div和span的区别是：div标签是块级元素，每个div标签都会从新行开始显示，占据一行；div标签内可以添加其他的标签元素（行内元素、块级元素都行）。而，span标签是行内元素，会在一行显示；span标签内只能添加行内元素的标签或文本。</p><p><strong>div标签的简单示例：设置这些div标签的容器的宽度为500px，高度为500px</strong></p><p>&lt;div class=”div1”&gt;内容1，使用div，不设置宽度，不设置边距&lt;/div&gt;<br>&lt;div class=”div2”&gt;内容2，使用div，不设置宽度，设置内边距padding: 20px&lt;/div&gt;<br>&lt;div class=”div3”&gt;内容3，使用div，不设置宽度，设置外边距margin: 20px&lt;/div&gt;<br>&lt;div class=”div4”&gt;内容4，使用div，设置宽度，设置外边距margin: 20px&lt;/div&gt;<br>&lt;div class=”div5”&gt;内容5，使用div，设置宽度，设置内边距padding: 20px&lt;/div&gt;<br>&lt;div class=”div1”&gt;内容6，使用div，不设置宽度，不设置边距&lt;/div&gt;</p><p><strong>效果图：</strong></p><p><img src="https://image.chenjichao.site/file/d31c97e19520ef318089c.jpg" alt=""></p><p><strong>简单示例2：在div标签下添加其他html标签</strong></p><p>&lt;div&gt;<br>    &lt;span&gt;span标签&lt;/span&gt;&lt;span&gt;span标签&lt;/span&gt;&lt;a href=”#”&gt;a标签&lt;/a&gt;&lt;a href=”#”&gt;a标签&lt;/a&gt;<br>    &lt;p&gt;p标签&lt;/p&gt;<br>    &lt;div&gt;div标签&lt;/div&gt;<br>&lt;/div&gt;</p><p><strong>效果图：</strong></p><p><img src="https://image.chenjichao.site/file/90e763969afb5335fd03f.jpg" alt=""></p><p>HTML span标签</p><p>span标签是行内元素，拥有行内元素的特点。span标签元素会和其他标签元素会在一行显示（块级元素除外），不会另起一行显示（如上例）。</p><p>span标签的宽度、高度都无法通过css样式设置，它的宽高受其本身内容（文字、图片）控制，随着内容的宽高改变而改变；span标签无法控制外边距和内边距，虽然可以设置左右的外边距和内边距，但上下的外边距和内边距无法设置。</p><p>而且，span标签里只能容纳文本或者是其他的行内元素，不能容纳块级元素。</p><p>span标签的简单示例：</p><p>设置span.span1容器的内边距padding: 20px，span.span1容器内的span标签的外边距margin: 20px;</p><p><pre data-index="2" class="set-code-show" name="code">&lt;span&gt;span标签&lt;/span&gt;&lt;span&gt;span标签&lt;/span&gt;&lt;a href="#"&gt;a标签&lt;/a&gt;&lt;a href="#"&gt;a标签&lt;/a&gt;&lt;div&gt;div标签&lt;/div&gt;&lt;span class="span1"&gt;span标签内，添加&lt;span&gt;span标签&lt;/span&gt;&lt;a href="#"&gt;a标签&lt;/a&gt;&lt;/span&gt;</pre><br><strong>效果图：</strong></p><p><img src="https://image.chenjichao.site/file/a712d402bc9b828cfd11d.jpg" alt=""></p><h2 id="五、注释"><a href="#五、注释" class="headerlink" title="五、注释"></a>五、注释</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是一个注释--&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 前端 </category>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css基础</title>
      <link href="/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E5%89%8D%E7%AB%AF/css/css_basic/"/>
      <url>/2024/06/15/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/%E5%89%8D%E7%AB%AF/css/css_basic/</url>
      
        <content type="html"><![CDATA[<h1 id="css基础"><a href="#css基础" class="headerlink" title="css基础"></a>css基础</h1><h2 id="一、盒子模型"><a href="#一、盒子模型" class="headerlink" title="一、盒子模型"></a>一、盒子模型</h2><p>浏览器的渲染引擎会根据标准之一的css基础框盒模型，通过css决定这些盒子的大小、位置以及属性</p><p>由content(内容)+padding(外边框)+border(边框)组成</p><p><img src="https://image.chenjichao.site/file/ed3799b00646097e70ac9.png" alt="image-20240704155533398"></p><h2 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h2><h3 id="1-内部插入"><a href="#1-内部插入" class="headerlink" title="1.内部插入"></a>1.内部插入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的 CSS 测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellow;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的第一个 CSS 示例<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-外部使用"><a href="#2-外部使用" class="headerlink" title="2.外部使用"></a>2.外部使用</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的 CSS 测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.css&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我的第一个 CSS 示例<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="三、属性"><a href="#三、属性" class="headerlink" title="三、属性"></a>三、属性</h2><h4 id="动画属性-Animation"><a href="#动画属性-Animation" class="headerlink" title="动画属性(Animation)"></a>动画属性(Animation)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>animation</code></td><td style="text-align:left">指定基于关键帧的动画。</td></tr><tr><td style="text-align:left"><code>animation-delay</code></td><td style="text-align:left">指定动画何时开始。</td></tr><tr><td style="text-align:left"><code>animation-direction</code></td><td style="text-align:left">指定动画是否应在交替的循环中反向播放。</td></tr><tr><td style="text-align:left"><code>animation-duration</code></td><td style="text-align:left">指定动画完成一个周期应花费的秒数或毫秒数。</td></tr><tr><td style="text-align:left"><code>animation-fill-mode</code></td><td style="text-align:left">指定CSS动画在执行之前和之后应如何将样式应用于其目标。</td></tr><tr><td style="text-align:left"><code>animation-iteration-count</code></td><td style="text-align:left">指定在停止之前动画循环应播放的次数。</td></tr><tr><td style="text-align:left"><code>animation-name</code></td><td style="text-align:left">指定<code>@keyframes</code>应应用于所选元素的已定义动画的名称。</td></tr><tr><td style="text-align:left"><code>animation-play-state</code></td><td style="text-align:left">指定动画是运行还是暂停。</td></tr><tr><td style="text-align:left"><code>animation-timing-function</code></td><td style="text-align:left">指定CSS动画在每个周期内应如何进行。</td></tr></tbody></table></div><h4 id="背景属性-Background"><a href="#背景属性-Background" class="headerlink" title="背景属性(Background)"></a>背景属性(Background)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>background</code></td><td style="text-align:left">在一个声明中定义各种背景属性。</td></tr><tr><td style="text-align:left"><code>background-attachment</code></td><td style="text-align:left">指定背景图像是在视口中固定还是滚动。</td></tr><tr><td style="text-align:left"><code>background-clip</code></td><td style="text-align:left">指定背景的绘制区域。</td></tr><tr><td style="text-align:left"><code>background-color</code></td><td style="text-align:left">定义元素的背景色。</td></tr><tr><td style="text-align:left"><code>background-image</code></td><td style="text-align:left">定义元素的背景图像。</td></tr><tr><td style="text-align:left"><code>background-origin</code></td><td style="text-align:left">指定背景图像的定位区域。</td></tr><tr><td style="text-align:left"><code>background-position</code></td><td style="text-align:left">定义背景图像的原点。</td></tr><tr><td style="text-align:left"><code>background-repeat</code></td><td style="text-align:left">指定是否/如何平铺背景图像。</td></tr><tr><td style="text-align:left"><code>background-size</code></td><td style="text-align:left">指定背景图像的大小。</td></tr></tbody></table></div><h4 id="边框属性-Border"><a href="#边框属性-Border" class="headerlink" title="边框属性(Border)"></a>边框属性(Border)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>border</code></td><td style="text-align:left">设置元素边框所有四个侧面的宽度，样式和颜色。</td></tr><tr><td style="text-align:left"><code>border-bottom</code></td><td style="text-align:left">设置元素底部边框的宽度，样式和颜色。</td></tr><tr><td style="text-align:left"><code>border-bottom-color</code></td><td style="text-align:left">设置元素底部边框的颜色。</td></tr><tr><td style="text-align:left"><code>border-bottom-left-radius</code></td><td style="text-align:left">定义元素的左下边界角的形状。</td></tr><tr><td style="text-align:left"><code>border-bottom-right-radius</code></td><td style="text-align:left">定义元素右下边界的形状。</td></tr><tr><td style="text-align:left"><code>border-bottom-style</code></td><td style="text-align:left">设置元素底部边框的样式。</td></tr><tr><td style="text-align:left"><code>border-bottom-width</code></td><td style="text-align:left">设置元素底部边框的宽度。</td></tr><tr><td style="text-align:left"><code>border-color</code></td><td style="text-align:left">设置元素所有四个侧面的边框颜色。</td></tr><tr><td style="text-align:left"><code>border-image</code></td><td style="text-align:left">指定如何使用图像代替边框样式。</td></tr><tr><td style="text-align:left"><code>border-image-outset</code></td><td style="text-align:left">指定边框图像区域超出边框超出范围的数量。</td></tr><tr><td style="text-align:left"><code>border-image-repeat</code></td><td style="text-align:left">指定图像边框应重复，四舍五入还是拉伸。</td></tr><tr><td style="text-align:left"><code>border-image-slice</code></td><td style="text-align:left">指定图像边框的向内偏移。</td></tr><tr><td style="text-align:left"><code>border-image-source</code></td><td style="text-align:left">指定要用作边框的图像的位置。</td></tr><tr><td style="text-align:left"><code>border-image-width</code></td><td style="text-align:left">指定图像边框的宽度。</td></tr><tr><td style="text-align:left"><code>border-left</code></td><td style="text-align:left">设置元素左边框的宽度，样式和颜色。</td></tr><tr><td style="text-align:left"><code>border-left-color</code></td><td style="text-align:left">设置元素的左边框的颜色。</td></tr><tr><td style="text-align:left"><code>border-left-style</code></td><td style="text-align:left">设置元素左边框的样式。</td></tr><tr><td style="text-align:left"><code>border-left-width</code></td><td style="text-align:left">设置元素左边框的宽度。</td></tr><tr><td style="text-align:left"><code>border-radius</code></td><td style="text-align:left">定义元素边界角的形状。</td></tr><tr><td style="text-align:left"><code>border-right</code></td><td style="text-align:left">设置元素右边框的宽度，样式和颜色。</td></tr><tr><td style="text-align:left"><code>border-right-color</code></td><td style="text-align:left">设置元素右边框的颜色。</td></tr><tr><td style="text-align:left"><code>border-right-style</code></td><td style="text-align:left">设置元素右边框的样式。</td></tr><tr><td style="text-align:left"><code>border-right-width</code></td><td style="text-align:left">设置元素右边框的宽度。</td></tr><tr><td style="text-align:left"><code>border-style</code></td><td style="text-align:left">在元素的所有四个面上设置边框的样式。</td></tr><tr><td style="text-align:left"><code>border-top</code></td><td style="text-align:left">设置元素顶部边框的宽度，样式和颜色。</td></tr><tr><td style="text-align:left"><code>border-top-color</code></td><td style="text-align:left">设置元素顶部边框的颜色。</td></tr><tr><td style="text-align:left"><code>border-top-left-radius</code></td><td style="text-align:left">定义元素左上角的形状。</td></tr><tr><td style="text-align:left"><code>border-top-right-radius</code></td><td style="text-align:left">定义元素的右上边界角的形状。</td></tr><tr><td style="text-align:left"><code>border-top-style</code></td><td style="text-align:left">设置元素顶部边框的样式。</td></tr><tr><td style="text-align:left"><code>border-top-width</code></td><td style="text-align:left">设置元素顶部边框的宽度。</td></tr><tr><td style="text-align:left"><code>border-width</code></td><td style="text-align:left">设置元素所有四个侧面的边框宽度。</td></tr></tbody></table></div><h4 id="颜色属性-Color"><a href="#颜色属性-Color" class="headerlink" title="颜色属性(Color)"></a>颜色属性(Color)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>color</code></td><td style="text-align:left">指定元素文本的颜色。</td></tr><tr><td style="text-align:left"><code>opacity</code></td><td style="text-align:left">指定元素的透明度。</td></tr></tbody></table></div><h4 id="尺寸属性-Size"><a href="#尺寸属性-Size" class="headerlink" title="尺寸属性(Size)"></a>尺寸属性(Size)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>height</code></td><td style="text-align:left">指定元素的高度。</td></tr><tr><td style="text-align:left"><code>max-height</code></td><td style="text-align:left">指定元素的最大高度。</td></tr><tr><td style="text-align:left"><code>max-width</code></td><td style="text-align:left">指定元素的最大宽度。</td></tr><tr><td style="text-align:left"><code>min-height</code></td><td style="text-align:left">指定元素的最小高度。</td></tr><tr><td style="text-align:left"><code>min-width</code></td><td style="text-align:left">指定元素的最小宽度。</td></tr><tr><td style="text-align:left"><code>width</code></td><td style="text-align:left">指定元素的宽度。</td></tr></tbody></table></div><h4 id="内容属性-Content"><a href="#内容属性-Content" class="headerlink" title="内容属性(Content)"></a>内容属性(Content)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>content</code></td><td style="text-align:left">插入生成的内容。</td></tr><tr><td style="text-align:left"><code>quotes</code></td><td style="text-align:left">指定嵌入引号的引号。</td></tr><tr><td style="text-align:left"><code>counter-reset</code></td><td style="text-align:left">创建或重置一个或多个计数器。</td></tr><tr><td style="text-align:left"><code>counter-increment</code></td><td style="text-align:left">递增一个或多个计数器值。</td></tr></tbody></table></div><h4 id="弹性Flex盒子布局-Flex"><a href="#弹性Flex盒子布局-Flex" class="headerlink" title="弹性Flex盒子布局(Flex)"></a>弹性Flex盒子布局(Flex)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>align-content</code></td><td style="text-align:left">指定伸缩容器中伸缩容器的项目的对齐方式。</td></tr><tr><td style="text-align:left"><code>align-items</code></td><td style="text-align:left">为flex容器中的项目指定默认对齐方式。</td></tr><tr><td style="text-align:left"><code>align-self</code></td><td style="text-align:left">指定弹性容器中选定项目的对齐方式。</td></tr><tr><td style="text-align:left"><code>flex</code></td><td style="text-align:left">指定弹性长度的分量。</td></tr><tr><td style="text-align:left"><code>flex-basis</code></td><td style="text-align:left">指定弹性项目的初始主要尺寸。</td></tr><tr><td style="text-align:left"><code>flex-direction</code></td><td style="text-align:left">指定弹性项目的方向。</td></tr><tr><td style="text-align:left"><code>flex-flow</code></td><td style="text-align:left"><code>flex-direction</code>和<code>flex-wrap</code>属性的简写属性。</td></tr><tr><td style="text-align:left"><code>flex-grow</code></td><td style="text-align:left">指定弹性项目相对于弹性容器内其他项目的增长方式。</td></tr><tr><td style="text-align:left"><code>flex-shrink</code></td><td style="text-align:left">指定flex项目相对于flex容器内其他项目的收缩方式。</td></tr><tr><td style="text-align:left"><code>flex-wrap</code></td><td style="text-align:left">指定是否应包装柔性物品。</td></tr><tr><td style="text-align:left"><code>justify-content</code></td><td style="text-align:left">指定在解决了任何弹性长度和自动页边距之后，弹性项目如何沿弹性容器的主轴对齐。</td></tr><tr><td style="text-align:left"><code>order</code></td><td style="text-align:left">指定弹性项目在弹性容器中的显示和布局顺序。</td></tr></tbody></table></div><h4 id="字体属性-Fonts"><a href="#字体属性-Fonts" class="headerlink" title="字体属性(Fonts)"></a>字体属性(Fonts)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>font</code></td><td style="text-align:left">在一个声明中定义各种字体属性。</td></tr><tr><td style="text-align:left"><code>font-family</code></td><td style="text-align:left">定义元素的字体列表。</td></tr><tr><td style="text-align:left"><code>font-size</code></td><td style="text-align:left">定义文本的字体大小。</td></tr><tr><td style="text-align:left"><code>font-size-adjust</code></td><td style="text-align:left">发生字体回退时，保留文本的可读性。</td></tr><tr><td style="text-align:left"><code>font-stretch</code></td><td style="text-align:left">从字体中选择一个普通的，压缩的或扩展的字体。</td></tr><tr><td style="text-align:left"><code>font-style</code></td><td style="text-align:left">定义文本的字体样式。</td></tr><tr><td style="text-align:left"><code>font-variant</code></td><td style="text-align:left">指定字体变体。</td></tr><tr><td style="text-align:left"><code>font-weight</code></td><td style="text-align:left">指定文本的字体粗细。</td></tr></tbody></table></div><h4 id="列表项属性-Lists"><a href="#列表项属性-Lists" class="headerlink" title="列表项属性(Lists)"></a>列表项属性(Lists)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>list-style</code></td><td style="text-align:left">定义列表和列表元素的显示样式。</td></tr><tr><td style="text-align:left"><code>list-style-image</code></td><td style="text-align:left">指定用作列表项标记的图像。</td></tr><tr><td style="text-align:left"><code>list-style-position</code></td><td style="text-align:left">指定列表项标记的位置。</td></tr><tr><td style="text-align:left"><code>list-style-type</code></td><td style="text-align:left">指定列表项的标记样式。</td></tr></tbody></table></div><h4 id="边距属性-Margin"><a href="#边距属性-Margin" class="headerlink" title="边距属性(Margin)"></a>边距属性(Margin)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>margin</code></td><td style="text-align:left">在元素的所有四个面上设置边距。</td></tr><tr><td style="text-align:left"><code>margin-bottom</code></td><td style="text-align:left">设置元素的底边距。</td></tr><tr><td style="text-align:left"><code>margin-left</code></td><td style="text-align:left">设置元素的左边距。</td></tr><tr><td style="text-align:left"><code>margin-right</code></td><td style="text-align:left">设置元素的右边距。</td></tr><tr><td style="text-align:left"><code>margin-top</code></td><td style="text-align:left">设置元素的上边距。</td></tr></tbody></table></div><h4 id="多列布局属性-Column"><a href="#多列布局属性-Column" class="headerlink" title="多列布局属性(Column)"></a>多列布局属性(Column)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>column-count</code></td><td style="text-align:left">指定多列元素中的列数。</td></tr><tr><td style="text-align:left"><code>column-fill</code></td><td style="text-align:left">指定如何填充列。</td></tr><tr><td style="text-align:left"><code>column-gap</code></td><td style="text-align:left">指定多列元素中各列之间的间隔。</td></tr><tr><td style="text-align:left"><code>column-rule</code></td><td style="text-align:left">指定在多列元素的每一列之间绘制的直线或“规则”。</td></tr><tr><td style="text-align:left"><code>column-rule-color</code></td><td style="text-align:left">指定在多列布局中的列之间绘制的规则的颜色。</td></tr><tr><td style="text-align:left"><code>column-rule-style</code></td><td style="text-align:left">指定在多列布局中的列之间绘制的规则的样式。</td></tr><tr><td style="text-align:left"><code>column-rule-width</code></td><td style="text-align:left">指定在多列布局中的列之间绘制的规则的宽度。</td></tr><tr><td style="text-align:left"><code>column-span</code></td><td style="text-align:left">指定元素在多列布局中跨越多少列。</td></tr><tr><td style="text-align:left"><code>column-width</code></td><td style="text-align:left">指定多列元素中列的最佳宽度。</td></tr><tr><td style="text-align:left"><code>columns</code></td><td style="text-align:left">用于设置<code>column-width</code>和<code>column-count</code>属性的简写属性。</td></tr></tbody></table></div><h4 id="轮廓属性-Outline"><a href="#轮廓属性-Outline" class="headerlink" title="轮廓属性(Outline)"></a>轮廓属性(Outline)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>outline</code></td><td style="text-align:left">设置元素轮廓的所有四个边的宽度，样式和颜色。</td></tr><tr><td style="text-align:left"><code>outline-color</code></td><td style="text-align:left">设置轮廓的颜色。</td></tr><tr><td style="text-align:left"><code>outline-offset</code></td><td style="text-align:left">设置轮廓和元素边框之间的空间。</td></tr><tr><td style="text-align:left"><code>outline-style</code></td><td style="text-align:left">设置轮廓样式。</td></tr><tr><td style="text-align:left"><code>outline-width</code></td><td style="text-align:left">设置轮廓的宽度。</td></tr></tbody></table></div><h4 id="填充属性-Padding"><a href="#填充属性-Padding" class="headerlink" title="填充属性(Padding)"></a>填充属性(Padding)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>padding</code></td><td style="text-align:left">在元素的所有四个面上设置填充。</td></tr><tr><td style="text-align:left"><code>padding-bottom</code></td><td style="text-align:left">将填充设置为元素的底侧。</td></tr><tr><td style="text-align:left"><code>padding-left</code></td><td style="text-align:left">将填充设置为元素的左侧。</td></tr><tr><td style="text-align:left"><code>padding-right</code></td><td style="text-align:left">将填充设置为元素的右侧。</td></tr><tr><td style="text-align:left"><code>padding-top</code></td><td style="text-align:left">将填充设置为元素的顶部。</td></tr></tbody></table></div><h4 id="打印属性-Print"><a href="#打印属性-Print" class="headerlink" title="打印属性(Print)"></a>打印属性(Print)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>page-break-after</code></td><td style="text-align:left">在元素之后插入分页符。</td></tr><tr><td style="text-align:left"><code>page-break-before</code></td><td style="text-align:left">在元素之前插入分页符。</td></tr><tr><td style="text-align:left"><code>page-break-inside</code></td><td style="text-align:left">在元素内插入分页符。</td></tr></tbody></table></div><h4 id="表属性-Table"><a href="#表属性-Table" class="headerlink" title="表属性(Table)"></a>表属性(Table)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>border-collapse</code></td><td style="text-align:left">指定是连接还是分隔表格单元格边界。</td></tr><tr><td style="text-align:left"><code>border-spacing</code></td><td style="text-align:left">设置相邻表格单元格的边界之间的间距。</td></tr><tr><td style="text-align:left"><code>caption-side</code></td><td style="text-align:left">指定表格标题的位置。</td></tr><tr><td style="text-align:left"><code>empty-cells</code></td><td style="text-align:left">显示或隐藏空表单元格的边框和背景。</td></tr><tr><td style="text-align:left"><code>table-layout</code></td><td style="text-align:left">指定表布局算法。</td></tr></tbody></table></div><h4 id="文字属性-Text"><a href="#文字属性-Text" class="headerlink" title="文字属性(Text)"></a>文字属性(Text)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>direction</code></td><td style="text-align:left">定义文本方向/书写方向。</td></tr><tr><td style="text-align:left"><code>tab-size</code></td><td style="text-align:left">指定制表符的长度。</td></tr><tr><td style="text-align:left"><code>text-align</code></td><td style="text-align:left">设置内联内容的水平对齐方式。</td></tr><tr><td style="text-align:left"><code>text-align-last</code></td><td style="text-align:left">指定当<code>text-align</code>is 时如何对齐块的最后一行或强制换行符之前的行<code>justify</code>。</td></tr><tr><td style="text-align:left"><code>text-decoration</code></td><td style="text-align:left">指定添加到文本的装饰。</td></tr><tr><td style="text-align:left"><code>text-decoration-color</code></td><td style="text-align:left">指定的颜色<code>text-decoration-line</code>。</td></tr><tr><td style="text-align:left"><code>text-decoration-line</code></td><td style="text-align:left">指定将哪种线条装饰添加到元素。</td></tr><tr><td style="text-align:left"><code>text-decoration-style</code></td><td style="text-align:left">指定<code>text-decoration-line</code>属性指定的线条样式</td></tr><tr><td style="text-align:left"><code>text-indent</code></td><td style="text-align:left">缩进文本的第一行。</td></tr><tr><td style="text-align:left"><code>text-justify</code></td><td style="text-align:left">指定当<code>text-align</code>属性设置为时要使用的对正方法<code>justify</code>。</td></tr><tr><td style="text-align:left"><code>text-overflow</code></td><td style="text-align:left">指定当文本内容溢出块容器时将如何显示。</td></tr><tr><td style="text-align:left"><code>text-shadow</code></td><td style="text-align:left">将一个或多个阴影应用于元素的文本内容。</td></tr><tr><td style="text-align:left"><code>text-transform</code></td><td style="text-align:left">转换文本的大小写。</td></tr><tr><td style="text-align:left"><code>line-height</code></td><td style="text-align:left">设置文本行之间的高度。</td></tr><tr><td style="text-align:left"><code>vertical-align</code></td><td style="text-align:left">设置元素相对于当前文本基线的垂直位置。</td></tr><tr><td style="text-align:left"><code>letter-spacing</code></td><td style="text-align:left">设置字母之间的额外间距。</td></tr><tr><td style="text-align:left"><code>word-spacing</code></td><td style="text-align:left">设置单词之间的间距。</td></tr><tr><td style="text-align:left"><code>white-space</code></td><td style="text-align:left">指定如何处理元素内的空白。</td></tr><tr><td style="text-align:left"><code>word-break</code></td><td style="text-align:left">指定如何在单词内换行。</td></tr><tr><td style="text-align:left"><code>word-wrap</code></td><td style="text-align:left">指定在内容超出其容器边界时是否中断单词。</td></tr></tbody></table></div><h4 id="转换属性-Transform"><a href="#转换属性-Transform" class="headerlink" title="转换属性(Transform)"></a>转换属性(Transform)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>backface-visibility</code></td><td style="text-align:left">指定当面对用户时，转换后的元素的“背面”是否可见。</td></tr><tr><td style="text-align:left"><code>perspective</code></td><td style="text-align:left">定义从中查看对象的所有子元素的透视图。</td></tr><tr><td style="text-align:left"><code>perspective-origin</code></td><td style="text-align:left">定义透视图属性的原点（3D空间的消失点）。</td></tr><tr><td style="text-align:left"><code>transform</code></td><td style="text-align:left">将2D或3D变换应用于元素。</td></tr><tr><td style="text-align:left"><code>transform-origin</code></td><td style="text-align:left">定义元素的变换原点。</td></tr><tr><td style="text-align:left"><code>transform-style</code></td><td style="text-align:left">指定如何在3D空间中渲染嵌套元素。</td></tr></tbody></table></div><h4 id="过渡属性-Transition"><a href="#过渡属性-Transition" class="headerlink" title="过渡属性(Transition)"></a>过渡属性(Transition)</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>transition</code></td><td style="text-align:left">定义元素的两种状态之间的过渡。</td></tr><tr><td style="text-align:left"><code>transition-delay</code></td><td style="text-align:left">指定过渡效果何时开始。</td></tr><tr><td style="text-align:left"><code>transition-duration</code></td><td style="text-align:left">指定过渡效果要花费的秒数或毫秒数。</td></tr><tr><td style="text-align:left"><code>transition-property</code></td><td style="text-align:left">指定应将过渡效果应用到的CSS属性的名称。</td></tr><tr><td style="text-align:left"><code>transition-timing-function</code></td><td style="text-align:left">指定过渡效果的速度曲线。</td></tr></tbody></table></div><h4 id="视觉格式属性"><a href="#视觉格式属性" class="headerlink" title="视觉格式属性"></a>视觉格式属性</h4><div class="table-container"><table><thead><tr><th style="text-align:left">属性</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left"><code>display</code></td><td style="text-align:left">指定元素在屏幕上的显示方式。</td></tr><tr><td style="text-align:left"><code>position</code></td><td style="text-align:left">指定如何定位元素。</td></tr><tr><td style="text-align:left"><code>top</code></td><td style="text-align:left">指定所定位元素的上边缘的位置。</td></tr><tr><td style="text-align:left"><code>right</code></td><td style="text-align:left">指定所定位元素的右边缘的位置。</td></tr><tr><td style="text-align:left"><code>bottom</code></td><td style="text-align:left">指定所定位元素底边的位置。</td></tr><tr><td style="text-align:left"><code>left</code></td><td style="text-align:left">指定定位元素左边缘的位置。</td></tr><tr><td style="text-align:left"><code>float</code></td><td style="text-align:left">指定一个框是否应该浮动。</td></tr><tr><td style="text-align:left"><code>clear</code></td><td style="text-align:left">指定相对于浮动元素的元素位置。</td></tr><tr><td style="text-align:left"><code>z-index</code></td><td style="text-align:left">指定定位元素的分层或堆叠顺序。</td></tr><tr><td style="text-align:left"><code>overflow</code></td><td style="text-align:left">指定对溢出元素框的内容的处理。</td></tr><tr><td style="text-align:left"><code>overflow-x</code></td><td style="text-align:left">指定当内容超出元素内容区域的宽度时如何管理内容。</td></tr><tr><td style="text-align:left"><code>overflow-y</code></td><td style="text-align:left">指定当内容超出元素内容区域的高度时如何管理内容。</td></tr><tr><td style="text-align:left"><code>resize</code></td><td style="text-align:left">指定元素是否可由用户调整大小。</td></tr><tr><td style="text-align:left"><code>clip</code></td><td style="text-align:left">定义裁剪区域。</td></tr><tr><td style="text-align:left"><code>visibility</code></td><td style="text-align:left">指定一个元素是否可见。</td></tr><tr><td style="text-align:left"><code>cursor</code></td><td style="text-align:left">指定游标的类型。</td></tr><tr><td style="text-align:left"><code>box-shadow</code></td><td style="text-align:left">将一个或多个阴影应用于元素的框。</td></tr><tr><td style="text-align:left"><code>box-sizing</code></td><td style="text-align:left">更改默认的CSS框模型。</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> 前端 </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python操作符</title>
      <link href="/2024/06/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/symbol/"/>
      <url>/2024/06/14/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/symbol/</url>
      
        <content type="html"><![CDATA[<h1 id="操作符介绍"><a href="#操作符介绍" class="headerlink" title="操作符介绍"></a>操作符介绍</h1><p>[TOC]</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas</title>
      <link href="/2024/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/pandas/"/>
      <url>/2024/06/13/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/pandas/</url>
      
        <content type="html"><![CDATA[<h1 id="pandas库介绍"><a href="#pandas库介绍" class="headerlink" title="pandas库介绍"></a>pandas库介绍</h1><p>[TOC]</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>numpy在向量化计算中表现优异，但在处理更灵活、更复杂的数据中则相对较差。</p><ul><li><h5 id="基于numpy库的pandas库则提供了更快更简单的高级数据结构和操作工具"><a href="#基于numpy库的pandas库则提供了更快更简单的高级数据结构和操作工具" class="headerlink" title="基于numpy库的pandas库则提供了更快更简单的高级数据结构和操作工具"></a>基于numpy库的pandas库则提供了更快更简单的高级数据结构和操作工具</h5></li></ul><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li><strong>表格操作</strong><ul><li>基本操作：表格创建、查询、修改等</li><li>进阶操作：表格排序、索引转换、可视化等</li></ul></li><li><strong>透视表</strong>：分组、聚合、重塑(用于离散数据分析)</li><li><strong>离散化和分位数分析</strong>(连续数据离散化后分析)</li></ul><h3 id="数据载入"><a href="#数据载入" class="headerlink" title="数据载入"></a>数据载入</h3><ul><li>csv:文件后缀.csv<ul><li>一种文本格式表格，默认用分号</li><li>如果表格内数据有逗号，应该用双引号包裹</li></ul></li><li>Excel:文件后缀.xlsx微软office办公</li></ul><h2 id="对象创建"><a href="#对象创建" class="headerlink" title="对象创建"></a>对象创建</h2><h3 id="一、Pandas-Series对象"><a href="#一、Pandas-Series对象" class="headerlink" title="一、Pandas Series对象"></a>一、Pandas Series对象</h3><blockquote><p> <strong>series是带标签数据的一堆数组</strong></p></blockquote><h4 id="series对象的创建"><a href="#series对象的创建" class="headerlink" title="series对象的创建"></a>series对象的创建</h4><h5 id="通用结构："><a href="#通用结构：" class="headerlink" title="通用结构："></a>通用结构：</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.Serives(data、index=index、dtype=dtype)</span><br></pre></td></tr></table></figure><blockquote><p>data:数据、可以是列表、字典或Numpy数组</p><p>index:索引，为可选参数</p><p>dtype:数据类型，为可选参数</p></blockquote><h4 id="1-用列表创建"><a href="#1-用列表创建" class="headerlink" title="1.用列表创建"></a>1.用列表创建</h4><h5 id="1-缺少index时，默认为整数序列"><a href="#1-缺少index时，默认为整数序列" class="headerlink" title="1.缺少index时，默认为整数序列"></a>1.缺少index时，默认为整数序列</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = pd.Series([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613155458265.png" alt="image-20240613155458265"></p><h5 id="2-添加index时"><a href="#2-添加index时" class="headerlink" title="2.添加index时"></a>2.添加index时</h5><blockquote><p>行索引是Index对象</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = pd.Series([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613155704553.png" alt="image-20240613155704553"></p><h6 id="注意：可以设置多个数据类型"><a href="#注意：可以设置多个数据类型" class="headerlink" title="注意：可以设置多个数据类型"></a>注意：可以设置多个数据类型</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = pd.Series([<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613160234271.png" alt="image-20240613160234271"></p><h5 id="3-强制改变数据类型"><a href="#3-强制改变数据类型" class="headerlink" title="3.强制改变数据类型"></a>3.强制改变数据类型</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">data = pd.Series([<span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], index=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;e&#x27;</span>],dtype=<span class="built_in">float</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613160349746.png" alt="image-20240613160349746"></p><h4 id="2-用numpy数组创建"><a href="#2-用numpy数组创建" class="headerlink" title="2.用numpy数组创建"></a>2.用numpy数组创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">x = np.arange(<span class="number">5</span>)</span><br><span class="line">data = pd.Series(x)</span><br><span class="line"><span class="built_in">print</span>(data)</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613160830445.png" alt="image-20240613160830445"></p><h4 id="3-用字典创建"><a href="#3-用字典创建" class="headerlink" title="3.用字典创建"></a>3.用字典创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">population = &#123;</span><br><span class="line">    <span class="string">&#x27;Beijing&#x27;</span>:<span class="number">2156</span></span><br><span class="line">    ,<span class="string">&#x27;Chongqing&#x27;</span>:<span class="number">2182</span></span><br><span class="line">    ,<span class="string">&#x27;shanghai&#x27;</span>:<span class="number">2182</span></span><br><span class="line">&#125;</span><br><span class="line">population = pd.Series(population)</span><br><span class="line"><span class="built_in">print</span>(population)</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613161144078.png" alt="image-20240613161144078"></p><h6 id="注：此时也可以使用index，当字典存在会帅选，不存在则显示NaN"><a href="#注：此时也可以使用index，当字典存在会帅选，不存在则显示NaN" class="headerlink" title="注：此时也可以使用index，当字典存在会帅选，不存在则显示NaN"></a>注：此时也可以使用index，当字典存在会帅选，不存在则显示NaN</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">population = &#123;</span><br><span class="line">    <span class="string">&#x27;Beijing&#x27;</span>:<span class="number">2156</span></span><br><span class="line">    ,<span class="string">&#x27;Chongqing&#x27;</span>:<span class="number">2182</span></span><br><span class="line">    ,<span class="string">&#x27;shanghai&#x27;</span>:<span class="number">2182</span></span><br><span class="line">&#125;</span><br><span class="line">population = pd.Series(population, index=[<span class="string">&#x27;Beijing&#x27;</span>,<span class="string">&#x27;Chongqing&#x27;</span>,<span class="string">&#x27;shanghai&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(population)</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613161412897.png" alt="image-20240613161412897"></p><h4 id="4-data为标量时"><a href="#4-data为标量时" class="headerlink" title="4.data为标量时"></a>4.data为标量时</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">c=pd.Series(<span class="number">5</span>, index=[<span class="string">&quot;a&quot;</span>, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;c&quot;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613161630994.png" alt="image-20240613161630994"></p><h3 id="二、Pandas-DataFrame对象"><a href="#二、Pandas-DataFrame对象" class="headerlink" title="二、Pandas DataFrame对象"></a>二、Pandas DataFrame对象</h3><p>DataFrame是带标签数据的多维数组</p><h4 id="DataFrame对象的创建"><a href="#DataFrame对象的创建" class="headerlink" title="DataFrame对象的创建"></a>DataFrame对象的创建</h4><h5 id="通用结构"><a href="#通用结构" class="headerlink" title="通用结构:"></a>通用结构:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.Dataframe(data,index=index,columns=columns)</span><br></pre></td></tr></table></figure><blockquote><p>data:数据，可以是列表，字典或Numpy数组</p><p>index:索引，为可选参数</p><p>columns:列标签，为可选参数</p></blockquote><h5 id="1-通过Series对象创建"><a href="#1-通过Series对象创建" class="headerlink" title="1.通过Series对象创建"></a>1.通过Series对象创建</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line">population = &#123;</span><br><span class="line">    <span class="string">&#x27;Beijing&#x27;</span>:<span class="number">2156</span></span><br><span class="line">    ,<span class="string">&#x27;Chongqing&#x27;</span>:<span class="number">2182</span></span><br><span class="line">    ,<span class="string">&#x27;shanghai&#x27;</span>:<span class="number">2182</span></span><br><span class="line">&#125;</span><br><span class="line">population = pd.Series(population, index=[<span class="string">&#x27;Beijing&#x27;</span>,<span class="string">&#x27;Chongqing&#x27;</span>,<span class="string">&#x27;shanghai&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(population)</span><br><span class="line"><span class="built_in">print</span>(pd.DataFrame(population))</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613162820331.png" alt="image-20240613162820331"></p><p>也可取名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(pd.DataFrame(population,columns=[<span class="string">&#x27;population&#x27;</span>]))</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613162944306.png" alt="image-20240613162944306"></p><h5 id="2-通过Series对象字典创建"><a href="#2-通过Series对象字典创建" class="headerlink" title="2.通过Series对象字典创建"></a>2.通过Series对象字典创建</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">population = &#123;</span><br><span class="line">    <span class="string">&#x27;Beijing&#x27;</span>:<span class="number">2156</span></span><br><span class="line">    ,<span class="string">&#x27;Chongqing&#x27;</span>:<span class="number">2182</span></span><br><span class="line">    ,<span class="string">&#x27;shanghai&#x27;</span>:<span class="number">2182</span></span><br><span class="line">&#125;</span><br><span class="line">GDP = &#123;</span><br><span class="line">    <span class="string">&#x27;Beijing&#x27;</span>:<span class="number">2000</span></span><br><span class="line">    ,<span class="string">&#x27;Chongqing&#x27;</span>:<span class="number">2100</span></span><br><span class="line">    ,<span class="string">&#x27;shanghai&#x27;</span>:<span class="number">2180</span></span><br><span class="line">&#125;</span><br><span class="line">population = pd.Series(population, index=[<span class="string">&#x27;Beijing&#x27;</span>,<span class="string">&#x27;Chongqing&#x27;</span>,<span class="string">&#x27;shanghai&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(pd.DataFrame(&#123;<span class="string">&#x27;population&#x27;</span>:population</span><br><span class="line">              ,<span class="string">&#x27;GDP&#x27;</span>:GDP&#125;))</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101424507.png" alt="image-20240628101424507"></p><h6 id="注：数量不够的会自动补齐"><a href="#注：数量不够的会自动补齐" class="headerlink" title="注：数量不够的会自动补齐"></a>注：数量不够的会自动补齐</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(pd.DataFrame(&#123;<span class="string">&#x27;population&#x27;</span>:population</span><br><span class="line">                ,<span class="string">&#x27;GDP&#x27;</span>:GDP</span><br><span class="line">                ,<span class="string">&#x27;country&#x27;</span>:<span class="string">&quot;China&quot;</span>&#125;))</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101058015.png" alt="image-20240628101058015"></p><h5 id="3-通过字典列表对象创建"><a href="#3-通过字典列表对象创建" class="headerlink" title="3.通过字典列表对象创建"></a>3.通过字典列表对象创建</h5><ul><li>字典索引作为index，字典键作为column</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">data = [&#123;<span class="string">&quot;a&quot;</span>: i,<span class="string">&quot;b&quot;</span>: <span class="number">2</span>*i&#125; <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>)]</span><br><span class="line">pd.DataFrame(data)</span><br></pre></td></tr></table></figure><ul><li>不存在的键会默认为NaN</li></ul><h5 id="4-通过Numpy二维数组创建"><a href="#4-通过Numpy二维数组创建" class="headerlink" title="4.通过Numpy二维数组创建"></a>4.通过Numpy二维数组创建</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(np.random.randint(<span class="number">10</span>,size=(<span class="number">3</span>,<span class="number">2</span>)),columns=[<span class="string">&quot;foo&quot;</span>,<span class="string">&quot;bar&quot;</span>],index=[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>])</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240616100748738.png" alt="image-20240616100748738"></p><h4 id="DataFrame性质"><a href="#DataFrame性质" class="headerlink" title="DataFrame性质"></a>DataFrame性质</h4><h5 id="1-属性"><a href="#1-属性" class="headerlink" title="1.属性"></a>1.属性</h5><h6 id="1-df-values返回numpy数组表示的数据"><a href="#1-df-values返回numpy数组表示的数据" class="headerlink" title="1.df.values返回numpy数组表示的数据"></a>1.df.values返回numpy数组表示的数据</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.values</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101538241.png" alt="image-20240628101538241"></p><h6 id="2-df-index返回行索引项"><a href="#2-df-index返回行索引项" class="headerlink" title="2.df.index返回行索引项"></a>2.df.index返回行索引项</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.index</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101605848.png" alt="image-20240628101605848"></p><h6 id="3-df-columns返回列索引"><a href="#3-df-columns返回列索引" class="headerlink" title="3.df.columns返回列索引"></a>3.df.columns返回列索引</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.columns</span><br></pre></td></tr></table></figure><h6 id="4-df-shape形状"><a href="#4-df-shape形状" class="headerlink" title="4.df.shape形状"></a>4.df.shape形状</h6><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101656282.png" alt="image-20240628101656282"></p><h6 id="5-df-size大小"><a href="#5-df-size大小" class="headerlink" title="5.df.size大小"></a>5.df.size大小</h6><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101715647.png" alt="image-20240628101715647"></p><h6 id="6-df-dtypes返回每列数据类型"><a href="#6-df-dtypes返回每列数据类型" class="headerlink" title="6.df.dtypes返回每列数据类型"></a>6.df.dtypes返回每列数据类型</h6><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240628101736984.png" alt="image-20240628101736984"></p><h6 id="7-df-index-name-索引对象名"><a href="#7-df-index-name-索引对象名" class="headerlink" title="7.df.index.name:索引对象名"></a>7.df.index.name:索引对象名</h6><h5 id="2-索引"><a href="#2-索引" class="headerlink" title="2.索引"></a>2.索引</h5><blockquote><p><strong>储存轴标签的数据结构是Index</strong></p><p><strong>DataFrame，行索引和列索引都是Indes对象</strong></p></blockquote><h5 id="3-获取值"><a href="#3-获取值" class="headerlink" title="3.获取值"></a>3.获取值</h5><blockquote><h6 id="DataFrame和Series的关系"><a href="#DataFrame和Series的关系" class="headerlink" title="DataFrame和Series的关系"></a>DataFrame和Series的关系</h6><p><strong>Dataframe每一列都是Series，Dataframe每一行都是Series</strong></p></blockquote><h6 id="1-获取列"><a href="#1-获取列" class="headerlink" title="1.获取列"></a>1.获取列</h6><ul><li>字典式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[<span class="string">&quot;pop&quot;</span>]//获取pop一列的数据</span><br></pre></td></tr></table></figure><ul><li>对象属性式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[[<span class="string">&quot;GDP&quot;</span>,<span class="string">&quot;pop&quot;</span>]]//获取GDP与pop两列的数据</span><br></pre></td></tr></table></figure><h6 id="2-绝对索引获取行"><a href="#2-绝对索引获取行" class="headerlink" title="2.绝对索引获取行"></a>2.绝对索引获取行</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.loc[<span class="string">&quot;BeiJing&quot;</span>]//获取BeiJing这一行的数据</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.loc[[<span class="string">&quot;BeiJing&quot;</span>,<span class="string">&quot;HangZhou&quot;</span>]]//获取多行数据</span><br></pre></td></tr></table></figure><h6 id="3-相对索引获取行"><a href="#3-相对索引获取行" class="headerlink" title="3.相对索引获取行"></a>3.相对索引获取行</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data.iloc[<span class="number">0</span>]//取第<span class="number">0</span>行数据</span><br></pre></td></tr></table></figure><h6 id="4-Series对象索引"><a href="#4-Series对象索引" class="headerlink" title="4.Series对象索引"></a>4.Series对象索引</h6><h4 id="缺失值处理"><a href="#缺失值处理" class="headerlink" title="缺失值处理"></a>缺失值处理</h4><h4 id="合并数据"><a href="#合并数据" class="headerlink" title="合并数据"></a>合并数据</h4><p>构造一个生产DataFrame的函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">def make_def(cols, ind):</span><br><span class="line">&quot;一个简单的DataFrame&quot;</span><br><span class="line">data = &#123;c : [str(c)+str(i)for i in ind] for c in cols&#125;</span><br><span class="line">print(data)</span><br><span class="line">return pd.DataFrame(data,ind)</span><br></pre></td></tr></table></figure><p>生成：</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th></tr></thead><tbody><tr><td style="text-align:center">0</td><td style="text-align:center">A0</td><td style="text-align:center">B0</td><td style="text-align:center">C0</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">A1</td><td style="text-align:center">B1</td><td style="text-align:center">C1</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">A2</td><td style="text-align:center">B2</td><td style="text-align:center">C2</td></tr></tbody></table></div><h5 id="1-垂直合并"><a href="#1-垂直合并" class="headerlink" title="1.垂直合并"></a>1.垂直合并</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df_1 = make_df(&quot;AB&quot;,[1,2])</span><br><span class="line">df_2 = make_df(&quot;AB&quot;,[3,4])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([df_1,df_2])</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">A</th><th style="text-align:center">B</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">A1</td><td style="text-align:center">B1</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">A2</td><td style="text-align:center">B2</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">A3</td><td style="text-align:center">B3</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">A4</td><td style="text-align:center">B4</td></tr></tbody></table></div><p>添加参数ignore_index=True时重置标签</p><h5 id="2-水平合并"><a href="#2-水平合并" class="headerlink" title="2.水平合并"></a>2.水平合并</h5>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python字符串类型</title>
      <link href="/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/pythonstring/"/>
      <url>/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/pythonstring/</url>
      
        <content type="html"><![CDATA[<h1 id="python字符串类型"><a href="#python字符串类型" class="headerlink" title="python字符串类型"></a>python字符串类型</h1><p>[TOC]</p><h2 id="1-字符串"><a href="#1-字符串" class="headerlink" title="1.字符串"></a>1.字符串</h2><h3 id="用””或’’括起来的任意字符"><a href="#用””或’’括起来的任意字符" class="headerlink" title="用””或’’括起来的任意字符"></a>用””或’’括起来的任意字符</h3><h4 id="双中有单"><a href="#双中有单" class="headerlink" title="双中有单"></a>双中有单</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#x27;python&#x27;&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="单中有双"><a href="#单中有双" class="headerlink" title="单中有双"></a>单中有双</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&quot;python&quot;&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="双中有双，单中有单"><a href="#双中有双，单中有单" class="headerlink" title="双中有双，单中有单"></a>双中有双，单中有单</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\python\ is good&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="转义符可以用来换行"><a href="#转义符可以用来换行" class="headerlink" title="转义符可以用来换行"></a>转义符可以用来换行</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="string">&quot;pyth\</span></span><br><span class="line"><span class="string">n&quot;</span></span><br></pre></td></tr></table></figure><h2 id="2-字符串的索引"><a href="#2-字符串的索引" class="headerlink" title="2.字符串的索引"></a>2.字符串的索引</h2><h3 id="正向索引"><a href="#正向索引" class="headerlink" title="正向索引"></a>正向索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;My name is Peppa pig&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>]) //M</span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">1</span>]) //y</span><br></pre></td></tr></table></figure><h3 id="反向索引"><a href="#反向索引" class="headerlink" title="反向索引"></a>反向索引</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(s[-<span class="number">1</span>]) //g</span><br></pre></td></tr></table></figure><h2 id="3-字符串的切片"><a href="#3-字符串的切片" class="headerlink" title="3.字符串的切片"></a>3.字符串的切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;python&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">3</span>:<span class="number">1</span>]) \\pyt,<span class="number">1</span>可以省略</span><br><span class="line"><span class="built_in">print</span>(s[<span class="number">0</span>:<span class="number">3</span>:<span class="number">2</span>]) \\pt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Numpy</title>
      <link href="/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/Numpy/"/>
      <url>/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/Numpy/</url>
      
        <content type="html"><![CDATA[<h1 id="Numpy库介绍"><a href="#Numpy库介绍" class="headerlink" title="Numpy库介绍"></a>Numpy库介绍</h1><p>[TOC]<br>Numpy库数据基本类型</p><div class="table-container"><table><thead><tr><th>bool_</th><th>布尔型数据类型（True 或者 False）</th></tr></thead><tbody><tr><td>int_</td><td>默认的整数类型（类似于 C 语言中的 long，int32 或 int64）</td></tr><tr><td>intc</td><td>与 C 的 int 类型一样，一般是 int32 或 int 64</td></tr><tr><td>intp</td><td>用于索引的整数类型（类似于 C 的 ssize_t，一般情况下仍然是 int32 或 int64）</td></tr><tr><td>int8</td><td>字节（-128 to 127）</td></tr><tr><td>int16</td><td>整数（-32768 to 32767）</td></tr><tr><td>int32</td><td>整数（-2147483648 to 2147483647）</td></tr><tr><td>int64</td><td>整数（-9223372036854775808 to 9223372036854775807）</td></tr><tr><td>uint8</td><td>无符号整数（0 to 255）</td></tr></tbody></table></div><h2 id="一、numpy数组的创建"><a href="#一、numpy数组的创建" class="headerlink" title="一、numpy数组的创建"></a>一、numpy数组的创建</h2><h3 id="arange格式"><a href="#arange格式" class="headerlink" title="arange格式"></a>arange格式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.arange(start, stop, step, dtype)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>start</code></td><td>起始值，默认为<code>0</code></td></tr><tr><td><code>stop</code></td><td>终止值（不包含）</td></tr><tr><td><code>step</code></td><td>步长，默认为<code>1</code></td></tr><tr><td><code>dtype</code></td><td>返回<code>ndarray</code>的数据类型，如果没有提供，则会使用输入数据的类型。</td></tr></tbody></table></div><h3 id="从列表创建"><a href="#从列表创建" class="headerlink" title="从列表创建"></a>从列表创建</h3><h4 id="1-一维数组"><a href="#1-一维数组" class="headerlink" title="1.一维数组"></a>1.一维数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([1,2,3,4,5],dtype=&quot;数据类型&quot;)</span><br></pre></td></tr></table></figure><h4 id="2-二维数组"><a href="#2-二维数组" class="headerlink" title="2.二维数组"></a>2.二维数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([[1,2,3],</span><br><span class="line">[4,5,6],</span><br><span class="line">[7,8,9]</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h3 id="linspace格式创建"><a href="#linspace格式创建" class="headerlink" title="linspace格式创建"></a>linspace格式创建</h3><p><strong>numpy.linspace 函数用于创建一个一维数组，数组是一个等差数列构成的，格式如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, retstep=<span class="literal">False</span>, dtype=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>start</code></td><td>序列的起始值</td></tr><tr><td><code>stop</code></td><td>序列的终止值，如果<code>endpoint</code>为<code>true</code>，该值包含于数列中</td></tr><tr><td><code>num</code></td><td>要生成的等步长的样本数量，默认为<code>50</code></td></tr><tr><td><code>endpoint</code></td><td>该值为 <code>true</code> 时，数列中包含<code>stop</code>值，反之不包含，默认是True。</td></tr><tr><td><code>retstep</code></td><td>如果为 True 时，生成的数组中会显示间距，反之不显示。</td></tr><tr><td><code>dtype</code></td><td><code>ndarray</code> 的数据类型</td></tr></tbody></table></div><h4 id="均匀分配数组"><a href="#均匀分配数组" class="headerlink" title="均匀分配数组"></a>均匀分配数组</h4><p>该数组平均分配0~1，平均分配4份</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(0,1,4)</span><br></pre></td></tr></table></figure><h3 id="logspace格式创建"><a href="#logspace格式创建" class="headerlink" title="logspace格式创建"></a>logspace格式创建</h3><p><strong>numpy.logspace 函数用于创建一个于等比数列。格式如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.logspace(start, stop, num=<span class="number">50</span>, endpoint=<span class="literal">True</span>, base=<span class="number">10.0</span>, dtype=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>start</code></td><td>序列的起始值为：base ** start</td></tr><tr><td><code>stop</code></td><td>序列的终止值为：base ** stop。如果<code>endpoint</code>为<code>true</code>，该值包含于数列中</td></tr><tr><td><code>num</code></td><td>要生成的等步长的样本数量，默认为<code>50</code></td></tr><tr><td><code>endpoint</code></td><td>该值为 <code>true</code> 时，数列中中包含<code>stop</code>值，反之不包含，默认是True。</td></tr><tr><td><code>base</code></td><td>对数 log 的底数。</td></tr><tr><td><code>dtype</code></td><td><code>ndarray</code> 的数据类型</td></tr></tbody></table></div><h4 id="等比数列数组"><a href="#等比数列数组" class="headerlink" title="等比数列数组"></a>等比数列数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.logspace(0,9,10)</span><br></pre></td></tr></table></figure><h3 id="zeros格式创建"><a href="#zeros格式创建" class="headerlink" title="zeros格式创建"></a>zeros格式创建</h3><p><strong>创建指定大小的数组，数组元素以 0 来填充：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.zeros(shape, dtype = float, order = &#x27;C&#x27;)</span><br></pre></td></tr></table></figure><p>参数说明：</p><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">shape</td><td style="text-align:left">数组形状</td></tr><tr><td style="text-align:left">dtype</td><td style="text-align:left">数据类型，可选</td></tr><tr><td style="text-align:left">order</td><td style="text-align:left">‘C’ 用于 C 的行数组，或者 ‘F’ 用于 FORTRAN 的列数组</td></tr></tbody></table></div><h4 id="长度为5，值都为0的数组"><a href="#长度为5，值都为0的数组" class="headerlink" title="长度为5，值都为0的数组"></a>长度为5，值都为0的数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.zeros(5,dtype=int)</span><br></pre></td></tr></table></figure><h3 id="ones格式创建"><a href="#ones格式创建" class="headerlink" title="ones格式创建"></a>ones格式创建</h3><p>创建指定形状的数组，数组元素以 1 来填充：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.ones(shape, dtype = None, order = &#x27;C&#x27;)</span><br></pre></td></tr></table></figure><p>参数说明：</p><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">shape</td><td style="text-align:left">数组形状</td></tr><tr><td style="text-align:left">dtype</td><td style="text-align:left">数据类型，可选</td></tr><tr><td style="text-align:left">order</td><td style="text-align:left">‘C’ 用于 C 的行数组，或者 ‘F’ 用于 FORTRAN 的列数组</td></tr></tbody></table></div><h4 id="2-2-4的浮点型数组"><a href="#2-2-4的浮点型数组" class="headerlink" title="(2)2*4的浮点型数组"></a>(2)2*4的浮点型数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.ones((2,4),dtype=float)</span><br></pre></td></tr></table></figure><h3 id="full格式创建"><a href="#full格式创建" class="headerlink" title="full格式创建"></a>full格式创建</h3><p>填充一个指定格式的列表</p><h4 id="用法"><a href="#用法" class="headerlink" title="用法:"></a>用法:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.full(shape, fill_value, dtype=None, order=&#x27;C&#x27;, *, like=None)</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>shape</td><td>数组形状</td></tr><tr><td>fill_value</td><td>标量或类似数组</td></tr><tr><td>dtype</td><td>数据类型，可选</td></tr><tr><td>order</td><td>‘C’ 用于 C 的行数组，或者 ‘F’ 用于 FORTRAN 的列数组</td></tr><tr><td>like</td><td>允许创建非 NumPy 数组的引用对象</td></tr></tbody></table></div><h4 id="3-5的数组"><a href="#3-5的数组" class="headerlink" title="3*5的数组"></a>3*5的数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.full((3,5),8.8)</span><br></pre></td></tr></table></figure><h2 id="二、从头创建数组"><a href="#二、从头创建数组" class="headerlink" title="二、从头创建数组"></a>二、从头创建数组</h2><h4 id="4-3-3的单位矩阵"><a href="#4-3-3的单位矩阵" class="headerlink" title="(4)3*3的单位矩阵"></a>(4)3*3的单位矩阵</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.eye(3)</span><br></pre></td></tr></table></figure><h4 id="8-随机数构成的数组"><a href="#8-随机数构成的数组" class="headerlink" title="(8)随机数构成的数组"></a>(8)随机数构成的数组</h4><p>3*3的在0~1之间分布</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.random((3,3))</span><br></pre></td></tr></table></figure><h4 id="9-有均值、标准差的随机数构成的数组"><a href="#9-有均值、标准差的随机数构成的数组" class="headerlink" title="(9)有均值、标准差的随机数构成的数组"></a>(9)有均值、标准差的随机数构成的数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.normal(0,1,(3,3))</span><br></pre></td></tr></table></figure><h4 id="10-3-3的，在-0-10-之间随机整数构成的数组"><a href="#10-3-3的，在-0-10-之间随机整数构成的数组" class="headerlink" title="(10)3*3的，在[0,10)之间随机整数构成的数组"></a>(10)3*3的，在[0,10)之间随机整数构成的数组</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(0,10,size = (3,3))</span><br></pre></td></tr></table></figure><h4 id="11-随机重排列"><a href="#11-随机重排列" class="headerlink" title="(11)随机重排列"></a>(11)随机重排列</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = np.array([10,20,30,40])</span><br><span class="line">np.random.permutation(x)//不修改原列表</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.shuffle(x)//修改原列表</span><br></pre></td></tr></table></figure><h4 id="12-随机采样"><a href="#12-随机采样" class="headerlink" title="(12)随机采样"></a>(12)随机采样</h4><ul><li>按指定形状采样</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = np.arange(10,25,dtype = float)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice(x,size=(4,3))</span><br></pre></td></tr></table></figure><ul><li>按概率采样</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.choice(x,size=(4,3),p=x/np.sum(x))//</span><br></pre></td></tr></table></figure><h3 id="三、数组的性质"><a href="#三、数组的性质" class="headerlink" title="三、数组的性质"></a>三、数组的性质</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x = np.random.randint(10,size=(3,4))</span><br></pre></td></tr></table></figure><h4 id="1-数组的形状shape"><a href="#1-数组的形状shape" class="headerlink" title="1.数组的形状shape"></a>1.数组的形状shape</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.shape</span><br></pre></td></tr></table></figure><h4 id="2-数组的维度ndim"><a href="#2-数组的维度ndim" class="headerlink" title="2.数组的维度ndim"></a>2.数组的维度ndim</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.ndim</span><br></pre></td></tr></table></figure><h4 id="3-数组的大小size"><a href="#3-数组的大小size" class="headerlink" title="3.数组的大小size"></a>3.数组的大小size</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x.size</span><br></pre></td></tr></table></figure><h3 id="四、数组的索引"><a href="#四、数组的索引" class="headerlink" title="四、数组的索引"></a>四、数组的索引</h3><h4 id="1-一维数组的索引"><a href="#1-一维数组的索引" class="headerlink" title="1.一维数组的索引"></a>1.一维数组的索引</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1 = np.arange(10)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1[0]</span><br></pre></td></tr></table></figure><h4 id="2-二维数组的索引"><a href="#2-二维数组的索引" class="headerlink" title="2.二维数组的索引"></a>2.二维数组的索引</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x2[0][2]</span><br></pre></td></tr></table></figure><p><strong>注：numpy数组的数据类型是固定的，向一个整数数组中加一个浮点数，会向下取整</strong></p><h2 id="五、数组的切片"><a href="#五、数组的切片" class="headerlink" title="五、数组的切片"></a>五、数组的切片</h2><h4 id="1-一维数组—跟列表一样"><a href="#1-一维数组—跟列表一样" class="headerlink" title="1.一维数组—跟列表一样"></a>1.一维数组—跟列表一样</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1 = np.arrange(<span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1[:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1[<span class="number">3</span>:]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1[::-<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h4 id="2-多维数组—以二维数组为例"><a href="#2-多维数组—以二维数组为例" class="headerlink" title="2.多维数组—以二维数组为例"></a>2.多维数组—以二维数组为例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1[范围<span class="number">1</span>,范围<span class="number">2</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 库介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python数据类型</title>
      <link href="/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/pythonbasic/"/>
      <url>/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/pythonbasic/</url>
      
        <content type="html"><![CDATA[<h1 id="python数据类型"><a href="#python数据类型" class="headerlink" title="python数据类型"></a>python数据类型</h1><p>[TOC]</p><h2 id="1-数据类型的组成"><a href="#1-数据类型的组成" class="headerlink" title="1.数据类型的组成"></a>1.数据类型的组成</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br></pre></td></tr></table></figure><h3 id="1-整数—不同进制的转换"><a href="#1-整数—不同进制的转换" class="headerlink" title="(1)整数—不同进制的转换"></a>(1)整数—不同进制的转换</h3><p>默认输入十进制</p><ul><li><h6 id="注：二进制0b、八进制0o、十六进制0x"><a href="#注：二进制0b、八进制0o、十六进制0x" class="headerlink" title="注：二进制0b、八进制0o、十六进制0x"></a>注：二进制0b、八进制0o、十六进制0x</h6></li></ul><h4 id="十进制与其他进制的转换"><a href="#十进制与其他进制的转换" class="headerlink" title="十进制与其他进制的转换"></a>十进制与其他进制的转换</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">bin</span>(<span class="number">16</span>)</span><br><span class="line">b = <span class="built_in">oct</span>(<span class="number">16</span>)</span><br><span class="line">c = <span class="built_in">hex</span>(<span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(a,b,c)</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240613165329877.png" alt="image-20240613165329877"></p><ul><li><h6 id="注：上述转化后均为字符串型"><a href="#注：上述转化后均为字符串型" class="headerlink" title="注：上述转化后均为字符串型"></a>注：上述转化后均为字符串型</h6></li></ul><h4 id="其他进制转换成十进制"><a href="#其他进制转换成十进制" class="headerlink" title="其他进制转换成十进制"></a>其他进制转换成十进制</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d = <span class="built_in">int</span>(a,<span class="number">2</span>)</span><br><span class="line">e = <span class="built_in">int</span>(b,<span class="number">8</span>)</span><br></pre></td></tr></table></figure><h3 id="2-浮点数—不确定性"><a href="#2-浮点数—不确定性" class="headerlink" title="(2)浮点数—不确定性"></a>(2)浮点数—不确定性</h3><p>不确定小数问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">0.1</span>+<span class="number">0.2</span>)</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240614121041171.png" alt="image-20240614121041171"></p><ul><li><h6 id="注-计算机采用二进制小数来表示小数部分"><a href="#注-计算机采用二进制小数来表示小数部分" class="headerlink" title="注:计算机采用二进制小数来表示小数部分"></a>注:计算机采用二进制小数来表示小数部分</h6></li><li><h6 id="部分小数不能完全用二进制小数表示"><a href="#部分小数不能完全用二进制小数表示" class="headerlink" title="部分小数不能完全用二进制小数表示"></a>部分小数不能完全用二进制小数表示</h6></li><li><h6 id="通常情况下不会影响精度"><a href="#通常情况下不会影响精度" class="headerlink" title="通常情况下不会影响精度"></a>通常情况下不会影响精度</h6></li></ul><p>四舍五入获取精度解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b = roud(a,<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(b)</span><br></pre></td></tr></table></figure><h3 id="3-复数—a-bj"><a href="#3-复数—a-bj" class="headerlink" title="(3)复数—a+bj"></a>(3)复数—a+bj</h3><p>j可大写小写</p><h2 id="2-数学运算操作符"><a href="#2-数学运算操作符" class="headerlink" title="2.数学运算操作符"></a>2.数学运算操作符</h2><h4 id="1-加减乘除"><a href="#1-加减乘除" class="headerlink" title="1.加减乘除 +-*/"></a>1.加减乘除 +-*/</h4><h4 id="2-取反"><a href="#2-取反" class="headerlink" title="2.取反 -"></a>2.取反 -</h4><h4 id="3-乘方运算"><a href="#3-乘方运算" class="headerlink" title="3.乘方运算 **"></a>3.乘方运算 **</h4><h4 id="4-整数商-和模运算"><a href="#4-整数商-和模运算" class="headerlink" title="4.整数商// 和模运算%"></a>4.整数商// 和模运算%</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">13</span>//<span class="number">5</span> <span class="comment">#2</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">13</span>%<span class="number">5</span> <span class="comment">#3</span></span><br></pre></td></tr></table></figure><h5 id="几点说明"><a href="#几点说明" class="headerlink" title="几点说明"></a>几点说明</h5><ul><li>整数与浮点数运算为浮点数</li><li>除法运算为浮点数</li></ul><h2 id="3-数字运算操作函数"><a href="#3-数字运算操作函数" class="headerlink" title="3.数字运算操作函数"></a>3.数字运算操作函数</h2><h4 id="1-求绝对值-abs"><a href="#1-求绝对值-abs" class="headerlink" title="1.求绝对值 abs()"></a>1.求绝对值 abs()</h4><h4 id="2-求幕次方-pow"><a href="#2-求幕次方-pow" class="headerlink" title="2.求幕次方 pow()"></a>2.求幕次方 pow()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">5</span>)<span class="comment">#等价于2**5</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>)<span class="comment">#等价于2**5%3</span></span><br></pre></td></tr></table></figure><h4 id="3-四舍五入-round-x-n"><a href="#3-四舍五入-round-x-n" class="headerlink" title="3.四舍五入 round(x,n)"></a>3.四舍五入 round(x,n)</h4><p>默认四舍五入为整数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">round</span>(<span class="number">1.612</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h4 id="4-整数商和模运算-divmod-x-y"><a href="#4-整数商和模运算-divmod-x-y" class="headerlink" title="4.整数商和模运算 divmod(x,y)"></a>4.整数商和模运算 divmod(x,y)</h4><p>等价于返回二元元组(x//y,x%y)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">divmod</span>(<span class="number">13</span>,<span class="number">5</span>)//(<span class="number">2</span>,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h4 id="5-序列最大-最小值-max-min"><a href="#5-序列最大-最小值-max-min" class="headerlink" title="5.序列最大/最小值 max() min()"></a>5.序列最大/最小值 max() min()</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">max</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">5</span>)//<span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">3</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">max</span>(a))//<span class="number">9</span></span><br></pre></td></tr></table></figure><h4 id="6-求和sum-x"><a href="#6-求和sum-x" class="headerlink" title="6.求和sum(x)"></a>6.求和sum(x)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]))//<span class="number">45</span></span><br></pre></td></tr></table></figure><h4 id="7-借助科学计算库-math-scipy-numpy"><a href="#7-借助科学计算库-math-scipy-numpy" class="headerlink" title="7.借助科学计算库 math\scipy\numpy"></a>7.借助科学计算库 math\scipy\numpy</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.exp(<span class="number">1</span>)) //指数运算 e^x</span><br><span class="line"><span class="built_in">print</span>(math.log2(<span class="number">2</span>)) //对数运算</span><br><span class="line"><span class="built_in">print</span>(math.sqrt(<span class="number">4</span>)) //开平方运算 等价于<span class="number">4</span>^<span class="number">0.5</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">np.mean(a) //求均值</span><br><span class="line">np.media(a) //求中位数</span><br><span class="line">np.sta(a) //求标准差</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python类与对象</title>
      <link href="/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/python%20class/"/>
      <url>/2024/06/13/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%9F%BA%E7%A1%80/python%20class/</url>
      
        <content type="html"><![CDATA[<h1 id="python类与对象"><a href="#python类与对象" class="headerlink" title="python类与对象"></a>python类与对象</h1><p>[toc]</p><h2 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h2><p><strong>面向对象设计</strong>：使用对象进行程序设计，实现代码复用和设计复用，使软件开发更高效快捷。</p><p><strong>特性：封装、继承、多态</strong></p><h2 id="二、类和对象"><a href="#二、类和对象" class="headerlink" title="二、类和对象"></a>二、类和对象</h2><h3 id="类和对象的概念"><a href="#类和对象的概念" class="headerlink" title="类和对象的概念"></a>类和对象的概念</h3><ul><li><p><strong>类的概念：是一种对象的模板和数据类型，它定义了对象的属性(数据、变量)，并提供用于初始化对象的初始化程序和操作这些属性的方法(函数)。</strong></p></li><li><p><strong>对象的概念：是类的一个实例，使用构造方法来创建一个对象，使用圆点运算符(.)通过引用方法和变量来访问对象的成员。</strong></p></li></ul><h3 id="类的定义"><a href="#类的定义" class="headerlink" title="类的定义"></a>类的定义</h3><p>python中使用class关键字来定义类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Classname</span>:</span><br><span class="line">    initializer <span class="comment">#初始化</span></span><br><span class="line">    method <span class="comment">#定义方法</span></span><br></pre></td></tr></table></figure><p>例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, mname, mnumber</span>): <span class="comment">#构造方法，创建对象</span></span><br><span class="line">        <span class="variable language_">self</span>.name=mname <span class="comment">#定义成员变量</span></span><br><span class="line">        <span class="variable language_">self</span>.number=mnumber</span><br><span class="line">        <span class="variable language_">self</span>.Cource_Grade=&#123;&#125;</span><br><span class="line">        <span class="variable language_">self</span>.GPA=<span class="number">0</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getInfo</span>(<span class="params">self</span>): <span class="comment">#获取姓名和学号方法</span></span><br><span class="line"><span class="built_in">print</span>(<span class="variable language_">self</span>.name,<span class="variable language_">self</span>.number)</span><br><span class="line"></span><br><span class="line">s1 = Student(<span class="string">&quot;wang&quot;</span>,<span class="string">&quot;317000010&quot;</span>) <span class="comment">#创建s1对象</span></span><br><span class="line">s1.getinfo()</span><br><span class="line">s2 = Student(<span class="string">&quot;zhang&quot;</span>,<span class="string">&quot;3170000110&quot;</span>) <span class="comment">#创建s2对象</span></span><br><span class="line">s2.getinfo()</span><br></pre></td></tr></table></figure><p><strong>self:表示对象本身(必须)</strong></p><h4 id="访问对象"><a href="#访问对象" class="headerlink" title="访问对象"></a>访问对象</h4><ul><li><strong>访问数据</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1=Student(<span class="string">&quot;Wang&quot;</span>,<span class="string">&quot;31000010&quot;</span>)</span><br><span class="line">s1.name</span><br></pre></td></tr></table></figure><ul><li><strong>调用方法</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s2=Student(<span class="string">&quot;Zhang&quot;</span>,<span class="string">&quot;31000011&quot;</span>)</span><br><span class="line">s2.getinfo()</span><br></pre></td></tr></table></figure><h2 id="三、设计思路"><a href="#三、设计思路" class="headerlink" title="三、设计思路"></a>三、设计思路</h2><p>1.先创建一个类，对象是想要计算的数据，在构造方法中初始化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">StudentGPA</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,num,credits,qpoint</span>)</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.num = num</span><br><span class="line">        <span class="variable language_">self</span>.credits = <span class="built_in">float</span>(credits)</span><br><span class="line">        <span class="variable language_">self</span>.qpoint = <span class="built_in">float</span>(qpoints)</span><br></pre></td></tr></table></figure><p>2.使用构造方法可以创建对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">StuC=StudentGPA(<span class="string">&quot;陈十&quot;</span>，<span class="string">&quot;3100010&quot;</span>,<span class="number">160</span>,<span class="number">606</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python excel</title>
      <link href="/2024/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/excel/"/>
      <url>/2024/06/12/%E5%A4%A7%E6%95%B0%E6%8D%AE/%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96/excel/</url>
      
        <content type="html"><![CDATA[<h1 id="excel简介"><a href="#excel简介" class="headerlink" title="excel简介"></a>excel简介</h1><p>[TOC]</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>包括数值、日期、字符、错误值、逻辑值。</p><p>数值：整数、小数</p><p>日期：2024/5/30、2024-5-30</p><p>字符：字母、汉字、标点</p><p>错误值：#value</p><p>逻辑值：true，false</p><h3 id="固定用法"><a href="#固定用法" class="headerlink" title="固定用法"></a>固定用法</h3><p>1.标点符号都是英文</p><p>2.通过单元格地址获取所有单元格的值</p><h2 id="单元格的选定"><a href="#单元格的选定" class="headerlink" title="单元格的选定"></a>单元格的选定</h2><ul><li><h5 id="连续单元格"><a href="#连续单元格" class="headerlink" title="连续单元格"></a>连续单元格</h5></li></ul><ol><li>鼠标拖拽</li><li>CTRL+SHIFT+鼠标左键</li><li>SHIFT+双击边线</li></ol><ul><li><h5 id="非连续单元格"><a href="#非连续单元格" class="headerlink" title="非连续单元格"></a>非连续单元格</h5></li></ul><ol><li>CTRL+鼠标左键</li></ol><ul><li><h5 id="特殊单元格"><a href="#特殊单元格" class="headerlink" title="特殊单元格"></a>特殊单元格</h5></li></ul><ol><li>切换到数据区域的边界：CTRL+↑、↓、←、→</li><li>定位特殊单元格：CTRL+G 定位</li></ol><p>excel不区分大小写</p><h2 id="快速填充"><a href="#快速填充" class="headerlink" title="快速填充"></a>快速填充</h2><ol><li>鼠标左键+填充柄</li></ol>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> 办公自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 办公自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tkinter</title>
      <link href="/2024/06/12/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/Tkinter/"/>
      <url>/2024/06/12/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/Tkinter/</url>
      
        <content type="html"><![CDATA[<pre><code>   Tkinter 是使用 python 进行窗口视窗设计的模块。Tkinter模块(&quot;Tk 接口&quot;)是Python的标准Tk GUI工具包的接口。作为 python 特定的GUI界面，是一个图像的窗口，tkinter是python 自带的，可以编辑的GUI界面，我们可以用GUI 实现很多直观的功能，比如想开发一个计算器，如果只是一个程序输入，输出窗口的话，是没用用户体验的。所有开发一个图像化的小窗口，就是必要的。</code></pre><p>　　对于稍有GUI编程经验的人来说，Python的Tkinter界面库是非常简单的。python的GUI库非常多，选择Tkinter，一是最为简单，二是自带库，不需下载安装，随时使用，三则是从需求出发，Python作为一种脚本语言，一种胶水语言，一般不会用它来开发复杂的桌面应用，它并不具备这方面的优势，使用Python，可以把它作为一个灵活的工具，而不是作为主要开发语言，那么在工作中，需要制作一个小工具，肯定是需要有界面的，不仅自己用，也能分享别人使用，在这种需求下，Tkinter是足够胜任的！</p><pre><code>   但是，Tkinter相较于c++以及c#的GUI窗体设计来说，就没有后两者那样的方便与快捷，因为Tkinter所有的GUI窗口实现都需要通过代码来实现，c++以及c#的窗体设计可以直接拖动控件进行组合与布局。</code></pre><p>[TOC]</p><h4 id="1、生成一个窗体："><a href="#1、生成一个窗体：" class="headerlink" title="1、生成一个窗体："></a>1、生成一个窗体：</h4><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>) <span class="comment">#窗体标题</span></span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>) <span class="comment">#设置窗体显示屏幕上的位置</span></span><br><span class="line"> </span><br><span class="line">win.mainloop()<span class="comment">#将窗体显示出来</span></span><br></pre></td></tr></table></figure><p>实现效果：<img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806215222930.png" alt="img"></p><h4 id="2、按钮（Button）"><a href="#2、按钮（Button）" class="headerlink" title="2、按钮（Button）"></a>2、按钮（Button）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line"><span class="comment">#定义一个功能函数</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#实例化一个按钮对象，并给按钮绑定一个功能</span></span><br><span class="line"> </span><br><span class="line">button = tkinter.Button(win,text=<span class="string">&quot;按钮&quot;</span>,command=func)</span><br><span class="line"><span class="comment">#将按钮显示出来</span></span><br><span class="line">button.pack()</span><br><span class="line"> </span><br><span class="line"><span class="comment">#在绑定一些简单函数时，可以直接在后面写，不用单独定义功能</span></span><br><span class="line">button2 = tkinter.Button(win,text=<span class="string">&quot;按钮2&quot;</span>,command=<span class="keyword">lambda</span>:<span class="built_in">print</span>(<span class="string">&quot;111111&quot;</span>))</span><br><span class="line">button2.pack()</span><br><span class="line"> </span><br><span class="line"><span class="comment">#win.quit表示退出</span></span><br><span class="line">button3 = tkinter.Button(win,text=<span class="string">&quot;按钮3&quot;</span>,command=win.quit)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#让按钮显示在指定位置</span></span><br><span class="line">button3.place(x=<span class="number">100</span>,y=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><h4 id="3、输入框（Entry）"><a href="#3、输入框（Entry）" class="headerlink" title="3、输入框（Entry）"></a>3、输入框（Entry）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">输入控件，用于显示简单的文本内容</span></span><br><span class="line"><span class="string">show:密文显示</span></span><br><span class="line"><span class="string">entry = tkinter.Entry(win, show=&quot;*&quot;) </span></span><br><span class="line"><span class="string"># show=&quot;*&quot; 可以表示输入密码</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#绑定变量</span></span><br><span class="line">e = tkinter.Variable()</span><br><span class="line">entry = tkinter.Entry(win,textvariable=e)</span><br><span class="line">entry.pack()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">#设置值</span></span><br><span class="line">e.<span class="built_in">set</span>(<span class="string">&quot;123456&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#取值,从框中取值，下面两个方法功能相同</span></span><br><span class="line"><span class="built_in">print</span>(e.get())</span><br><span class="line"><span class="built_in">print</span>(entry.get())</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806220301750.png" alt="img"></p><h4 id="4、文本输入框（Text）"><a href="#4、文本输入框（Text）" class="headerlink" title="4、文本输入框（Text）"></a>4、文本输入框（Text）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line"><span class="comment"># win.geometry(&quot;400x400+200+50&quot;)</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">文本控件，用于显示多行文本</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#创建滚动条</span></span><br><span class="line">scroll = tkinter.Scrollbar()</span><br><span class="line">text = tkinter.Text(win,width=<span class="number">30</span>,height=<span class="number">4</span>)</span><br><span class="line"><span class="comment">#放到窗体右侧</span></span><br><span class="line">scroll.pack(side = tkinter.RIGHT,fill=tkinter.Y)</span><br><span class="line">text.pack(side = tkinter.LEFT,fill=tkinter.Y)</span><br><span class="line"><span class="comment">#关联</span></span><br><span class="line">scroll.config(command=text.yview)</span><br><span class="line">text.config(yscrollcommand=scroll.<span class="built_in">set</span>)</span><br><span class="line"><span class="comment">#height此处表示显示的行数</span></span><br><span class="line"><span class="comment"># text = tkinter.Text(win,width=30,height=4)</span></span><br><span class="line"><span class="comment"># text.pack()</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;A device that weighs less than one kilogram is part of a mission that will allow scientists to deliver fourth generation or 4G mobile coverage to the moon in 2019. If successful, the tiny device will provide the moon with its first ever mobile phone network. The lunar network will support high definition streaming of video and data between the moon and earth. The network is part of a mission to the moon. This is a project with the goal of landing the first privately paid for mission to the moon. The 4G mission is set to launch from Cape Canaveral in the United States on a space X Falcon 9 rocket in 2019. Mission to the moon intends to establish and test the first elements of a communications network on the moon. The scientists working on the project opted to build a 4G rather than a fifth generation or 5G network. This is because fifth generation networks are still in testing and trial phases. This means that a 5G network may not yet be stable enough to work on the moon’s surface.&quot;</span></span><br><span class="line">text.insert(tkinter.INSERT,<span class="built_in">str</span>)</span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190806220431483.png" alt="img"></p><h4 id="5、选择按钮（CheckButton）"><a href="#5、选择按钮（CheckButton）" class="headerlink" title="5、选择按钮（CheckButton）"></a>5、选择按钮（CheckButton）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updata</span>():</span><br><span class="line">message=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> hobby1.get() == <span class="literal">True</span>:</span><br><span class="line">message += <span class="string">&quot;sing\n&quot;</span></span><br><span class="line"><span class="keyword">if</span> hobby2.get() == <span class="literal">True</span>:</span><br><span class="line">message += <span class="string">&quot;dance\n&quot;</span></span><br><span class="line"><span class="keyword">if</span> hobby3.get() == <span class="literal">True</span>:</span><br><span class="line">message += <span class="string">&quot;rap\n&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#清除text中所有内容</span></span><br><span class="line">text.delete(<span class="number">0.0</span>,tkinter.END)</span><br><span class="line">text.insert(tkinter.INSERT,message)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line">hobby1 = tkinter.BooleanVar()</span><br><span class="line">check1 = tkinter.Checkbutton(win,text=<span class="string">&quot;sing&quot;</span>,variable=hobby1,command=updata)</span><br><span class="line">check1.pack()</span><br><span class="line"> </span><br><span class="line">hobby2 = tkinter.BooleanVar()</span><br><span class="line">check2 = tkinter.Checkbutton(win,text=<span class="string">&quot;dance&quot;</span>,variable=hobby2,command=updata)</span><br><span class="line">check2.pack()</span><br><span class="line"> </span><br><span class="line">hobby3 = tkinter.BooleanVar()</span><br><span class="line">check3 = tkinter.Checkbutton(win,text=<span class="string">&quot;rap&quot;</span>,variable=hobby3,command=updata)</span><br><span class="line">check3.pack()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">text = tkinter.Text(win,width=<span class="number">50</span>,height=<span class="number">5</span>)</span><br><span class="line">text.pack()</span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p>效果图：<img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806220531410.png" alt="img"></p><h4 id="6、静态文本控件（Lable）"><a href="#6、静态文本控件（Lable）" class="headerlink" title="6、静态文本控件（Lable）"></a>6、静态文本控件（Lable）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#进入消息循环</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">标签控件，显示文本：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#win:父窗体</span></span><br><span class="line"><span class="comment">#wraplength：隔多宽换行</span></span><br><span class="line"><span class="comment">#justify:对齐方式</span></span><br><span class="line"><span class="comment">#anchor：位置 n北，e东，w西，s南，center居中；</span></span><br><span class="line"><span class="comment"># 还可以写在一起：ne东北方向</span></span><br><span class="line">label = tkinter.Label(win,text=<span class="string">&quot;hello world&quot;</span>,</span><br><span class="line">                      bg=<span class="string">&quot;pink&quot;</span>,fg=<span class="string">&quot;red&quot;</span>,font=(<span class="string">&quot;宋体&quot;</span>,<span class="number">20</span>),</span><br><span class="line">                      width=<span class="number">50</span>,height=<span class="number">10</span>,wraplength=<span class="number">100</span>,</span><br><span class="line">                      justify=<span class="string">&quot;left&quot;</span>,anchor=<span class="string">&quot;n&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#显示出来</span></span><br><span class="line">label.pack()</span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806220639254.png" alt="img"></p><h4 id="7、容器控件（frame）"><a href="#7、容器控件（frame）" class="headerlink" title="7、容器控件（frame）"></a>7、容器控件（frame）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#frame控件</span></span><br><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">框架控件</span></span><br><span class="line"><span class="string">在屏幕上显示一个矩形区域，多作为容器控件，类似html中的盒子或块元素div</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">frm = tkinter.Frame(win)</span><br><span class="line">frm.pack()</span><br><span class="line"> </span><br><span class="line"><span class="comment">#left</span></span><br><span class="line">frm_1 = tkinter.Frame(frm)</span><br><span class="line">tkinter.Label(frm_1,text=<span class="string">&quot;左上&quot;</span>,bg=<span class="string">&quot;pink&quot;</span>).pack(side=tkinter.TOP)</span><br><span class="line">tkinter.Label(frm_1,text=<span class="string">&quot;左下&quot;</span>,bg=<span class="string">&quot;blue&quot;</span>).pack(side=tkinter.TOP)</span><br><span class="line"> </span><br><span class="line">frm_1.pack(side=tkinter.LEFT)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#right</span></span><br><span class="line">frm_r = tkinter.Frame(frm)</span><br><span class="line">tkinter.Label(frm_r,text=<span class="string">&quot;右上&quot;</span>,bg=<span class="string">&quot;red&quot;</span>).pack(side=tkinter.TOP)</span><br><span class="line">tkinter.Label(frm_r,text=<span class="string">&quot;右下&quot;</span>,bg=<span class="string">&quot;green&quot;</span>).pack(side=tkinter.TOP)</span><br><span class="line"> </span><br><span class="line">frm_r.pack(side=tkinter.RIGHT)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806220836164.png" alt="img"></p><h4 id="8、顶层菜单："><a href="#8、顶层菜单：" class="headerlink" title="8、顶层菜单："></a>8、顶层菜单：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line">menubar = tkinter.Menu(win)</span><br><span class="line">win.configure(menu=menubar)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;sunck&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#创建一个菜单选项</span></span><br><span class="line">menu1= tkinter.Menu(menubar,tearoff=<span class="literal">False</span>)</span><br><span class="line"><span class="comment">#给菜单添加内容</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> [<span class="string">&quot;Python&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;c++&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;swift&quot;</span>,<span class="string">&quot;c#&quot;</span>,<span class="string">&quot;java&quot;</span>,<span class="string">&quot;js&quot;</span>,<span class="string">&quot;退出&quot;</span>]:</span><br><span class="line"><span class="keyword">if</span> item ==<span class="string">&quot;退出&quot;</span>:</span><br><span class="line">menu1.add_separator()</span><br><span class="line">menu1.add_command(label=item,command=win.quit)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">menu1.add_command(label=item,command=func)</span><br><span class="line"> </span><br><span class="line">menu2 = tkinter.Menu(menubar,tearoff=<span class="literal">False</span>)</span><br><span class="line">menu2.add_command(label=<span class="string">&quot;red&quot;</span>)</span><br><span class="line">menu2.add_command(label=<span class="string">&quot;blue&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#向菜单栏上添加菜单选项</span></span><br><span class="line">menubar.add_cascade(label=<span class="string">&quot;语言&quot;</span>,menu=menu1)</span><br><span class="line">menubar.add_cascade(label=<span class="string">&quot;颜色&quot;</span>,menu=menu2)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806221116182.png" alt="img"></p><h4 id="9、右键菜单"><a href="#9、右键菜单" class="headerlink" title="9、右键菜单"></a>9、右键菜单</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line">menubar = tkinter.Menu(win)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#菜单</span></span><br><span class="line">menu = tkinter.Menu(menubar,tearoff=<span class="literal">False</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> [<span class="string">&quot;Python&quot;</span>,<span class="string">&quot;c&quot;</span>,<span class="string">&quot;c++&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;swift&quot;</span>,<span class="string">&quot;c#&quot;</span>,<span class="string">&quot;java&quot;</span>,<span class="string">&quot;js&quot;</span>,<span class="string">&quot;退出&quot;</span>]:</span><br><span class="line">menu.add_command(label=item)</span><br><span class="line"> </span><br><span class="line">menubar.add_cascade(label = <span class="string">&quot;语言&quot;</span>,menu=menu)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">showMeun</span>(<span class="params">e</span>):</span><br><span class="line">menubar.post(e.x_root,e.y_root)</span><br><span class="line"> </span><br><span class="line">win.bind(<span class="string">&quot;&lt;Button-3&gt;&quot;</span>,showMeun)</span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806221226106.png" alt="img"></p><h4 id="10、表单控件（listBox）"><a href="#10、表单控件（listBox）" class="headerlink" title="10、表单控件（listBox）"></a>10、表单控件（listBox）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">列表框控件，可以包含一个或多个文本框</span></span><br><span class="line"><span class="string">作用：在listBox控件的小窗口显示一个字符串</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#1创建一个listBox,添加几个元素</span></span><br><span class="line">lb = tkinter.Listbox(win,selectmode=tkinter.BROWSE)</span><br><span class="line">lb.pack()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> [<span class="string">&quot;c&quot;</span>, <span class="string">&quot;c++&quot;</span>,<span class="string">&quot;java&quot;</span>,<span class="string">&quot;c#&quot;</span>,<span class="string">&quot;python&quot;</span>]:</span><br><span class="line">lb.insert(tkinter.END,item)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#在开始添加</span></span><br><span class="line">lb.insert(tkinter.ACTIVE,<span class="string">&quot;javascript&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#将列表当成一个元素添加的</span></span><br><span class="line"><span class="comment"># lb.insert(tkinter.END,[&quot;very good&quot;,&quot;very nice&quot;])</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#删除 参数1为开始的索引，参数二为结束的索引，如果不指定参数二，只删除第一个索引的内容</span></span><br><span class="line"><span class="comment"># lb.delete(1,3)</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#选中</span></span><br><span class="line"><span class="comment">#参数1为开始的索引，参数二为结束的索引，如果不指定参数二，只选中第一个索引的内容</span></span><br><span class="line">lb.select_set(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#取消</span></span><br><span class="line"><span class="comment"># lb.select_clear(3)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># #获取到列表中的元素个数</span></span><br><span class="line"><span class="comment"># print(lb.size())</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># #获取值,从列表中获取值</span></span><br><span class="line"><span class="comment"># print(lb.get(2,4))</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#返回当前的索引项</span></span><br><span class="line"><span class="built_in">print</span>(lb.curselection())</span><br><span class="line"> </span><br><span class="line"><span class="comment">#判断一个选项是否被选中</span></span><br><span class="line"><span class="built_in">print</span>(lb.select_includes)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806221650279.png" alt="img"></p><h4 id="11、选择控件（Radiobutton）"><a href="#11、选择控件（Radiobutton）" class="headerlink" title="11、选择控件（Radiobutton）"></a>11、选择控件（Radiobutton）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updata</span>():</span><br><span class="line"><span class="built_in">print</span>(r.get())</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line">r = tkinter.IntVar()</span><br><span class="line">radio1 = tkinter.Radiobutton(win,text=<span class="string">&quot;one&quot;</span>,value=<span class="number">1</span>,variable=r,command=updata)</span><br><span class="line">radio1.pack()</span><br><span class="line"> </span><br><span class="line">radio2 = tkinter.Radiobutton(win,text=<span class="string">&quot;two&quot;</span>,value=<span class="number">2</span>,variable=r,command=updata)</span><br><span class="line">radio2.pack()</span><br><span class="line"> </span><br><span class="line">radio3 = tkinter.Radiobutton(win,text=<span class="string">&quot;three&quot;</span>,value=<span class="number">3</span>,variable=r,command=updata)</span><br><span class="line">radio3.pack()</span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806221837300.png" alt="img"></p><h4 id="12、可拖拽控件（scale）"><a href="#12、可拖拽控件（scale）" class="headerlink" title="12、可拖拽控件（scale）"></a>12、可拖拽控件（scale）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">供用户通过拖拽指示器改变变量的值，可以水平，也可以竖直</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#tkinter.VERTICAL竖直</span></span><br><span class="line"><span class="comment">#tkinter.HORIZONTAL 水平</span></span><br><span class="line"><span class="comment">#length 水平时表示宽度，竖直时表示高度</span></span><br><span class="line"><span class="comment">#tickinterval 选择值将会为该值的倍数</span></span><br><span class="line">scale1 = tkinter.Scale(win,from_=<span class="number">0</span>,to=<span class="number">100</span>,orient=tkinter.HORIZONTAL,</span><br><span class="line">tickinterval=<span class="number">10</span>,length=<span class="number">200</span>)</span><br><span class="line">scale1.pack()</span><br><span class="line"> </span><br><span class="line">scale1.<span class="built_in">set</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">showNum</span>():</span><br><span class="line"><span class="built_in">print</span>(scale1.get())</span><br><span class="line"> </span><br><span class="line">tkinter.Button(win,text=<span class="string">&quot;按钮&quot;</span>,command=showNum).pack()</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win.mainloop()</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806221942996.png" alt="img"></p><h4 id="13、数值范围控件（Springbox）"><a href="#13、数值范围控件（Springbox）" class="headerlink" title="13、数值范围控件（Springbox）"></a>13、数值范围控件（Springbox）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tkinter</span><br><span class="line"> </span><br><span class="line">win = tkinter.Tk()</span><br><span class="line">win.title(<span class="string">&quot;窗体&quot;</span>)</span><br><span class="line">win.geometry(<span class="string">&quot;400x400+200+50&quot;</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">数值范围控件</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">updata</span>():</span><br><span class="line"><span class="built_in">print</span>(v.get())</span><br><span class="line"><span class="comment">#increament 步长，默认为1</span></span><br><span class="line"><span class="comment">#values 最好不要与from_=0,to=100，increament=2同时使用</span></span><br><span class="line"><span class="comment">#values = (0,2,4,6,8)</span></span><br><span class="line"><span class="comment">#command只要值改变，就会执行对应的方法</span></span><br><span class="line">v = tkinter.StringVar()</span><br><span class="line">sp =tkinter.Spinbox(win,from_=<span class="number">0</span>,to=<span class="number">100</span>,textvariable=v,command=updata)</span><br><span class="line">sp.pack()</span><br><span class="line"> </span><br><span class="line"><span class="comment">#赋值</span></span><br><span class="line">v.<span class="built_in">set</span>(<span class="number">20</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#取值</span></span><br><span class="line"><span class="built_in">print</span>(v.get())</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">win.mainloop( )</span><br></pre></td></tr></table></figure><p>效果图：</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/20190806222051975.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 库介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu命令</title>
      <link href="/2024/06/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/ubuntu/Ubuntu/"/>
      <url>/2024/06/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/ubuntu/Ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="apt"><a href="#apt" class="headerlink" title="apt"></a>apt</h1>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>basic</title>
      <link href="/2024/06/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/ubuntu/ubuntubasic/"/>
      <url>/2024/06/12/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/ubuntu/ubuntubasic/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux的路径解释</title>
      <link href="/2024/06/11/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/path/"/>
      <url>/2024/06/11/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/path/</url>
      
        <content type="html"><![CDATA[<h1 id="绝对路径与相对路径"><a href="#绝对路径与相对路径" class="headerlink" title="绝对路径与相对路径"></a>绝对路径与相对路径</h1><p>Linux中的路径可以分为绝对路径和相对路径，因为根据档名写法的不同，也可以将所谓的路径（path）定义为绝对路径（absolute）和相对路径（relative）。这两种文件名/路径的写法根据是这样的：</p><p>  绝对路径：由跟目录（/）开始起的文件或者目录名称，例如 /home/dmtais/.bashrc：   （绝对路径的写法一定是由 / 目录写起的）<br>  相对路径：相对于目前路径的文件名写法。例如 ./home/dmtsai  或  ../ ../home/dmtsai  等。反正开头不是 / 属于相对路径的写法。（相对路径的写法不是由 / 目录写起的）.</p><h1 id="当前目录与上层目录"><a href="#当前目录与上层目录" class="headerlink" title="当前目录与上层目录"></a>当前目录与上层目录</h1><p> .   ：代表当前的目录，也可以使用  ./  来表示；<br> ..   ：代表上一层目录，也可以 ../ 来表示；<br>这个 . 与 .. 目录的概念是很重要的，你经常看到  cd .. 或  ./command 之类的指令下达方式，就是代表上一层与目前所在目录的工作状态，<br>例：如何先进入到/var/spool/mail/目录，在进入到/var/spool/lpd/目录内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /var/spool/mail/            ##进入到/var/spool/mail/下</span><br><span class="line">cd ../lpd/                     ##返回上一层目录并进入lpd目录</span><br></pre></td></tr></table></figure><h1 id="根目录与家目录"><a href="#根目录与家目录" class="headerlink" title="根目录与家目录"></a>根目录与家目录</h1><p>/“是根目录，”~“是家目录。<a href="https://so.csdn.net/so/search?q=Linux&amp;spm=1001.2101.3001.7020">Linux</a>存储是以挂载的方式，相当于是树状的，源头就是”/“，也就是根目录。而每个用户都有”家“目录，也就是用户的个人目录，比如root用户的”家“目录就是/root,普通用户a的家目录就是/home/a。</p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 基本特性 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh协议介绍</title>
      <link href="/2024/06/11/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/ssh/"/>
      <url>/2024/06/11/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/ssh/</url>
      
        <content type="html"><![CDATA[<h1 id="ssh协议"><a href="#ssh协议" class="headerlink" title="ssh协议"></a>ssh协议</h1><h3 id="两种机制："><a href="#两种机制：" class="headerlink" title="两种机制："></a>两种机制：</h3><h5 id="基于口令的安全验证机制"><a href="#基于口令的安全验证机制" class="headerlink" title="基于口令的安全验证机制"></a>基于口令的安全验证机制</h5><p>只要知道自己的账户和口令，就可远程登录到主机。但是不能保证你正在连接的服务器就是想连的服务器。可能有别的服务器的冒充，即“中间人攻击”</p><h5 id="基于密钥的安全验证机制"><a href="#基于密钥的安全验证机制" class="headerlink" title="基于密钥的安全验证机制"></a>基于密钥的安全验证机制</h5><p>需要依靠密钥，自己必须创建一对密钥，将公钥放置在服务器上。如果要连接在SSH服务器上，客服端就会向服务器发出请求，请求你的私钥进行安全验证。服务器收到请求后，先在该服务器所在主目录下寻找公钥，然后和发送过来的私钥比较。如果一致，则验证成功</p><h3 id="配置免密ssh"><a href="#配置免密ssh" class="headerlink" title="配置免密ssh"></a>配置免密ssh</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa //配置ssh密钥至指定文件rsa中</span><br></pre></td></tr></table></figure><p>​    ssh-keygen—身份验证密钥的生成，管理和转换</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/eb97c09c922245bfba0ae3d3e9d739ac.png" alt="img" style="zoom: 67%;" /></p><h1 id="将公钥上传至服务端"><a href="#将公钥上传至服务端" class="headerlink" title="将公钥上传至服务端"></a>将公钥上传至服务端</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp  root/.ssh/id_rsa.pub user@ip：/root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 系统文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell基础</title>
      <link href="/2024/06/10/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/shell/"/>
      <url>/2024/06/10/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/shell/</url>
      
        <content type="html"><![CDATA[<h1 id="一、概念"><a href="#一、概念" class="headerlink" title="一、概念"></a>一、概念</h1><p><strong>shell是一种应用程序，提供了一种界面，用户通过该界面访问操作系统内核的服务</strong></p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><blockquote><p>图形界面shell(GUI shell)</p><p>命令行式shell(CLI shell)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 基本特性 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>profile系统环境配置</title>
      <link href="/2024/06/10/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/profile/"/>
      <url>/2024/06/10/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/profile/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>​        /etc/profile文件的改变会涉及到系统的环境。</p><p>　　Linux是一个多用户的<a href="http://lib.csdn.net/base/operatingsystem">操作系统</a>。每个用户登录系统后，都会有一个专用的运行环境。通常每个用户默认的环境都是相同的，这个默认环境实际上就是一组环境变量的定义。用户可以对自己的运行环境进行定制，其方法就是修改相应的系统环境变量。</p><p>　　常在/etc/profile文件中修改环境变量，在这里修改的内容是对所有用户起作用的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><p>​     这句的意思就是，把$JAVA_HOME/bin 和 $PATH设置为PATH环境变量，由于这里加上了原来的PATH，所以相当于在原来的PATH上增加了$JAVA_HOME/bin 。</p><p>$ :指明变量</p><p>: :指明执行先后顺序</p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 系统文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop下载安装</title>
      <link href="/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/Java%20Hadoop%E6%A1%86%E6%9E%B6/Hadoop/"/>
      <url>/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/Java%20Hadoop%E6%A1%86%E6%9E%B6/Hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h1><h4 id="1-安装jdk版本Java-Downloads-Oracle"><a href="#1-安装jdk版本Java-Downloads-Oracle" class="headerlink" title="1.安装jdk版本Java Downloads | Oracle"></a>1.安装jdk版本<a href="https://www.oracle.com/java/technologies/downloads/">Java Downloads | Oracle</a></h4><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240610143718431.png" alt="image-20240610143718431"></p><p>使用xshell上传至虚拟机</p><h4 id="2-将jdk安置在指定位置并解压"><a href="#2-将jdk安置在指定位置并解压" class="headerlink" title="2.将jdk安置在指定位置并解压"></a>2.将jdk安置在指定位置并解压</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /root/softwares</span><br><span class="line">cd /root/softwares</span><br><span class="line">ls -a //查看安装包</span><br><span class="line">tar -zxvf [安装包名称] -C /usr/loacl</span><br></pre></td></tr></table></figure><h4 id="3-打开系统路径并配置"><a href="#3-打开系统路径并配置" class="headerlink" title="3.打开系统路径并配置"></a>3.打开系统路径并配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># jdk</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/local/jdk-17.0.11</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure><p>保存并退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>使配置生效</p><h4 id="4-检查："><a href="#4-检查：" class="headerlink" title="4.检查："></a>4.检查：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h1 id="安装Hadoop"><a href="#安装Hadoop" class="headerlink" title="安装Hadoop"></a>安装Hadoop</h1><p>跟jdk安装几乎一致，链接：<a href="https://downloads.apache.org/hadoop/common/hadoop-3.4.0/">Index of /hadoop/common/hadoop-3.4.0 (apache.org)</a></p><h4 id="系统路径配置"><a href="#系统路径配置" class="headerlink" title="系统路径配置"></a>系统路径配置</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Hadoop</span><br><span class="line"></span><br><span class="line">export HADOOP_HOME=/usr/local/hadoop-3.4.0</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</span><br></pre></td></tr></table></figure><h1 id="伪分布式模式"><a href="#伪分布式模式" class="headerlink" title="伪分布式模式"></a>伪分布式模式</h1>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> Java Hadoop框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 大数据基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeautifulSoup库</title>
      <link href="/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/requests%E4%B8%8Ebeautifulsoup%E5%BA%93/beautifulsoup/"/>
      <url>/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/requests%E4%B8%8Ebeautifulsoup%E5%BA%93/beautifulsoup/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="一、声明"><a href="#一、声明" class="headerlink" title="一、声明"></a>一、声明</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(爬取内容，解释器)</span><br></pre></td></tr></table></figure><h1 id="二、基本元素"><a href="#二、基本元素" class="headerlink" title="二、基本元素"></a>二、基本元素</h1><h2 id="1-对BeautifulSoup库的理解"><a href="#1-对BeautifulSoup库的理解" class="headerlink" title="1.对BeautifulSoup库的理解"></a>1.对BeautifulSoup库的理解</h2><p>Beautifulsoup是解析、遍历、维护”标签书“的功能库</p><h2 id="2-BeautifulSoup类"><a href="#2-BeautifulSoup类" class="headerlink" title="2.BeautifulSoup类"></a>2.BeautifulSoup类</h2><h3 id="1-原理"><a href="#1-原理" class="headerlink" title="(1)原理"></a>(1)原理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">HTML &lt;--&gt; 标签树</span><br><span class="line">标签树 &lt;--&gt; BeautifulSoup类</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(<span class="string">&quot;&lt;html&gt;data&lt;/html&gt;&quot;</span>,<span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line">soup2 = BeautifulSoup(<span class="built_in">open</span>(<span class="string">&quot;D://demo.html&quot;</span>),<span class="string">&quot;html.parser&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-解析器"><a href="#2-解析器" class="headerlink" title="(2)解析器"></a>(2)解析器</h3><div class="table-container"><table><thead><tr><th>解析器</th><th>使用方法</th><th>条件</th></tr></thead><tbody><tr><td>bs4的HTML解析器</td><td>BeautifulSoup(mk,”html.parser”)</td><td>安装bs4库</td></tr><tr><td>lxml的HTML解析器</td><td>BeautifulSoup(mk,”lxml”)</td><td>pip install lxml</td></tr><tr><td>lxml的XML解析器</td><td>BeautifulSoup(mk,”xml”)</td><td>pip install xml</td></tr><tr><td>html5lib的解析器</td><td>BeautifulSoup(mk,”html5lib”)</td><td>pip install html5lib</td></tr></tbody></table></div><h3 id="3-基本元素"><a href="#3-基本元素" class="headerlink" title="(3)基本元素"></a>(3)基本元素</h3><div class="table-container"><table><thead><tr><th style="text-align:center">基本元素</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">Tag</td><td style="text-align:center">标签，最基本元素，分别用<>和</>标明开通与结尾</td></tr><tr><td style="text-align:center">Name</td><td style="text-align:center">标签的名字</td></tr><tr><td style="text-align:center">Attributes</td><td style="text-align:center">标签的属性，字典形式格式，字典形式组织，格式：<tag>.attrs</td></tr><tr><td style="text-align:center">NavigableString</td><td style="text-align:center">标签内非属性字符串，<>……</>中字符串</td></tr><tr><td style="text-align:center">Comment</td><td style="text-align:center">标签内字符串的注释部分</td></tr></tbody></table></div><h2 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h2><h3 id="1-载入"><a href="#1-载入" class="headerlink" title="1.载入"></a>1.载入</h3><h4 id="1-通过字符串构建"><a href="#1-通过字符串构建" class="headerlink" title="(1)通过字符串构建"></a>(1)通过字符串构建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">html=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;zh-cn&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">    &lt;meta charset=&quot;utf-8&quot; /&gt;    </span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;div id=&quot;main&quot;&gt;</span></span><br><span class="line"><span class="string">    &lt;span role=&quot;heading&quot; aria-level=&quot;2&quot;&gt;span&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;h1&gt;h1&lt;/h1&gt;</span></span><br><span class="line"><span class="string">&lt;p&gt;p&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(html,<span class="string">&#x27;html_parser&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.prettify())</span><br></pre></td></tr></table></figure><h4 id="2-从文件中加载"><a href="#2-从文件中加载" class="headerlink" title="(2)从文件中加载"></a>(2)从文件中加载</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;测试.html&#x27;</span>，encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    soup = BeatuifulSoup(f,<span class="string">&#x27;html_parser&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> web爬虫 </category>
          
          <category> requests与beautifulsoup库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>requests库</title>
      <link href="/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/requests%E4%B8%8Ebeautifulsoup%E5%BA%93/crawler/"/>
      <url>/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/requests%E4%B8%8Ebeautifulsoup%E5%BA%93/crawler/</url>
      
        <content type="html"><![CDATA[<h1 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h1><p>[toc]</p><h2 id="一、请求方法"><a href="#一、请求方法" class="headerlink" title="一、请求方法"></a>一、请求方法</h2><div class="table-container"><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>requests.request()</td><td>构造一个请求，支持以下各方法的基础方法</td></tr><tr><td>requests.get()</td><td>获取HTML网页的主要方法，应对HTTP的GET</td></tr><tr><td>requests.head()</td><td>获取HTML网页头信息的主要方法，应对HTTP的HEAD</td></tr><tr><td>requests.post()</td><td>获取HTML网页的POST方法，应对HTTP的POST</td></tr><tr><td>requests.put()</td><td>HTML网页的POST方法，应对HTTP的POST</td></tr><tr><td>requests.patch()</td><td>获取HTML网页的PUT方法，应对HTTP的PUT</td></tr><tr><td>requests.delete()</td><td>向HTML网页提交删除方法，应对HTTP的DELETE</td></tr></tbody></table></div><h3 id="request方法介绍"><a href="#request方法介绍" class="headerlink" title="request方法介绍"></a>request方法介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.request(method,url,**kwargs)</span><br></pre></td></tr></table></figure><p><strong>method:</strong>请求方式，对应get/put/post等7种</p><p><strong>url:</strong>拟获取页面的url链接</p><p><strong><em>**</em></strong>kwargs:**控制访问的参数，共13个，均为可选项</p><p>​        params:字典或字节序列，作为参数添加到url中相当于get()提交</p><p>​        data:字典、字节序列或文对象，作为Request的内容</p><p>​        json:JSON格式的数据，作为Request的内容</p><p>​        headers:字典，头字段</p><p>​        cookies:字典或CookieJar，Request中的cookie</p><p>​        authentic:元组，支持HTTP认证功能</p><p>​        files:字典类型，传输文件</p><p>​        timeout:设置超时时间，秒为单位</p><p>​        proxies:字典类型，设置访问代理服务器，可以增加登录认证</p><p>​        allow_redirects:True/False,默认为Ture，重定向开关</p><p>​        stream:True/Flase,默认为True，获取内容立即下载</p><p>​        verify:True/Flase,默认为True，认证SSL证书开关</p><p>​        cert:本地SSL证书路径</p><h3 id="get方法介绍"><a href="#get方法介绍" class="headerlink" title="get方法介绍"></a>get方法介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.get(url,params=<span class="literal">None</span>，**kwargs)</span><br></pre></td></tr></table></figure><p><strong>url</strong>:拟获取的url链接</p><p><strong>params</strong>:url的额外参数，字典或字节流，可选</p><p><strong><em>**</em></strong>kwargs**:12个控制访问的参数</p><h4 id="requests库的2个重要对象"><a href="#requests库的2个重要对象" class="headerlink" title="requests库的2个重要对象"></a>requests库的2个重要对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r=request.get(url)</span><br></pre></td></tr></table></figure><p>包含两个重要对象：Response对象与Request对象</p><p>Response对象:包含爬虫返回的内容</p><div class="table-container"><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>r.status_code</td><td>HTTP请求的返回状态</td></tr><tr><td>r.text</td><td>HTTP响应内容的字符串形式</td></tr><tr><td>r.encoding</td><td>从HTTP header中猜测的响应内容编码方式</td></tr><tr><td>r.apparent_encoding</td><td>从内容中分析出的响应内容编码方式(备选编码方式)</td></tr><tr><td>r.content</td><td>HTTP响应内容的二进制形式</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">flowchart TD</span><br><span class="line">newLines[&quot;200</span><br><span class="line">    r.text  r.encoding</span><br><span class="line">    r.apparent_encoding</span><br><span class="line">    r.content&quot;]</span><br><span class="line">    404[&quot;404或其他</span><br><span class="line">    某些原因出错而产生异常&quot;]</span><br><span class="line">    Start --&gt; r.status_code;</span><br><span class="line">    r.status_code --&gt; newLines;</span><br><span class="line">    r.status_code --&gt; 404;</span><br></pre></td></tr></table></figure><h3 id="Post方法介绍"><a href="#Post方法介绍" class="headerlink" title="Post方法介绍"></a>Post方法介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.post(url,data=<span class="literal">None</span>,json=<span class="literal">None</span>,**kwarges)</span><br></pre></td></tr></table></figure><p><strong>url</strong>:拟更新页面的url链接</p><p><strong>data:</strong>字典、字节序列或文件，Request的内容</p><p><strong>json:</strong>JSON格式的数据，Request的内容</p><p><strong><em>**</em></strong>kwarges:**11个控制访问的参数</p><h3 id="Put方法介绍"><a href="#Put方法介绍" class="headerlink" title="Put方法介绍"></a>Put方法介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.put(url,data=<span class="literal">None</span>,**kwarges)</span><br></pre></td></tr></table></figure><p><strong>url</strong>:拟更新页面的url链接</p><p><strong>data:</strong>字典、字节序列或文件，Request的内容</p><p><strong><em>**</em></strong>kwargs**:12个控制访问的参数</p><h3 id="Patch方法介绍"><a href="#Patch方法介绍" class="headerlink" title="Patch方法介绍"></a>Patch方法介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.patch(url,data=<span class="literal">None</span>,**kwarges)</span><br></pre></td></tr></table></figure><p><strong>url</strong>:拟更新页面的url链接</p><p><strong>data:</strong>字典、字节序列或文件，Request的内容</p><p><strong><em>**</em></strong>kwargs**:12个控制访问的参数</p><h3 id="delete方法介绍"><a href="#delete方法介绍" class="headerlink" title="delete方法介绍"></a>delete方法介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">requests.delete(url,**kwarges)</span><br></pre></td></tr></table></figure><p><strong>url</strong>:拟更新页面的url链接</p><p><strong><em>**</em></strong>kwargs**:12个控制访问的参数</p><h2 id="二、Request的异常"><a href="#二、Request的异常" class="headerlink" title="二、Request的异常"></a>二、Request的异常</h2><div class="table-container"><table><thead><tr><th>异常</th><th>说明</th></tr></thead><tbody><tr><td>requests.ConnectionError</td><td>网络连接错误异常，如DNS查询失败、拒绝连接</td></tr><tr><td>requests.HTTPError</td><td>HTTP错误异常</td></tr><tr><td>requests.URLRequired</td><td>URL缺失异常</td></tr><tr><td>requests.TooManyRedirects</td><td>超过最大重定向次数，产生重定向异常</td></tr><tr><td>requests.ConnectTimeout</td><td>连接远程服务器超时异常</td></tr><tr><td>request.Timeout</td><td>请求URL超市，产生超时异常</td></tr></tbody></table></div><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><div class="table-container"><table><thead><tr><th>异常</th><th>说明</th></tr></thead><tbody><tr><td>r.raise_for_status</td><td>如果不是200，产生异常requests.HTTPError</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> web爬虫 </category>
          
          <category> requests与beautifulsoup库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/requests%E4%B8%8Ebeautifulsoup%E5%BA%93/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E4%B9%8B%E7%88%AC%E5%8F%96cnblogs/"/>
      <url>/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/requests%E4%B8%8Ebeautifulsoup%E5%BA%93/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E4%B9%8B%E7%88%AC%E5%8F%96cnblogs/</url>
      
        <content type="html"><![CDATA[<h1 id="爬取cnblogs"><a href="#爬取cnblogs" class="headerlink" title="爬取cnblogs"></a>爬取cnblogs</h1><p>步骤一  分析需求：</p><p>爬取想要博主的所有文章并自动分类。</p><p>步骤二  观察网站，分析架构：</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> web爬虫 </category>
          
          <category> requests与beautifulsoup库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy的安装与配置</title>
      <link href="/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/scrapy/scrapy%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/06/10/%E5%A4%A7%E6%95%B0%E6%8D%AE/web%E7%88%AC%E8%99%AB/scrapy/scrapy%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>这里建议使用虚拟环境来搭建项目</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy //我这个已经默认为清华源了，如果没有设置，需要声明源，否则可能无法下载</span><br></pre></td></tr></table></figure><p>如果安装有问题，需要上<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/下载相应配置">https://www.lfd.uci.edu/~gohlke/pythonlibs/下载相应配置</a></p><p>然后使用cmd cd到相应下载文件夹，输入：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip insatll -i 文件名</span><br></pre></td></tr></table></figure><p>完成后便可进入项目环境</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>进入项目并选择好解释器后在命令行中输入scrapy即可查看信息</p><p>输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject 项目名称</span><br></pre></td></tr></table></figure><p>来搭建项目；</p><p>然后输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider 文件名 网站域名</span><br></pre></td></tr></table></figure><p>即可使用基础框架。</p><p>以上操作完成后即可进行爬虫的编写了。</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
          <category> web爬虫 </category>
          
          <category> scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 爬虫框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux系统文件的查看与安装</title>
      <link href="/2024/06/09/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D/linuxbasic-1/"/>
      <url>/2024/06/09/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%91%BD%E4%BB%A4%E4%BB%8B%E7%BB%8D/linuxbasic-1/</url>
      
        <content type="html"><![CDATA[<h1 id="linux命令—系统文件操作"><a href="#linux命令—系统文件操作" class="headerlink" title="linux命令—系统文件操作"></a>linux命令—系统文件操作</h1><p>[TOC]</p><h1 id="ls命令—显示命令"><a href="#ls命令—显示命令" class="headerlink" title="ls命令—显示命令"></a>ls命令—显示命令</h1><p>Linux ls（英文全拼： list directory contents）命令用于显示指定工作目录下之内容（列出目前工作目录所含的文件及子目录)。</p><h2 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls [-alrtAFR] [name...]</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数 :"></a>参数 :</h2><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">-a</td><td style="text-align:center">显示所有文件及目录 (<strong>.</strong> 开头的隐藏文件也会列出)</td></tr><tr><td style="text-align:center">-d</td><td style="text-align:center">只列出目录（不递归列出目录内的文件）</td></tr><tr><td style="text-align:center">-l</td><td style="text-align:center">以长格式显示文件和目录信息，包括权限、所有者、大小、创建时间等</td></tr><tr><td style="text-align:center">-r</td><td style="text-align:center">倒序显示文件和目录</td></tr><tr><td style="text-align:center">-t</td><td style="text-align:center">将按照修改时间排序，最新的文件在最前面</td></tr><tr><td style="text-align:center">-A</td><td style="text-align:center">同 -a ，但不列出 “.” (目前目录) 及 “..” (父目录)</td></tr><tr><td style="text-align:center">-F</td><td style="text-align:center">在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “/“</td></tr><tr><td style="text-align:center">-R</td><td style="text-align:center">递归显示目录中的所有文件和子目录</td></tr></tbody></table></div><p>将 /bin 目录以下所有目录及文件详细资料列出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -lR /bin</span><br></pre></td></tr></table></figure><p>当文件名包含空格、特殊字符或者开始字符为破折号时，可以使用反斜杠（\）进行转义，或者使用引号将文件名括起来。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls &quot;my file.txt&quot;    # 列出文件名为&quot;my file.txt&quot;的文件</span><br><span class="line">ls my\ file.txt     # 列出文件名为&quot;my file.txt&quot;的文件</span><br><span class="line">ls -- -filename     # 列出文件名为&quot;-filename&quot;的文件</span><br></pre></td></tr></table></figure><p>ls 命令还可以使用通配符进行模式匹配，例如 :<strong>*</strong> 表示匹配任意字符，<strong>?</strong> 表示匹配一个字符，<strong>[…]</strong> 表示匹配指定范围内的字符。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls *.txt         # 列出所有扩展名为.txt的文件</span><br><span class="line">ls file?.txt     # 列出文件名为file?.txt的文件，其中?表示任意一个字符</span><br><span class="line">ls [abc]*.txt    # 列出以a、b或c开头、扩展名为.txt的文件</span><br></pre></td></tr></table></figure><p>列出目前工作目录下所有名称是 s 开头的文件，越新的排越后面:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -ltr s*</span><br></pre></td></tr></table></figure><h1 id="echo命令—打印命令"><a href="#echo命令—打印命令" class="headerlink" title="echo命令—打印命令"></a>echo命令—打印命令</h1><p>用于输出字符串</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="echo-n-表示不换行输出"><a href="#echo-n-表示不换行输出" class="headerlink" title="echo -n 表示不换行输出"></a>echo -n 表示不换行输出</h3><h3 id="echo-e-表示输出转义字符"><a href="#echo-e-表示输出转义字符" class="headerlink" title="echo -e 表示输出转义字符"></a>echo -e 表示输出转义字符</h3><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240612125125473.png" alt="image-20240612125125473"></p><h1 id="tar命令—打包解压命令"><a href="#tar命令—打包解压命令" class="headerlink" title="tar命令—打包解压命令"></a>tar命令—打包解压命令</h1><p>在Linux中，tar命令是一个常用的工具，用于打包和解压文件。它在文件管理、备份和压缩方面扮演着重要角色。tar（tape archive）最初是为磁带设备设计的，但现在已经成为文件操作的标准工具之一。它能够将一组文件和目录打包成单个归档文件，也可以从归档文件中提取出文件和目录。通过结合不同的选项，你可以在tar命令中实现广泛的功能。</p><h2 id="一，参数列表"><a href="#一，参数列表" class="headerlink" title="一，参数列表"></a>一，参数列表</h2><p>下表列出了<code>tar</code>命令的一些常用参数及其功能：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>参数</strong></th><th style="text-align:center"><strong>功能</strong></th></tr></thead><tbody><tr><td style="text-align:center">-c</td><td style="text-align:center">创建新的归档文件（打包）</td></tr><tr><td style="text-align:center">-x</td><td style="text-align:center">从归档文件中提取文件（解包）</td></tr><tr><td style="text-align:center">-f &lt;文件名&gt;</td><td style="text-align:center">指定归档文件名</td></tr><tr><td style="text-align:center">-v</td><td style="text-align:center">显示操作的详细信息</td></tr><tr><td style="text-align:center">-z</td><td style="text-align:center">通过gzip压缩归档文件</td></tr><tr><td style="text-align:center">-j</td><td style="text-align:center">通过bzip2压缩归档文件</td></tr><tr><td style="text-align:center">-C &lt;目录&gt;</td><td style="text-align:center">切换到指定目录</td></tr><tr><td style="text-align:center">—exclude=&lt;模式&gt;</td><td style="text-align:center">排除匹配模式的文件</td></tr><tr><td style="text-align:center">—list</td><td style="text-align:center">列出归档文件的内容</td></tr><tr><td style="text-align:center">—help</td><td style="text-align:center">显示帮助信息</td></tr></tbody></table></div><h2 id="二，使用介绍"><a href="#二，使用介绍" class="headerlink" title="二，使用介绍"></a>二，使用介绍</h2><h3 id="1-打包文件和目录"><a href="#1-打包文件和目录" class="headerlink" title="1. 打包文件和目录"></a>1. 打包文件和目录</h3><p>使用<code>tar</code>命令打包文件和目录很简单。要创建一个归档文件，可以使用参数<code>-c</code>和<code>-f</code>，然后指定归档文件名。例如，要将<code>/home/user/documents</code>目录打包成一个文件，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cf documents.tar /home/user/documents</span><br></pre></td></tr></table></figure><p>这将创建一个名为<code>documents.tar</code>的归档文件，其中包含了<code>/home/user/documents</code>目录下的所有内容。</p><h3 id="2-解包归档文件"><a href="#2-解包归档文件" class="headerlink" title="2. 解包归档文件"></a>2. 解包归档文件</h3><p>要从归档文件中提取文件，可以使用参数<code>-x</code>和<code>-f</code>，然后指定归档文件名。例如，要将<code>documents.tar</code>解包到当前目录，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xf documents.tar</span><br></pre></td></tr></table></figure><p>这将把<code>documents.tar</code>中的内容提取到当前目录。</p><h3 id="3-压缩归档文件"><a href="#3-压缩归档文件" class="headerlink" title="3. 压缩归档文件"></a>3. 压缩归档文件</h3><p><code>tar</code>命令还可以与压缩工具一起使用，以创建压缩的归档文件。常见的压缩选项有<code>-z</code>（使用gzip压缩）和<code>-j</code>（使用bzip2压缩）。例如，要创建一个gzip压缩的归档文件，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czf documents.tar.gz /home/user/documents</span><br></pre></td></tr></table></figure><h3 id="4-列出归档文件内容"><a href="#4-列出归档文件内容" class="headerlink" title="4. 列出归档文件内容"></a>4. 列出归档文件内容</h3><p>你可以使用<code>--list</code>参数来列出归档文件中的内容，而无需实际提取它们。例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar --list -f documents.tar</span><br></pre></td></tr></table></figure><h3 id="5-排除特定文件"><a href="#5-排除特定文件" class="headerlink" title="5. 排除特定文件"></a>5. 排除特定文件</h3><p>有时候你可能想要在打包时排除特定文件或目录，以避免将其包含在归档中。你可以使用<code>--exclude</code>参数指定要排除的文件或目录的模式。例如，要打包<code>/home/user/documents</code>目录，但排除所有<code>.txt</code>文件，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cf documents.tar --exclude=&#x27;*.txt&#x27; /home/user/documents</span><br></pre></td></tr></table></figure><h3 id="6-保留文件权限和所有权"><a href="#6-保留文件权限和所有权" class="headerlink" title="6. 保留文件权限和所有权"></a>6. 保留文件权限和所有权</h3><p>在创建归档文件时，有时你可能希望保留原始文件的权限和所有权信息。这可以通过参数<code>--preserve-permissions</code>实现。例如，要创建一个保留权限和所有权的归档文件，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar --preserve-permissions -cf documents.tar /home/user/documents</span><br></pre></td></tr></table></figure><p>这将创建一个归档文件，其中包含了<code>/home/user/documents</code>目录下的所有内容，并保留了原始文件的权限和所有权。</p><h3 id="7-保留时间戳"><a href="#7-保留时间戳" class="headerlink" title="7. 保留时间戳"></a>7. 保留时间戳</h3><p>类似地，你也可以通过参数<code>--atime-preserve</code>来保留文件的访问时间戳。这在某些情况下可能很有用，例如备份目的。以下是一个示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar --atime-preserve -cf backup.tar /path/to/backup</span><br></pre></td></tr></table></figure><p>这将创建一个归档文件，其中包含了<code>/path/to/backup</code>目录下的内容，并保留了文件的访问时间戳。</p><h3 id="8-增量备份"><a href="#8-增量备份" class="headerlink" title="8. 增量备份"></a>8. 增量备份</h3><p>使用<code>tar</code>命令进行增量备份是一个常见的用例。增量备份只备份自上次备份以来发生更改的文件，这可以节省时间和存储空间。要创建增量备份，你可以结合使用<code>--listed-incremental</code>参数和一个状态文件。以下是一个示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar --create --file=backup-$(date +%Y%m%d).tar --listed-incremental=backup.snar /path/to/backup</span><br></pre></td></tr></table></figure><p>这将创建一个带有日期后缀的增量备份归档文件，并使用<code>backup.snar</code>文件来跟踪文件状态。</p><h3 id="9-使用文件列表"><a href="#9-使用文件列表" class="headerlink" title="9. 使用文件列表"></a>9. 使用文件列表</h3><p>有时候，你可能希望从一个文件列表中读取要包含在归档中的文件和目录。这可以通过参数<code>--files-from</code>实现。例如，如果你有一个包含文件列表的<code>files.txt</code>文件，可以运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cf backup.tar --files-from=files.txt</span><br></pre></td></tr></table></figure><p>这将根据<code>files.txt</code>中列出的路径创建一个归档文件。</p><h3 id="10-压缩级别控制"><a href="#10-压缩级别控制" class="headerlink" title="10. 压缩级别控制"></a>10. 压缩级别控制</h3><p>对于需要更多控制的情况，你可以使用不同的压缩级别来平衡压缩速度和压缩率。例如，对于gzip压缩，你可以使用参数<code>-z</code>的同时指定不同的压缩级别（1-9）。压缩级别越高，压缩率越高，但耗时也越长。以下是一个示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -czvf documents.tar.gz -9 /home/user/documents</span><br></pre></td></tr></table></figure><p>这将以最高压缩级别（9）创建gzip压缩的归档文件。</p><h1 id="wget命令—下载命令"><a href="#wget命令—下载命令" class="headerlink" title="wget命令—下载命令"></a>wget命令—下载命令</h1><h2 id="一、wget命令介绍"><a href="#一、wget命令介绍" class="headerlink" title="一、wget命令介绍"></a>一、wget命令介绍</h2><h3 id="1-wget命令简介"><a href="#1-wget命令简介" class="headerlink" title="1. wget命令简介"></a>1. wget命令简介</h3><p><code>wget</code> 是一个非交互式的网络下载工具，可以在命令行中使用。它支持从远程服务器下载文件，并提供了断点续传、递归下载、后台下载等功能。<code>wget</code> 是一个功能强大且灵活的工具，广泛用于下载文件、镜像网站等场景。</p><h3 id="2-wget命令的基本语法"><a href="#2-wget命令的基本语法" class="headerlink" title="2. wget命令的基本语法"></a>2. wget命令的基本语法</h3><p><code>wget</code> 命令的基本语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget [选项] [URL]</span><br></pre></td></tr></table></figure><p>其中，URL 是要下载的文件的地址。</p><ol><li>常用的wget命令选项<br>下面是一些常用的 wget 命令选项的说明：</li></ol><div class="table-container"><table><thead><tr><th style="text-align:center"><strong>参数</strong></th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">-O 文件名</td><td style="text-align:center">将下载的文件保存为指定的文件名</td></tr><tr><td style="text-align:center">-P 目录</td><td style="text-align:center">将下载的文件保存到指定的目录</td></tr><tr><td style="text-align:center">-c</td><td style="text-align:center">继续下载中断的文件，支持断点续传</td></tr><tr><td style="text-align:center">-r</td><td style="text-align:center">递归下载，下载指定 URL 中的所有链接</td></tr><tr><td style="text-align:center">-np</td><td style="text-align:center">不递归下载上级目录</td></tr><tr><td style="text-align:center">-nH</td><td style="text-align:center">不创建主机目录，将文件保存在当前目录</td></tr><tr><td style="text-align:center">-b</td><td style="text-align:center">后台下载，将下载任务放到后台执行</td></tr><tr><td style="text-align:center">-q</td><td style="text-align:center">静默模式，减少输出信息</td></tr><tr><td style="text-align:center">-v</td><td style="text-align:center">详细模式，增加输出信息</td></tr><tr><td style="text-align:center">-h<code>或</code>—help</td><td style="text-align:center">显示帮助信息，列出可用的选项和参数</td></tr><tr><td style="text-align:center">-y</td><td style="text-align:center">在执行操作时自动回答 “yes”，省去用户确认步骤</td></tr><tr><td style="text-align:center">–limit -rate</td><td style="text-align:center">下载大文件必要限速</td></tr><tr><td style="text-align:center">-i</td><td style="text-align:center">下载多个文件</td></tr></tbody></table></div><h3 id="4-常用的wget命令参数"><a href="#4-常用的wget命令参数" class="headerlink" title="4. 常用的wget命令参数"></a>4. 常用的wget命令参数</h3><p>下面是一些常用的 <code>wget</code> 命令参数的说明：</p><ul><li><code>URL</code>：要下载的文件的地址。</li><li><code>文件名</code>：要保存的文件名。</li><li><code>目录</code>：要保存的目录路径。</li></ul><h2 id="二、wget命令示例用法"><a href="#二、wget命令示例用法" class="headerlink" title="二、wget命令示例用法"></a>二、wget命令示例用法</h2><p>下面是一些 <code>wget</code> 命令的示例用法：</p><h3 id="1-下载文件"><a href="#1-下载文件" class="headerlink" title="1. 下载文件"></a>1. 下载文件</h3><p>下载指定 URL 的文件，并保存为指定的文件名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://example.com/file.zip -O myfile.zip</span><br></pre></td></tr></table></figure><h3 id="2-断点续传下载"><a href="#2-断点续传下载" class="headerlink" title="2. 断点续传下载"></a>2. 断点续传下载</h3><p>继续下载中断的文件，支持断点续传：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://example.com/file.zip</span><br></pre></td></tr></table></figure><h3 id="3-递归下载"><a href="#3-递归下载" class="headerlink" title="3. 递归下载"></a>3. 递归下载</h3><p>递归下载指定 URL 中的所有链接，并保存到指定的目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -r -np -nH --cut-dirs=2 http://example.com/dir/ -P /path/to/save</span><br></pre></td></tr></table></figure><h3 id="4-后台下载"><a href="#4-后台下载" class="headerlink" title="4. 后台下载"></a>4. 后台下载</h3><p>将下载任务放到后台执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -b http://example.com/file.zip</span><br></pre></td></tr></table></figure><h3 id="5-静默模式下载"><a href="#5-静默模式下载" class="headerlink" title="5. 静默模式下载"></a>5. 静默模式下载</h3><p>以静默模式下载文件，减少输出信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q http://example.com/file.zip</span><br></pre></td></tr></table></figure><h3 id="6-自动确认下载"><a href="#6-自动确认下载" class="headerlink" title="6. 自动确认下载"></a>6. 自动确认下载</h3><p>在执行操作时自动回答 “yes”，省去用户确认步骤：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -y http://example.com/file.zip</span><br></pre></td></tr></table></figure><h3 id="7-限速下载"><a href="#7-限速下载" class="headerlink" title="7.限速下载"></a>7.限速下载</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget –limit-rate=300k http://example.com/file.zip</span><br></pre></td></tr></table></figure><h3 id="8-下载多个文件"><a href="#8-下载多个文件" class="headerlink" title="8.下载多个文件"></a>8.下载多个文件</h3><p>首先，保存一份下载链接文件 </p><p>cat &gt; filelist.txt<br>url1<br>url2<br>url3<br>url4<br>接着使用这个文件和参数-i下载 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -i filelist.txt </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 命令介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux权限</title>
      <link href="/2024/06/09/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/permission/"/>
      <url>/2024/06/09/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/permission/</url>
      
        <content type="html"><![CDATA[<h1 id="linux权限"><a href="#linux权限" class="headerlink" title="linux权限"></a>linux权限</h1><p>[TOC]</p><h1 id="一、Shell命令以及运行原理"><a href="#一、Shell命令以及运行原理" class="headerlink" title="一、Shell命令以及运行原理"></a>一、Shell命令以及运行原理</h1><h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><p>Linux严格意义上说的是一个操作系统，我们称之为“核心（kernel） “ ，但我们一般不能直接使用kernel，而是通过kernel的“外壳”程序（shell），来与kernel沟通 </p><p>Shell（命令行解释器）的作用：</p><ol><li>操作系统的语言是机器语言，用户直接与操作系统沟通成本大，所以Shell将用户的命令翻译给核心（kernel）处理，并将核心的处理结果翻译给用户（提供良好的使用环境） </li><li>面对用户的不合意请求，操作系统会拒绝请求，以此来保护操作系统 </li></ol><p>Shell与bash：</p><p> Shell是命令行解释器的统称，而bash的具体的一种命令行解释器</p><h1 id="二、Linux权限的概念"><a href="#二、Linux权限的概念" class="headerlink" title="二、Linux权限的概念"></a>二、Linux权限的概念</h1><p>Linux下有两种用户：</p><ol><li>超级用户(root)：可以再linux系统下做任何事情，不受限制 </li><li><p>普通用户：在linux下做有限的事情 </p><p>注：超级用户的命令提示符是“#”，普通用户的命令提示符是“$” </p></li></ol><h1 id="三、Linux权限管理"><a href="#三、Linux权限管理" class="headerlink" title="三、Linux权限管理"></a>三、Linux权限管理</h1><h2 id="1、文件访问者的分类"><a href="#1、文件访问者的分类" class="headerlink" title="1、文件访问者的分类"></a>1、文件访问者的分类</h2><p>文件和文件目录的所有者： u—User 文件</p><p>文件目录的所有者所在的组的用户： g—Group </p><p>其它用户： o—Others </p><p>注：group的意义是在保证文件安全的前提下，进行组内协同</p><h2 id="2、文件类型和访问权限"><a href="#2、文件类型和访问权限" class="headerlink" title="2、文件类型和访问权限"></a>2、文件类型和访问权限</h2><p><img src="https://image.chenjichao.site/file/b036bba9b3341f5101116.png" alt="image-20220127162129941"></p><p><img src="https://image.chenjichao.site/file/abd8d739a041b86419f47.png" alt="image-20220127162809704" style="zoom: 200%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">d：文件夹</span><br><span class="line">-：普通文件</span><br><span class="line">l：软链接（类似Windows的快捷方式）</span><br><span class="line">b：块设备文件（例如硬盘、光驱等）</span><br><span class="line">p：管道文件</span><br><span class="line">c：字符设备文件（例如屏幕等串口设备）</span><br><span class="line">s：套接口文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">读（r）： Read对文件而言，具有读取文件内容的权限；对目录来说，具有浏览该目录信息的权限</span><br><span class="line">写（w）： Write对文件而言，具有修改文件内容的权限；对目录来说，具有删除移动目录内文件的权限</span><br><span class="line">执行（x）： execute对文件而言，具有执行文件的权限；对目录来说，具有进入目录的权限</span><br><span class="line">“—”：表示不具有该项权限  </span><br></pre></td></tr></table></figure><h2 id="3、文件权限值的表示方法"><a href="#3、文件权限值的表示方法" class="headerlink" title="3、文件权限值的表示方法"></a>3、文件权限值的表示方法</h2><ul><li>字符表示方法：</li></ul><p><img src="https://image.chenjichao.site/file/bfdfe5d5b74b0ae5cf582.png" alt="image-20220127163150998"></p><ul><li>8进制数值表示法：<img src="https://image.chenjichao.site/file/64bc37a770c2257a7fe4c.png" alt="image-20220127163215643"></li></ul><h2 id="4、目录的权限"><a href="#4、目录的权限" class="headerlink" title="4、目录的权限"></a>4、目录的权限</h2><p> 可执行权限: 如果目录没有可执行权限, 则无法cd到目录中 可读权限: 如果目录没有可读权限, 则无法用ls等命令查看目录中的文件内容 可写权限: 如果目录没有可写权限, 则无法在目录中创建文件, 也无法在目录中删除文件 注：只要用户具有目录的写权限, 用户就可以删除目录中的文件, 而不论这个用户是否有这个文件的写 权限</p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 基本特性 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bash转义符</title>
      <link href="/2024/06/06/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/bash/"/>
      <url>/2024/06/06/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E5%9F%BA%E6%9C%AC%E7%89%B9%E6%80%A7/bash/</url>
      
        <content type="html"><![CDATA[<h1 id="bash转义符"><a href="#bash转义符" class="headerlink" title="bash转义符"></a>bash转义符</h1><h5 id="b-转义后相当于按退格键（backspace）-但前提是”-b”后面存在字符，具体效果参考下方示例。"><a href="#b-转义后相当于按退格键（backspace）-但前提是”-b”后面存在字符，具体效果参考下方示例。" class="headerlink" title="\b 转义后相当于按退格键（backspace） ,但前提是”\b”后面存在字符，具体效果参考下方示例。"></a>\b 转义后相当于按退格键（backspace） ,但前提是”\b”后面存在字符，具体效果参考下方示例。</h5><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/image-20240612125205136.png" alt="image-20240612125205136"></p><p>使用echo命令输出”\b”转义字符，在”\b”后面存在字符的前提下，”\b”表示删除前一个字符，”\b\b”表示删除前两个字符。</p><p><img src="https://image.chenjichao.site/file/7ffcb703c82735ae85850.png" alt="img"></p><p>可以看到，上例中，在”\b”后面不存在任何字符时，”\b”并没有转义为”退格键”，当”\b”后面存在字符时，一个”\b”就相当于按一次backspace键。</p><h5 id="c-不换行输出，在”-c”后面不存在字符的情况下，作用相当于echo-n，具体效果参考下方示例。"><a href="#c-不换行输出，在”-c”后面不存在字符的情况下，作用相当于echo-n，具体效果参考下方示例。" class="headerlink" title="\c 不换行输出，在”\c”后面不存在字符的情况下，作用相当于echo -n，具体效果参考下方示例。"></a>\c 不换行输出，在”\c”后面不存在字符的情况下，作用相当于echo -n，具体效果参考下方示例。</h5><p>我们也可以使用\c转义符，表示不换行输出，但是当”\c”后面仍然存在字符时，”\c”后面的字符将不会被输出，如果”\c”后面不存在任何字符时，效果与使用”echo -n”相同,示例如下。</p><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/5c687f1ce2a96f3c10773b3f3e28438b.png" alt="img"></p><h5 id="n-换行"><a href="#n-换行" class="headerlink" title="\n 换行"></a>\n 换行</h5><h5 id="f-换行，但是换行后的新行的开头位置连接着上一行的行尾，具体效果查看示例；"><a href="#f-换行，但是换行后的新行的开头位置连接着上一行的行尾，具体效果查看示例；" class="headerlink" title="\f 换行，但是换行后的新行的开头位置连接着上一行的行尾，具体效果查看示例；"></a>\f 换行，但是换行后的新行的开头位置连接着上一行的行尾，具体效果查看示例；</h5><h5 id="v-与-f相同；"><a href="#v-与-f相同；" class="headerlink" title="\v 与\f相同；"></a>\v 与\f相同；<img src="https://image.chenjichao.site/file/81d3a38467c6f321557b1.png" alt="img"></h5><h5 id="t-转以后表示插入tab，即制表符；"><a href="#t-转以后表示插入tab，即制表符；" class="headerlink" title="\t 转以后表示插入tab，即制表符；"></a>\t 转以后表示插入tab，即制表符；</h5><h5 id="r-光标移至行首，但不换行，相当于使用”-r”以后的字符覆盖”-r”之前同等长度的字符，只看这段文字描述的话可能不容易理解，具体效果查看示例；"><a href="#r-光标移至行首，但不换行，相当于使用”-r”以后的字符覆盖”-r”之前同等长度的字符，只看这段文字描述的话可能不容易理解，具体效果查看示例；" class="headerlink" title="\r 光标移至行首，但不换行，相当于使用”\r”以后的字符覆盖”\r”之前同等长度的字符，只看这段文字描述的话可能不容易理解，具体效果查看示例；"></a>\r 光标移至行首，但不换行，相当于使用”\r”以后的字符覆盖”\r”之前同等长度的字符，只看这段文字描述的话可能不容易理解，具体效果查看示例；</h5><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/df30498df135595b8032acf24f9d388e.png" alt="img"></p><h5 id="表示插入”-”本身；"><a href="#表示插入”-”本身；" class="headerlink" title="\ 表示插入”\”本身；"></a>\ 表示插入”\”本身；</h5><p><img src="https://cjc729.oss-cn-beijing.aliyuncs.com/images/2b83936518b2ae0fbcd22c65e29c8132.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 基本特性 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hosts文件概述</title>
      <link href="/2024/06/06/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/hosts/"/>
      <url>/2024/06/06/%E7%94%B5%E5%AD%90%E5%8F%96%E8%AF%81/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/linux/linux%E7%9F%A5%E8%AF%86/%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6/hosts/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="hosts文件概述"><a href="#hosts文件概述" class="headerlink" title="hosts文件概述"></a>hosts文件概述</h1><p>​    hosts文件是linux系统中负责ip地址与域名快速解析的文件，以ASCII格式保存在/etc目录下，文件名为hosts，不同的linux版本，文件也可能不同，比如Debian的对应文件是/etc/hostname。hosts文件包含了ip地址和主机名之间的映射，包括主机名的别名，在没有域名服务器的情况下，系统上的所有网络程序都通过查询该文件来解析对应于某个主机名的ip地址，否则就需要使用DNS服务程序来解决。通常可以将常用的域名和ip地址映射加入到hosts文件中，实现快速方便的访问<br>     优先级：dns缓存&gt;hosts&gt;dns服务<br>     hosts：the static table lookup for host name（主机名查询静态表）</p><h2 id="在系统中的位置：-etc-hosts"><a href="#在系统中的位置：-etc-hosts" class="headerlink" title="在系统中的位置：/etc/hosts"></a>在系统中的位置：/etc/hosts</h2><h1 id="文件作用"><a href="#文件作用" class="headerlink" title="文件作用"></a>文件作用</h1><h3 id="1-加快域名解析"><a href="#1-加快域名解析" class="headerlink" title="1 加快域名解析"></a>1 加快域名解析</h3><p>​    对于经常访问的网站，我们可以通过在hosts文件中配置域名和 IP 的映射关系，提高域名的解析速度。由于有了映射关系，当我们输入域名后，计算机就能够快速解析出 IP 地址，而不用请求网络上的 DNS 服务器。</p><h3 id="2-构建映射关系"><a href="#2-构建映射关系" class="headerlink" title="2 构建映射关系"></a>2 构建映射关系</h3><p>​    在很多单位中，都会有自己局域网，而且还会有不同的服务器提供给公司的成员使用。但由于局域网中一般很少架设 DNS 服务器，因此在访问这些服务器时，就需要输入难记的 IP 地址，这对大家来说相当麻烦。因此，我们可以分别给这些服务器取个容易记住的名字，然后在hosts文件中建立 IP 映射，这样在以后访问的时候，只要输入这个服务器的名字就 OK 啦！</p><h3 id="3-屏蔽垃圾网站"><a href="#3-屏蔽垃圾网站" class="headerlink" title="3 屏蔽垃圾网站"></a>3 屏蔽垃圾网站</h3><p>​    现在有很多网站，在不经过我们同意的时候，就将各种各样的插件安装到我们的计算机中，其中不乏病毒和木马。对于这些网站，我们就可以利用hosts文件把这些网站的域名映射到一个错误的 IP 或本地计算机的 IP 地址上，这样就可以达到禁止访问的目的了。</p><h1 id="文件内容修改"><a href="#文件内容修改" class="headerlink" title="文件内容修改"></a>文件内容修改</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">202.108.22.5 www.baidu.com</span><br></pre></td></tr></table></figure><p>此时将202.108.22.5与百度域名建立联系</p>]]></content>
      
      
      <categories>
          
          <category> 电子取证 </category>
          
          <category> 操作系统 </category>
          
          <category> linux </category>
          
          <category> linux知识 </category>
          
          <category> 系统文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>替换密码</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%9B%BF%E6%8D%A2%E5%AF%86%E7%A0%81/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/%E6%9B%BF%E6%8D%A2%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p> 先介绍两种简单的替换密码</p><h1 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>是一种替换式加密，而这种替换是固定的</p><h2 id="破解方法"><a href="#破解方法" class="headerlink" title="破解方法"></a>破解方法</h2><h3 id="1-利用英语字母的频率"><a href="#1-利用英语字母的频率" class="headerlink" title="(1)利用英语字母的频率"></a>(1)利用英语字母的频率</h3><div class="table-container"><table><thead><tr><th>字母</th><th>字母频率</th><th>单词频率</th></tr></thead><tbody><tr><td>e</td><td>11.42%</td><td>64.52%</td></tr><tr><td>a</td><td>8.56%</td><td>54.08%</td></tr><tr><td>i</td><td>7.94%</td><td>50.39%</td></tr><tr><td>r</td><td>7.51%</td><td>50.24%</td></tr><tr><td>t</td><td>7.46%</td><td>48.05%</td></tr><tr><td>o</td><td>7.12%</td><td>44.44%</td></tr><tr><td>n</td><td>6.41%</td><td>42.77%</td></tr><tr><td>s</td><td>5.55%</td><td>36.91%</td></tr><tr><td>l</td><td>5.52%</td><td>37.03%</td></tr><tr><td>c</td><td>4.74%</td><td>32.44%</td></tr><tr><td>u</td><td>3.66%</td><td>26.42%</td></tr><tr><td>p</td><td>3.27%</td><td>23.05%</td></tr><tr><td>m</td><td>3.22%</td><td>22.82%</td></tr><tr><td>d</td><td>3.13%</td><td>22.52%</td></tr><tr><td>h</td><td>2.76%</td><td>20.04%</td></tr><tr><td>g</td><td>2.30%</td><td>16.47%</td></tr><tr><td>b</td><td>2.12%</td><td>15.70%</td></tr><tr><td>y</td><td>2.00%</td><td>15.15%</td></tr><tr><td>f</td><td>1.47%</td><td>10.22%</td></tr><tr><td>v</td><td>1.07%</td><td>8.24%</td></tr><tr><td>w</td><td>0.94%</td><td>7.15%</td></tr><tr><td>k</td><td>0.84%</td><td>6.37%</td></tr><tr><td>x</td><td>0.35%</td><td>2.72%</td></tr><tr><td>z</td><td>0.24%</td><td>1.66%</td></tr><tr><td>q</td><td>0.23%</td><td>1.85%</td></tr><tr><td>j</td><td>0.15%</td><td>1.17%</td></tr></tbody></table></div><h3 id="2-字母组的使用频率"><a href="#2-字母组的使用频率" class="headerlink" title="(2)字母组的使用频率"></a>(2)字母组的使用频率</h3><p>用出现频繁的字母组</p><p>如二字母组：an、he…………</p><h1 id="维吉尼亚密码"><a href="#维吉尼亚密码" class="headerlink" title="维吉尼亚密码"></a>维吉尼亚密码</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>用单词作为密钥加密</p><p>如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k=CRYPTO</span><br><span class="line">m=WHATANTCEDAYTODAY</span><br></pre></td></tr></table></figure><p>先将k复制粘贴、直至长度覆盖信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">k=CRYPTOCRYPTOCRYPT</span><br><span class="line">m=WHATANTCEDAYTODAY</span><br></pre></td></tr></table></figure><p><img src="https://image.chenjichao.site/file/7e2b6058f8bfdcbe28c43.jpg" alt="在这里插入图片描述"></p><p>信息字母再根据单词表将密钥字母加到之上模除25得</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c=YYYITBVTCSTMVFBPR</span><br></pre></td></tr></table></figure><p>可以参考此表：</p><p><img src="https://image.chenjichao.site/file/7abd3f7d7c17ec37bcca9.png" alt="在这里插入图片描述"></p><h2 id="破解方法-1"><a href="#破解方法-1" class="headerlink" title="破解方法"></a>破解方法</h2><h2 id="利用英语字母的频率"><a href="#利用英语字母的频率" class="headerlink" title="利用英语字母的频率"></a>利用英语字母的频率</h2><p>前提：知道k的长度L</p><p>先抓取每L长度的密文的第一个字母，此时密文所加密的值是一致的，运用字母频率，找出频率最高的字母，该字母很有可能是e的加密，此时便可以得出第一个字母加密方式，以此类推。最终得出结论</p><p>所以需要先破解L的值</p><p>用假设法直到破解出有意义的信息为止，此时便已完成破解。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学基础</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/crypto/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/crypto/</url>
      
        <content type="html"><![CDATA[<h1 id="密码学基础"><a href="#密码学基础" class="headerlink" title="密码学基础"></a>密码学基础</h1><p>[toc]</p><h2 id="1-体系"><a href="#1-体系" class="headerlink" title="1.体系"></a>1.体系</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">graph TD;</span><br><span class="line">密码学---&gt;密码编码学;</span><br><span class="line">密码学--&gt;密码分析学;</span><br><span class="line">密码编码学--&gt;对称加密体制;</span><br><span class="line">密码编码学--&gt;非对称加密体制;</span><br><span class="line">密码编码学--&gt;安全协议;</span><br><span class="line">对称加密体制--&gt;流加密算法;</span><br><span class="line">对称加密体制--&gt;分组加密算法;</span><br></pre></td></tr></table></figure><h2 id="2-对称加密体制"><a href="#2-对称加密体制" class="headerlink" title="2.对称加密体制"></a>2.对称加密体制</h2><p>加密双方共享同一个密钥来进行加解密计算</p><p><strong>模式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">id0[m]</span><br><span class="line">    id1[&quot;E(k,m)=c&quot;]</span><br><span class="line">    id2[&quot;D(k,c)=m&quot;]</span><br><span class="line">    id3[k]</span><br><span class="line">    id3--&gt;Alice</span><br><span class="line">    id0--&gt;Alice--&gt; id1--&gt;信道--&gt;传输--&gt;Bob--&gt;id2</span><br><span class="line">    Bob--&gt;id3</span><br></pre></td></tr></table></figure><p>安全性在密钥的保密</p><p>一次一密(无条件安全)，但是密钥长度会超过明文长度</p><h3 id="流密码"><a href="#流密码" class="headerlink" title="流密码"></a>流密码</h3><p>需要密钥流生成器，生成伪随机序列</p><p>漏洞：1.可以通过一个已知明文来推出另一个明文</p><p>​            2.相同明文产生相同密文</p><h3 id="分组密码"><a href="#分组密码" class="headerlink" title="分组密码"></a>分组密码</h3><p>逐分组进行处理，对明文分组进行加密，产生密文。</p><p>通过迭代来产生密文。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">graph LR;</span><br><span class="line"></span><br><span class="line">id1[&quot;R(k1,·)&quot;];</span><br><span class="line">id2[&quot;R(k2,·)&quot;];</span><br><span class="line">idn[&quot;R(kn,·)&quot;];</span><br><span class="line">i[&quot;…………&quot;];</span><br><span class="line">m--&gt;id1--&gt;id2--&gt;i--&gt;idn;</span><br><span class="line">k1--&gt;id1</span><br><span class="line">k2--&gt;id2</span><br><span class="line">kn--&gt;idn</span><br><span class="line">    k--&gt;k1</span><br><span class="line">    k--&gt;k2</span><br><span class="line">    k--&gt;kn</span><br></pre></td></tr></table></figure><h2 id="3-非对称加密体系"><a href="#3-非对称加密体系" class="headerlink" title="3.非对称加密体系"></a>3.非对称加密体系</h2><p>加密双方使用一对密钥来进行加解密计算</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口令破解</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/passwd/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/passwd/</url>
      
        <content type="html"><![CDATA[<h1 id="口令破解"><a href="#口令破解" class="headerlink" title="口令破解"></a>口令破解</h1><p>[toc]</p><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>是常见的认证方式，俗称：“密码”。</p><p>当被认证对象要求访问提供服务时，系统要求被访问者提交口令，收到口令后将其与数据库中储存的用户信息进行对比，以确认是否合法。</p><h2 id="二、常见攻击方法"><a href="#二、常见攻击方法" class="headerlink" title="二、常见攻击方法"></a>二、常见攻击方法</h2><h3 id="1-弱口令"><a href="#1-弱口令" class="headerlink" title="1.弱口令"></a>1.弱口令</h3><p>入侵者通过扫描大量主机，找出存在的弱口令主机</p><h3 id="2-口令监听"><a href="#2-口令监听" class="headerlink" title="2.口令监听"></a>2.口令监听</h3><p>通过嗅探软件，来监听网络中的数据表获得密码，如果获取到的密码时加密的，还需要解密</p><h3 id="3-社会工程学"><a href="#3-社会工程学" class="headerlink" title="3.社会工程学"></a>3.社会工程学</h3><p>通过欺诈、人机关系破解</p><h3 id="4-暴力破解"><a href="#4-暴力破解" class="headerlink" title="4.暴力破解"></a>4.暴力破解</h3><p>尝试所有字符的组合方式，是密码的终结者</p><h3 id="5-简单口令拆解"><a href="#5-简单口令拆解" class="headerlink" title="5.简单口令拆解"></a>5.简单口令拆解</h3><p>使用自己、家人的生日等，很容易猜到密码</p><h3 id="6-字典攻击"><a href="#6-字典攻击" class="headerlink" title="6.字典攻击"></a>6.字典攻击</h3><p>尝试字典中的每一个单词，可以是一个字典或常用口令的字典数据库。词典实际上是一个单词列表文件，根据人们的习惯设计的</p><h2 id="三、windows口令破解"><a href="#三、windows口令破解" class="headerlink" title="三、windows口令破解"></a>三、windows口令破解</h2><h3 id="1-windows中与口令相关的安全机制"><a href="#1-windows中与口令相关的安全机制" class="headerlink" title="1.windows中与口令相关的安全机制"></a>1.windows中与口令相关的安全机制</h3><p>windows本地安全授权子系统(LSASS)负责有关安全方面的功能</p><p>该系统将对用户的安全管理使用安全账号管理器(SAM)的机制</p><p>sam是锁死的</p><p><strong>1.可以引导另一个操作系统，利用NTFSOOS的系统驱动来获取访问权限，抓出SAM</strong></p><p><strong>2.获取备份sam</strong></p><h3 id="2-windows的加密方式"><a href="#2-windows的加密方式" class="headerlink" title="2.windows的加密方式"></a>2.windows的加密方式</h3><p>windows NT对用户采用两套：单向LM散列算法和单项NT散列算法</p><h3 id="3-攻击方式"><a href="#3-攻击方式" class="headerlink" title="3.攻击方式"></a>3.攻击方式</h3><h4 id="1-提取sam文件并破解"><a href="#1-提取sam文件并破解" class="headerlink" title="1.提取sam文件并破解"></a>1.提取sam文件并破解</h4><h4 id="2-替换当前的sam文件"><a href="#2-替换当前的sam文件" class="headerlink" title="2.替换当前的sam文件"></a>2.替换当前的sam文件</h4><h4 id="3-使用口令修改软件"><a href="#3-使用口令修改软件" class="headerlink" title="3.使用口令修改软件"></a>3.使用口令修改软件</h4><h4 id="4-替换屏保程序"><a href="#4-替换屏保程序" class="headerlink" title="4.替换屏保程序"></a>4.替换屏保程序</h4>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>现代密码学</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%8E%B0%E4%BB%A3%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="对称加密与非对称加密"><a href="#对称加密与非对称加密" class="headerlink" title="对称加密与非对称加密"></a>对称加密与非对称加密</h1><h2 id="一、对称加密"><a href="#一、对称加密" class="headerlink" title="一、对称加密"></a>一、对称加密</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><p>在密码学中，对称加密是一种使用相同密钥进行加密和解密的加密方法。</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><ul><li><strong>密钥管理</strong>：对称加密使用相同的密钥进行加密和解密，密钥的安全性至关重要。如果密钥被泄露，所有使用该密钥加密的数据都将面临风险。</li><li><strong>速度</strong>：对称加密算法通常比非对称加密算法快，适合加密大量数据。</li><li><strong>安全性</strong>：安全性依赖于密钥长度和算法本身的强度。现代算法（如 AES）在合理的密钥长度下被认为是非常安全的。</li></ul><h3 id="2-分类"><a href="#2-分类" class="headerlink" title="2.分类"></a>2.分类</h3><ol><li><h4 id="流密码"><a href="#流密码" class="headerlink" title="流密码"></a><strong>流密码</strong></h4><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><ol><li><strong>逐位加密</strong>：流密码将明文数据逐位或逐字节与密钥流进行异或操作。每个明文位（或字节）都与密钥流中的相应位（或字节）进行结合，从而生成密文。</li><li><strong>密钥流生成</strong>：密钥流通常是通过伪随机数生成器（PRNG）或其他算法从密钥派生而来。</li><li><strong>适用于实时数据</strong>：由于其逐位加密的特性，流密码特别适合实时数据流（如音频或视频流）的加密。</li></ol><h5 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h5><ol><li><strong>速度快</strong>：流密码通常比块密码（如 AES）更快，适合对性能要求高的应用。</li><li><strong>内存占用低</strong>：流密码可以在处理数据时只需存储当前的密钥流，而不需要存储整个数据块。</li><li><strong>灵活性</strong>：可以对任意长度的数据进行加密，适合动态长度数据的场景。</li></ol><h5 id="常用的流密码算法"><a href="#常用的流密码算法" class="headerlink" title="常用的流密码算法"></a>常用的流密码算法</h5><ol><li><strong>RC4</strong>：一种广泛使用的流密码，虽然速度快，但由于某些安全漏洞，已不再推荐使用。</li><li><strong>Salsa20 和 ChaCha20</strong>：这两种算法提供了更好的安全性和性能，ChaCha20 特别适合在低功耗设备上使用。</li></ol><h5 id="安全性考虑"><a href="#安全性考虑" class="headerlink" title="安全性考虑"></a>安全性考虑</h5><ul><li><strong>密钥管理</strong>：流密码的安全性依赖于密钥的随机性和保密性。如果密钥流重复（即使用相同的密钥加密多个数据流），可能会导致安全漏洞。</li><li><strong>密钥长度</strong>：使用足够长且随机的密钥是确保流密码安全性的关键</li></ul></li><li><h4 id="组密码"><a href="#组密码" class="headerlink" title="组密码"></a><strong>组密码</strong></h4><h5 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h5><ol><li><strong>固定块大小</strong>：组密码将输入数据分为固定大小的块。如果最后一个块不足以填满，可以使用填充方案（如 PKCS#7）来填充。</li><li><strong>加密模式</strong>：块密码可以与多种加密模式结合使用，如：<ul><li><strong>电子密码本模式（ECB）</strong>：每个块独立加密，容易受到模式攻击。</li><li><strong>密码块链模式（CBC）</strong>：当前块的加密依赖于前一个块，增强了安全性。</li><li><strong>计数器模式（CTR）</strong>：将块密码转换为流密码，通过对计数器进行加密来生成密钥流。</li></ul></li><li><strong>密钥管理</strong>：组密码使用相同的密钥对所有块进行加密和解密，因此密钥的安全性至关重要。</li></ol><h4 id="常用的块密码算法"><a href="#常用的块密码算法" class="headerlink" title="常用的块密码算法"></a>常用的块密码算法</h4><ol><li><strong>AES（高级加密标准）</strong>：目前最常用的块密码，支持128位、192位和256位密钥长度，广泛应用于数据加密。</li><li><strong>DES（数据加密标准）</strong>：早期的标准，使用56位密钥，因安全性不足而逐渐被淘汰。</li><li><strong>3DES（Triple DES）</strong>：对 DES 进行三次加密，安全性较高，但速度较慢。</li><li><strong>Blowfish 和 Twofish</strong>：两者都是快速且安全的块密码，适用于各种应用场景。</li></ol><h4 id="安全性考虑-1"><a href="#安全性考虑-1" class="headerlink" title="安全性考虑"></a>安全性考虑</h4><ul><li><strong>密钥长度</strong>：使用足够长的密钥（如 AES 的128位、192位或256位）可以确保安全性。</li><li><strong>加密模式选择</strong>：选择合适的加密模式非常重要，某些模式（如 ECB）可能会导致安全漏洞。</li><li><strong>填充方案</strong>：在处理不完整块时，采用安全的填充方案是必要的</li></ul></li></ol><h3 id="3-常见的对称加密算法"><a href="#3-常见的对称加密算法" class="headerlink" title="3.常见的对称加密算法"></a>3.常见的对称加密算法</h3><ol><li><strong>AES (Advanced Encryption Standard):</strong><ul><li>AES 是当前最广泛使用的对称加密算法，被认为是非常安全的。</li><li>它支持 128、192 和 256 位的密钥长度。</li><li>AES 可以在多种模式下工作，如 ECB、CBC、CFB、OFB、GCM 等，其中 GCM 提供认证加密。</li><li>类型：块密码</li></ul></li><li><strong>DES (Data Encryption Standard):</strong><ul><li>DES 是一种较旧的对称加密算法，使用 56 位密钥。</li><li>由于密钥长度较短，DES 现在被认为是不安全的。</li><li>类型：块密码</li></ul></li><li><strong>3DES (Triple DES):</strong><ul><li>3DES 是对 DES 的增强，通过三次应用 DES 加密来增加安全性。</li><li>它使用 112 或 168 位的有效密钥长度。</li><li>尽管比 DES 更安全，但由于速度慢和密钥长度限制，3DES 逐渐被淘汰。</li><li>类型：块密码</li></ul></li><li><strong>Blowfish:</strong><ul><li>Blowfish 是一种快速的分组加密算法，支持可变的密钥长度（32 到 448 位）。</li><li>它在某些应用中仍被使用，但逐渐被更现代的算法取代。</li><li>块大小：64位</li></ul></li><li><strong>Twofish:</strong><ul><li>Twofish 是 Blowfish 的继任者，支持 128、192 和 256 位密钥。</li><li>它是 AES 评估过程中被考虑的算法之一，虽然没有被选中，但仍被认为是安全的。</li><li>块大小：128位</li></ul></li><li><strong>RC4:</strong><ul><li>RC4 是一种流加密算法，曾广泛用于 SSL/TLS 和 WEP。</li><li>由于已知的安全漏洞，RC4 现在不再被推荐用于新的应用。</li><li>类型：流密码</li></ul></li><li><strong>ChaCha20:</strong><ul><li>ChaCha20 是一种现代流加密算法，设计用于高效和安全的加密。</li><li>它在某些情况下被认为比 AES 更适合于软件实现。</li><li>类型：流密码</li></ul></li></ol><h2 id="二、非对称加密"><a href="#二、非对称加密" class="headerlink" title="二、非对称加密"></a>二、非对称加密</h2><h3 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a>1.概念</h3><p>非对称加密（也称为公钥加密）使用一对密钥：公钥和私钥。公钥用于加密数据，私钥用于解密数据。</p><ul><li><strong>密钥管理</strong>：非对称加密使用一对密钥（公钥和私钥），公钥可以公开，而私钥必须保密。这种机制使得密钥管理更为灵活。</li><li><strong>速度</strong>：非对称加密通常比对称加密慢，不适合加密大量数据。它更常用于密钥交换和数字签名。</li><li><strong>安全性</strong>：非对称加密的安全性基于数学问题（如大整数因数分解或离散对数问题），在足够的密钥长度下（如 RSA 的2048位或 ECC 的256位），其安全性也相当高。</li></ul><h3 id="2-常见的非对称加密"><a href="#2-常见的非对称加密" class="headerlink" title="2.常见的非对称加密"></a>2.常见的非对称加密</h3><ol><li><strong>RSA (Rivest-Shamir-Adleman):</strong><ul><li>RSA 是最广泛使用的非对称加密算法之一。</li><li>它基于大整数的因数分解问题，其安全性随着密钥长度的增加而提高。</li><li>常用于密钥交换、数字签名和加密小块数据。</li></ul></li><li><strong>ECC (Elliptic Curve Cryptography):</strong><ul><li>ECC 基于椭圆曲线数学，比 RSA 提供相同安全级别所需的密钥长度更短。</li><li>由于更短的密钥长度，ECC 在计算和存储方面更高效。</li><li>常用于移动设备和其他资源受限的环境。</li></ul></li><li><strong>DSA (Digital Signature Algorithm):</strong><ul><li>DSA 是一种用于数字签名的标准算法。</li><li>它基于离散对数问题，主要用于签名而非加密。</li></ul></li><li><strong>ElGamal:</strong><ul><li>ElGamal 是基于离散对数问题的加密算法。</li><li>它可以用于加密和数字签名，但通常由于其密文扩展性而不用于加密大数据。</li></ul></li><li><strong>Diffie-Hellman (DH):</strong><ul><li>DH 是一种密钥交换协议，允许两个参与者在不安全的信道上安全地协商共享密钥。</li><li>它本身不用于加密或签名，而是用于安全密钥交换。</li></ul></li><li><strong>EdDSA (Edwards-curve Digital Signature Algorithm):</strong><ul><li>EdDSA 是一种基于椭圆曲线的数字签名算法，旨在提供更高的性能和安全性。</li><li>常用于需要快速签名验证的应用。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>URI/URL基础</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/web-basic/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/web-basic/</url>
      
        <content type="html"><![CDATA[<h1 id="URI-VS-URL"><a href="#URI-VS-URL" class="headerlink" title="URI VS URL"></a>URI VS URL</h1><p>在web中每次请求的目标叫一个资源，可以有照片、视频等</p><p>URI：在文本中都有一个统一标识符确定，这个标识符称为统一资源标识符，是一组字符串</p><p>URL：最常用的uri形式，统一资源定位符，也叫web地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.buaa.edu.cn:443/~user/add.php?q=x&amp;user=m</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> 网络嗅探 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wireshark</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/wireshark/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/wireshark/</url>
      
        <content type="html"><![CDATA[<h1 id="wireshark"><a href="#wireshark" class="headerlink" title="wireshark"></a>wireshark</h1><p>[toc]</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>是目前世界上最受欢迎的协议分析软件，可将捕获的各种各样的二进制数据翻译为人们易读和理解的文字和图标等形式，极大方便了对网络活动的检测和教学实验。</p><h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><h3 id="1-过滤器"><a href="#1-过滤器" class="headerlink" title="1.过滤器"></a>1.过滤器</h3><h4 id="1-捕获过滤器"><a href="#1-捕获过滤器" class="headerlink" title="(1)捕获过滤器"></a>(1)捕获过滤器</h4><p>是wireshark的第一层过滤器，确定捕获哪些包、舍弃哪些包</p><h5 id="规则："><a href="#规则：" class="headerlink" title="规则："></a>规则：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">协议 方向 主机/端口</span><br></pre></td></tr></table></figure><h5 id="1-protocol-可能为http、https、ftp、udp、tcp、ipv4、ipv6、arp、icmp等协议，如果没说明，则默认为支持所有协议"><a href="#1-protocol-可能为http、https、ftp、udp、tcp、ipv4、ipv6、arp、icmp等协议，如果没说明，则默认为支持所有协议" class="headerlink" title="(1)protocol:可能为http、https、ftp、udp、tcp、ipv4、ipv6、arp、icmp等协议，如果没说明，则默认为支持所有协议"></a>(1)protocol:可能为http、https、ftp、udp、tcp、ipv4、ipv6、arp、icmp等协议，如果没说明，则默认为支持所有协议</h5><h5 id="2-dirtection-可能的值为src、dst、src-and-dst、src-or-dst-默认为src-or-dst"><a href="#2-dirtection-可能的值为src、dst、src-and-dst、src-or-dst-默认为src-or-dst" class="headerlink" title="(2)dirtection:可能的值为src、dst、src and dst、src or dst 默认为src or dst"></a>(2)dirtection:可能的值为src、dst、src and dst、src or dst 默认为src or dst</h5><h5 id="3-host-可能的值net、port、host、portange，默认为host"><a href="#3-host-可能的值net、port、host、portange，默认为host" class="headerlink" title="(3)host:可能的值net、port、host、portange，默认为host"></a>(3)host:可能的值net、port、host、portange，默认为host</h5><h5 id="4-逻辑运算符-not、and、or-not具有最高优先级，and、or优先级相同，运算从左往右"><a href="#4-逻辑运算符-not、and、or-not具有最高优先级，and、or优先级相同，运算从左往右" class="headerlink" title="(4)逻辑运算符:not、and、or,not具有最高优先级，and、or优先级相同，运算从左往右"></a>(4)逻辑运算符:not、and、or,not具有最高优先级，and、or优先级相同，运算从左往右</h5><h4 id="2-显示过滤器"><a href="#2-显示过滤器" class="headerlink" title="(2)显示过滤器"></a>(2)显示过滤器</h4><p>是wireshark的第二层过滤器，在捕获过滤器上显示符合规则的封包信息</p><h5 id="1-比较运算符与逻辑运算符"><a href="#1-比较运算符与逻辑运算符" class="headerlink" title="(1)比较运算符与逻辑运算符"></a>(1)比较运算符与逻辑运算符</h5><h5 id="2-ip地址来源"><a href="#2-ip地址来源" class="headerlink" title="(2)ip地址来源:"></a>(2)ip地址来源:</h5><p>​    ip.addr:来源ip地址或者目标ip地址</p><p>​    ip.src:来源ip地址</p><p>​    ip.dst:目标ip地址</p><h5 id="3-协议过滤"><a href="#3-协议过滤" class="headerlink" title="(3)协议过滤"></a>(3)协议过滤</h5><p>​    可以使用arp、ip、icmp、udp、tcp、bootp、dns等</p><h3 id="2-封包列表"><a href="#2-封包列表" class="headerlink" title="2.封包列表"></a>2.封包列表</h3><p>显示抓到的所有数据表，包括编号、时间戳、源地址、目标地址、协议、长度以及封包信息</p><h4 id="1-frame-物理层的数据帧概述"><a href="#1-frame-物理层的数据帧概述" class="headerlink" title="(1)frame:物理层的数据帧概述"></a>(1)frame:物理层的数据帧概述</h4><h4 id="2-ethernet-II-数据链路层以太网的数据分析"><a href="#2-ethernet-II-数据链路层以太网的数据分析" class="headerlink" title="(2)ethernet II:数据链路层以太网的数据分析"></a>(2)ethernet II:数据链路层以太网的数据分析</h4><h4 id="3-internet-protocol-version-4-互联网层ip包头部信息"><a href="#3-internet-protocol-version-4-互联网层ip包头部信息" class="headerlink" title="(3)internet protocol version 4:互联网层ip包头部信息"></a>(3)internet protocol version 4:互联网层ip包头部信息</h4><h4 id="4-transmission-control-protocol-传输层的数据头部信息"><a href="#4-transmission-control-protocol-传输层的数据头部信息" class="headerlink" title="(4)transmission control protocol:传输层的数据头部信息"></a>(4)transmission control protocol:传输层的数据头部信息</h4><h4 id="5-hypertext-transfer-protocol-应用层的信息"><a href="#5-hypertext-transfer-protocol-应用层的信息" class="headerlink" title="(5)hypertext transfer protocol:应用层的信息"></a>(5)hypertext transfer protocol:应用层的信息</h4><h3 id="3-封包详细信息"><a href="#3-封包详细信息" class="headerlink" title="3.封包详细信息"></a>3.封包详细信息</h3><h3 id="4-16进制数据"><a href="#4-16进制数据" class="headerlink" title="4.16进制数据"></a>4.16进制数据</h3><h3 id="5-地址栏"><a href="#5-地址栏" class="headerlink" title="5.地址栏"></a>5.地址栏</h3>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> 网络嗅探 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络嗅探 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS安全</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E/DNS/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E/DNS/</url>
      
        <content type="html"><![CDATA[<h2 id="两类攻击者"><a href="#两类攻击者" class="headerlink" title="两类攻击者"></a>两类攻击者</h2><p>被动攻击者(窃听者)：不会影响两者之间的通讯，只是想获取信息</p><p>主动攻击者：会干扰两者的通讯</p><h2 id="安全目标"><a href="#安全目标" class="headerlink" title="安全目标"></a>安全目标</h2><h3 id="CIA："><a href="#CIA：" class="headerlink" title="CIA："></a>CIA：</h3><p>C(confidentiality):即在有主被者攻击情况下，无法获得网络中的内容</p><p>I(Integrity):攻击者无法篡改网络通信的内容</p><p>A(Authentication):通信双方是正确的主题</p><h1 id="针对域名系统的攻击"><a href="#针对域名系统的攻击" class="headerlink" title="针对域名系统的攻击"></a>针对域名系统的攻击</h1><p><strong>1、输入url地址时，浏览器会询问本地的域名解析器</strong></p><p><strong>2.本地域名解析器会询问根根域名解析器</strong></p><p><strong>3.根域名解析器会返回org服务器域名解析器的相应地址</strong></p><p><strong>4.本地域名解析器会根据地址找到.org域名服务器询问</strong></p><p><strong>5..org域名服务器会返回域名服务器地址</strong></p><p><strong>6.本地域名解析器再根据该地址寻找所需服务器</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">缓存--&gt;|直接查询|本地域名解析器</span><br><span class="line">    电脑 ---&gt; 本地域名解析器   </span><br><span class="line">    本地域名解析器--&gt;|记录|缓存</span><br><span class="line">    本地域名解析器--&gt;根域名解析器</span><br><span class="line">    根域名解析器--&gt;|.org服务器地址 NS xxx.xx.xxx.xx|本地域名解析器</span><br><span class="line">    本地域名解析器--&gt;.org域名解析器</span><br><span class="line">    .org域名解析器--&gt;|域名服务器地址 NS xxx.xx.xxx.xx|本地域名解析器</span><br><span class="line">    本地域名解析器--&gt;域名服务器</span><br><span class="line">    域名服务器--&gt;|A www=xxx.xx.xxx.xx|本地域名解析器</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>NS服务器记录：由根目录和.org服务器提供的ip地址</p><p>地址记录：由域名服务器返回的</p><h2 id="攻击方向"><a href="#攻击方向" class="headerlink" title="攻击方向"></a>攻击方向</h2><p><strong>一、对查询过程的信息干扰</strong></p><p><strong>二、入侵域名服务器</strong></p><p><strong>三、DNS缓存攻击（对QID）</strong></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> 协议漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 协议安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/web/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/web/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="一、利用搜索引擎收集信息"><a href="#一、利用搜索引擎收集信息" class="headerlink" title="一、利用搜索引擎收集信息"></a>一、利用搜索引擎收集信息</h1><h2 id="1-利用谷歌引擎搜索"><a href="#1-利用谷歌引擎搜索" class="headerlink" title="1.利用谷歌引擎搜索"></a>1.利用谷歌引擎搜索</h2><p>可以通过特定语法，查询内容丰富的信息，或查到远程服务器的一些敏感信息，造成信息泄露</p><h3 id="常用语法："><a href="#常用语法：" class="headerlink" title="常用语法："></a>常用语法：</h3><h4 id="1-intitle-关键字"><a href="#1-intitle-关键字" class="headerlink" title="(1)intitle:关键字:"></a>(1)intitle:关键字:</h4><ul><li><p><strong>语法含义：搜索网页标题中包含关键字的网页*</strong></p></li><li><p>若查询一个以上关键字，用”allintitle”代替”intitle”</p></li></ul><h4 id="2-inurl-关键字"><a href="#2-inurl-关键字" class="headerlink" title="(2)inurl:关键字:"></a>(2)inurl:关键字:</h4><ul><li><strong>语法含义：搜索URL中包含关键字的网页</strong></li><li>若查询一个以上关键字，用”allinurl”代替”inurl”</li></ul><h4 id="3-site-关键字"><a href="#3-site-关键字" class="headerlink" title="(3)site:关键字:"></a>(3)site:关键字:</h4><ul><li><strong>语法含义：在指定的站点搜索</strong></li></ul><p>如：联系方式 site:souhu.com</p><h4 id="4-filetype-关键字"><a href="#4-filetype-关键字" class="headerlink" title="(4)filetype:关键字:"></a>(4)filetype:关键字:</h4><ul><li><strong>语法含义：搜索指定类型的文件，如doc、pdf</strong></li></ul><h4 id="5-intext-关键字"><a href="#5-intext-关键字" class="headerlink" title="(5)intext:关键字:"></a>(5)intext:关键字:</h4><ul><li><p><strong>语法含义：搜索网页网页正文中出现指定关键字的页面</strong></p><h4 id="6-cache-关键字"><a href="#6-cache-关键字" class="headerlink" title="(6)cache:关键字:"></a>(6)cache:关键字:</h4></li><li><p><strong>语法含义：指定在搜索引擎缓存中搜索</strong></p></li></ul><h4 id="7-link-关键字"><a href="#7-link-关键字" class="headerlink" title="(7)link:关键字:"></a>(7)link:关键字:</h4><ul><li><strong>语法含义：返回所有链接到某个url地址的网页</strong></li></ul><h2 id="2-利用Shodan引擎搜索"><a href="#2-利用Shodan引擎搜索" class="headerlink" title="2.利用Shodan引擎搜索"></a>2.利用Shodan引擎搜索</h2><p>主要用于查找在线存在的特定设备和设备类型，如服务器、路由器、交换机、物联网设备和工控设备等，提供在全世界范围内的所有设备，范围非常广泛</p><h4 id="1-webcam-展示所有网络存在的摄像头"><a href="#1-webcam-展示所有网络存在的摄像头" class="headerlink" title="(1)webcam:展示所有网络存在的摄像头"></a>(1)webcam:展示所有网络存在的摄像头</h4><h4 id="2-cisco-显示世界上所有的cisco网络设备"><a href="#2-cisco-显示世界上所有的cisco网络设备" class="headerlink" title="(2)cisco:显示世界上所有的cisco网络设备"></a>(2)cisco:显示世界上所有的cisco网络设备</h4><h4 id="3-port-显示开放终端的远程设备"><a href="#3-port-显示开放终端的远程设备" class="headerlink" title="(3)port:显示开放终端的远程设备"></a>(3)port:显示开放终端的远程设备</h4><h4 id="4-hostname-搜索出所有和该名称相关的终端设备"><a href="#4-hostname-搜索出所有和该名称相关的终端设备" class="headerlink" title="(4)hostname:搜索出所有和该名称相关的终端设备"></a>(4)hostname:搜索出所有和该名称相关的终端设备</h4><h4 id="5-telnet-搜索安装telnet服务的终端信息"><a href="#5-telnet-搜索安装telnet服务的终端信息" class="headerlink" title="(5)telnet:搜索安装telnet服务的终端信息"></a>(5)telnet:搜索安装telnet服务的终端信息</h4><h1 id="二、利用ip地址查询"><a href="#二、利用ip地址查询" class="headerlink" title="二、利用ip地址查询"></a>二、利用ip地址查询</h1>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> 网络嗅探 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>https安全</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E/https/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%8D%8F%E8%AE%AE%E6%BC%8F%E6%B4%9E/https/</url>
      
        <content type="html"><![CDATA[<h1 id="https安全协议的原理机制"><a href="#https安全协议的原理机制" class="headerlink" title="https安全协议的原理机制"></a>https安全协议的原理机制</h1><h2 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h2><blockquote><p><strong>1.密钥组件的协商阶段</strong></p><p><strong>2.进一步进行密钥交换，建立安全通讯</strong></p><p><strong>3.再一次建立，重新协商</strong></p></blockquote><h2 id="二、过程"><a href="#二、过程" class="headerlink" title="二、过程"></a>二、过程</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line"></span><br><span class="line">client-&gt;&gt;Server:SYN</span><br><span class="line">Server-&gt;&gt;client:SYN/ACK</span><br><span class="line">client-&gt;&gt;Server:ACK</span><br><span class="line">client-&gt;&gt;Server:CLIENT HELLO</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> 协议漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 协议安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/sql/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/sql/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="mysql相关知识"><a href="#mysql相关知识" class="headerlink" title="mysql相关知识"></a>mysql相关知识</h1><p>在mysql5版本之后，mysql默认在数据库中存放一个叫information_schema里面，这个库有很多表，重点是columns、tables、schemata表记录着库的信息</p><h1 id="web-SQL-注入漏洞原理"><a href="#web-SQL-注入漏洞原理" class="headerlink" title="web SQL 注入漏洞原理"></a>web SQL 注入漏洞原理</h1><h2 id="SQL注入产生原理"><a href="#SQL注入产生原理" class="headerlink" title="SQL注入产生原理"></a>SQL注入产生原理</h2><blockquote><p>动态交互网站，实现交互利用用户输入拼接到SQL执行，输入不同导致返回结果不同。用户输入内容没有经过完美处理，而且构造SQL语句，直接将构造的SQL语句带入SQL语句中执行，导致SQL注入漏洞</p></blockquote><p><strong>条件：</strong></p><blockquote><p>参数用户可控：从前端传到后端的参数内容是用户可以控制的<br>参数带入数据库查询：传入的参数拼接到SQL语句，且传入数据库查询。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL语句拼接：select * from admin where username = &#x27;用户提交&#x27; and password = &#x27;用户提交&#x27;;</span><br></pre></td></tr></table></figure><p>使用万能密码(1’ or ‘1’=’1)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;用户提交&#x27;</span> <span class="keyword">and</span> password <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">or</span> <span class="string">&#x27;1&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>;</span><br></pre></td></tr></table></figure><p>此时便可看出存在漏洞。</p><h2 id="漏洞存在判断"><a href="#漏洞存在判断" class="headerlink" title="漏洞存在判断"></a>漏洞存在判断</h2><p>回显是指页面有数据   信息返回</p><p>无回显是指根据输入的语句   页面没有任何变化或没有数据库中的内容显示到网页中</p><h2 id="sql注释符"><a href="#sql注释符" class="headerlink" title="sql注释符"></a>sql注释符</h2><p>&#35; 单行注释</p><p>—空格   单行注释   注意为短线短线空格</p><p>/&#42;&#42;/   多行注释   至少存在两处注入</p><h1 id="web-SQL-注入漏洞原理的类型"><a href="#web-SQL-注入漏洞原理的类型" class="headerlink" title="web SQL 注入漏洞原理的类型"></a>web SQL 注入漏洞原理的类型</h1><h2 id="按攻击方式分为："><a href="#按攻击方式分为：" class="headerlink" title="按攻击方式分为："></a><strong>按攻击方式分为：</strong></h2><p>可联合查询漏洞(UNION query SQL injection)</p><p>可多语句查询注入(Stacked query SQL injection)</p><p>布尔注入(Boolean-based blind SQL injection)</p><p>报错型注入(Error-based SQL injection)</p><p>基于时间延时注入(Time-based blind SQL injection)</p><h2 id="接受参数分为："><a href="#接受参数分为：" class="headerlink" title="接受参数分为："></a><strong>接受参数分为：</strong></h2><h3 id="get注入"><a href="#get注入" class="headerlink" title="get注入"></a>get注入</h3><p>get请求参数放在url里，get请求的url传参有长度限制，中文需要url编码</p><h3 id="post注入"><a href="#post注入" class="headerlink" title="post注入"></a>post注入</h3><p>post请求参数是放在请求body中的，长度没有限制</p><h3 id="cookie参数注入"><a href="#cookie参数注入" class="headerlink" title="cookie参数注入"></a>cookie参数注入</h3><p>cookie参数放在请求头信息，提交时服务器会从请求头获取</p><h2 id="注入类型分为："><a href="#注入类型分为：" class="headerlink" title="注入类型分为："></a>注入类型分为：</h2><h3 id="int-整型"><a href="#int-整型" class="headerlink" title="int 整型"></a>int 整型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from users where id = 1;</span><br></pre></td></tr></table></figure><h3 id="string-字符型"><a href="#string-字符型" class="headerlink" title="string 字符型"></a>string 字符型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where username=&#x27;admin&#x27;;</span><br></pre></td></tr></table></figure><h3 id="like-搜索型"><a href="#like-搜索型" class="headerlink" title="like 搜索型"></a>like 搜索型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from news where title like &#x27;%标题%&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql手工注入</title>
      <link href="/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5/"/>
      <url>/2024/06/01/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/web%E6%BC%8F%E6%B4%9E/sql%E6%B3%A8%E5%85%A5/%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="手工注入常规操作"><a href="#手工注入常规操作" class="headerlink" title="手工注入常规操作"></a>手工注入常规操作</h1><blockquote><ol><li>判断是否存在注入，注入是字符型还是数字型</li><li>猜解SQL查询语句中的字段数</li><li>确定显示的字段顺序</li><li>获取当前数据库</li><li>获取数据库中的表</li><li>获取表中的字段名</li><li>查询到账户的数据</li></ol></blockquote><h1 id="数字型注入和联合注入"><a href="#数字型注入和联合注入" class="headerlink" title="数字型注入和联合注入"></a>数字型注入和联合注入</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="string">&quot;select username from user where id =&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]);</span><br><span class="line"><span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$res</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$row</span>[<span class="string">&#x27;username&#x27;</span>]);</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这段代码原本是用于根据用户输入的id，查询用户的信息。但是可以使用在语句中加入运算符的方法来测试这种注入是否存在</p><p>比如：测试<code>id=1</code>和<code>id=2-1</code>的结果是否相等</p><p>​           测试<code>id=1</code>时，查询到了admin用户</p><p>​           当输入<code>id=2-1</code>时，同样查询到admin用户</p><p>​           再测试<code>id=3-1</code>，结果为null，这样就可以验证这里存在一个sql注入</p><p>如何注入获得更多数据？这里需要使用一个sql关键字”union”,union可以将两个select语句的结果合并到一个结果集中，但是要求连个select语句具有相同的列数。</p><p>​          比如这样的输入<code>id=0 union select password from users</code>,注意中空格用url编码为<code>%20</code></p><h1 id="字符型注入和布尔盲注"><a href="#字符型注入和布尔盲注" class="headerlink" title="字符型注入和布尔盲注"></a>字符型注入和布尔盲注</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="string">&quot;select id from users where username=&#x27;&quot;</span><span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">    <span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$res</span>)</span><br><span class="line">    php&gt;</span><br></pre></td></tr></table></figure><p>这次是通过username</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
          <category> 渗透测试 </category>
          
          <category> web漏洞 </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql基础</title>
      <link href="/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/sql-basic/"/>
      <url>/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/sql-basic/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="一、什么是数据库"><a href="#一、什么是数据库" class="headerlink" title="一、什么是数据库"></a>一、什么是数据库</h2><p>安装在操作系统之上的软件，可以存储大量的数据。</p><p>作用：储存数据，管理数据。</p><h2 id="二、数据库应用"><a href="#二、数据库应用" class="headerlink" title="二、数据库应用"></a>二、数据库应用</h2><blockquote><p>所有程序和系统都会使用。(数据的记录与储存)</p></blockquote><h2 id="三、数据库类型"><a href="#三、数据库类型" class="headerlink" title="三、数据库类型"></a>三、数据库类型</h2><h3 id="1-分类"><a href="#1-分类" class="headerlink" title="1.分类"></a>1.分类</h3><blockquote><p>关系型数据库:采用关系模型(二维表)来组织数据结构的数据表【MySQL、Oracle、SQL_Server、DB2、SQLite】</p><p>非关系型:不采用关系模型组织数据结构的数据库【Redis、MongDB】</p></blockquote><h3 id="2-表的概念"><a href="#2-表的概念" class="headerlink" title="2.表的概念"></a>2.表的概念</h3><p>1.二维结构(行和列的组成)</p><p>2.字段(列)，定义该列的名字以及这一列下面能放什么类型的数据</p><p>3.行，一行代表完整的数据记录</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python正则表达式</title>
      <link href="/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/PYTHON-re/"/>
      <url>/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/python/%E5%BA%93%E4%BB%8B%E7%BB%8D/PYTHON-re/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="python正则表达式"><a href="#python正则表达式" class="headerlink" title="python正则表达式"></a>python正则表达式</h1><h2 id="常用正则表达式操作符"><a href="#常用正则表达式操作符" class="headerlink" title="常用正则表达式操作符"></a>常用正则表达式操作符</h2><div class="table-container"><table><thead><tr><th>操作符</th><th>说明</th><th>实例</th></tr></thead><tbody><tr><td>.</td><td>表示任何单个字符</td><td></td></tr><tr><td>[]</td><td>字符集，对单个字符给出取值范围</td><td>[abc]表示a、b、c，[a-z]表示a到z的单个字符</td></tr><tr><td><sup><a href="#fn_" id="reffn_"></a></sup></td><td>非字符集，对单个字符给出排除范围</td><td><sup><a href="#fn_abc" id="reffn_abc">abc</a></sup>表示非a或b或c的单个字符</td></tr><tr><td>*</td><td>前一个字符的0次或无穷次扩展</td><td>abc*表示ab、abc、abcc、abccc等</td></tr><tr><td>+</td><td>前一个字符的1次或无限次扩展</td><td>abc+表示abc、abcc、abccc等</td></tr><tr><td>?</td><td>前一个字符的0次或1次扩展</td><td>abc？表示ab、abc</td></tr><tr><td>\</td><td></td><td>左右表达式各一个</td><td>abc\</td><td>def表示abc、def</td></tr><tr><td>{m}</td><td>扩展前一个字符m次</td><td>ab{2}c表示abbc</td></tr><tr><td>{m,n}</td><td>扩展前一个字符m至n次(含n)</td><td>ab{1,2}c表示abc、abbc</td></tr><tr><td>^</td><td>匹配字符串开头</td><td>^abc表示abc且在一个字符串的开头</td></tr><tr><td>$</td><td>匹配字符串结尾</td><td>abc$表示abc且在一个字符串的结尾</td></tr><tr><td>()</td><td>分组标记，内部只能使用\</td><td>操作符</td><td>(abc)表示abc，(abcldef)表示abc、def</td></tr><tr><td>\d</td><td>数字，等价于[0-9]</td><td></td></tr><tr><td>\w</td><td>单词字符，等价于[A-Za-z0-9_]</td></tr></tbody></table></div><h2 id="经典正则表达式实例"><a href="#经典正则表达式实例" class="headerlink" title="经典正则表达式实例"></a>经典正则表达式实例</h2><p>匹配首尾空白字符的正则表达式：^s<em>|s</em>$<br>匹配Email地址的正则表达式：w+([-+.]w+)<em>@w+([-.]w+)</em>.w+([-.]w+)<em><br>匹配网址URL的正则表达式：[a-zA-z]+://[^s]</em></p><p>匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$<br>匹配国内电话号码：d{3}-d{8}|d{4}-d{7}， 匹配形式如 0511-4405222 或 021-87888822　920-209 642-964<br>匹配腾讯qq号：^[1-9][0-9]{4,10}$， 从五位数开始匹配，也就是 10000<br>匹配中国邮政编码：[1-9]d{5}(?!d)，　中国邮政编码为6位数字<br>匹配身份证：d{15}|d{18}，评注：中国的身份证为15位或18位<br>匹配ip地址：d+.d+.d+.d+，　评注：提取ip地址时有用</p><h2 id="贪婪模式与非贪婪模式"><a href="#贪婪模式与非贪婪模式" class="headerlink" title="贪婪模式与非贪婪模式"></a>贪婪模式与非贪婪模式</h2><h3 id="贪婪模式（Greedy）"><a href="#贪婪模式（Greedy）" class="headerlink" title="贪婪模式（Greedy）"></a>贪婪模式（Greedy）</h3><p>在正则中，表示次数的量词<strong>默认是贪婪的</strong>，在贪婪模式下，会尝试尽可能最大长度去匹配</p><h4 id="字符串-aaabb-中使用正则-a-的匹配过程"><a href="#字符串-aaabb-中使用正则-a-的匹配过程" class="headerlink" title="字符串 aaabb 中使用正则 a* 的匹配过程"></a>字符串 aaabb 中使用正则 a* 的匹配过程</h4><p><img src="https://image.chenjichao.site/file/16b87420bb739e2afa4d8.png" alt="img"></p><p><img src="https://image.chenjichao.site/file/4e3327a6daeb850f5ed97.png" alt="img"></p><h5 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h5><p> a* 在匹配开头的 a 时，会尽量匹配更多的 a，直到第一个 b 不满足要求为止，匹配上三个 a，后面每次匹配时都得到空字符串</p><h3 id="非贪婪匹配（Lazy）"><a href="#非贪婪匹配（Lazy）" class="headerlink" title="非贪婪匹配（Lazy）"></a>非贪婪匹配（Lazy）</h3><h5 id="如何从贪婪模式变成非贪婪模式呢"><a href="#如何从贪婪模式变成非贪婪模式呢" class="headerlink" title="如何从贪婪模式变成非贪婪模式呢"></a>如何从贪婪模式变成非贪婪模式呢</h5><p>在<strong>量词</strong>后面加上 ? ，正则就变成了 a*? </p><p><img src="https://image.chenjichao.site/file/418e62064e025fb3e1da4.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> python </category>
          
          <category> 库介绍 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python库 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql学习—数据库与数据表的创建与修改</title>
      <link href="/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_1/"/>
      <url>/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_1/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Mysql学习—数据库与数据表的创建与修改"><a href="#Mysql学习—数据库与数据表的创建与修改" class="headerlink" title="Mysql学习—数据库与数据表的创建与修改"></a>Mysql学习—数据库与数据表的创建与修改</h1><h2 id="Mysql-E-R模型"><a href="#Mysql-E-R模型" class="headerlink" title="Mysql E-R模型"></a>Mysql E-R模型</h2><h3 id="一、构成"><a href="#一、构成" class="headerlink" title="一、构成"></a>一、构成</h3><h4 id="1-实体"><a href="#1-实体" class="headerlink" title="1.实体"></a>1.实体</h4><ul><li><h5 id="区别于其他对象的“事件”或“物体”"><a href="#区别于其他对象的“事件”或“物体”" class="headerlink" title="区别于其他对象的“事件”或“物体”"></a>区别于其他对象的“事件”或“物体”</h5></li></ul><p>如购物系统的“顾客”、“商品”、“订单”等</p><h4 id="2-属性"><a href="#2-属性" class="headerlink" title="2.属性"></a>2.属性</h4><ul><li><h5 id="每个实体固有的特征"><a href="#每个实体固有的特征" class="headerlink" title="每个实体固有的特征"></a>每个实体固有的特征</h5></li></ul><p>如”顾客“的姓名、性别等</p><h4 id="3-主键"><a href="#3-主键" class="headerlink" title="3.主键"></a>3.主键</h4><ul><li><h5 id="能唯一区分这些实体的属性"><a href="#能唯一区分这些实体的属性" class="headerlink" title="能唯一区分这些实体的属性"></a>能唯一区分这些实体的属性</h5></li></ul><h4 id="4-联系"><a href="#4-联系" class="headerlink" title="4.联系"></a>4.联系</h4><ul><li><h5 id="两实体之间的关系，有1-1-1-N-M-N三种"><a href="#两实体之间的关系，有1-1-1-N-M-N三种" class="headerlink" title="两实体之间的关系，有1:1,1:N,M:N三种"></a>两实体之间的关系，有1:1,1:N,M:N三种</h5></li></ul><h2 id="Mysql数据库技术"><a href="#Mysql数据库技术" class="headerlink" title="Mysql数据库技术"></a>Mysql数据库技术</h2><h3 id="数据库-简称DB"><a href="#数据库-简称DB" class="headerlink" title="数据库(简称DB)"></a>数据库(简称DB)</h3><p>是按照一定的数据结构来组织、存储和管理数据的仓库</p><div class="table-container"><table><thead><tr><th>英文</th><th>中文</th><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>CREATE</td><td>创建</td><td>DATABASE</td><td>数据库</td></tr><tr><td>SHOW</td><td>查看</td><td>SCHEMA</td><td>数据库</td></tr><tr><td>DROP</td><td>删除</td><td>IF</td><td>假如</td></tr><tr><td>EXISTS</td><td>存在</td><td>USE</td><td>使用</td></tr></tbody></table></div><h3 id="创建数据库的语句"><a href="#创建数据库的语句" class="headerlink" title="创建数据库的语句"></a>创建数据库的语句</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE &#123;DATABASE|SCHEMA&#125;[IF NOT EXISTS] database_name;</span><br></pre></td></tr></table></figure><ul><li><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3></li></ul><p>1.IF NOT EXISTS:在创建数据库前加上一个判断，只有该数据库目前尚不存在时才执行CREATA DATABASE操作（可以不写）</p><p>2.database_name：创建数据库的名称</p><ul><li><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3></li></ul><p>1.Mysql对大小写不敏感，SQL语句中出现大小写表示Mysql的保留字，小写字母需要自己定义</p><p>2.所有SQL语句符号一定是英文状态</p><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure><h3 id="选择数据库"><a href="#选择数据库" class="headerlink" title="选择数据库"></a>选择数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE database_name;</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP DATABASE database_name;</span><br></pre></td></tr></table></figure><h2 id="Mysql数据类型"><a href="#Mysql数据类型" class="headerlink" title="Mysql数据类型"></a>Mysql数据类型</h2><h3 id="一、数值类型"><a href="#一、数值类型" class="headerlink" title="一、数值类型"></a>一、数值类型</h3><h4 id="1-整数类型"><a href="#1-整数类型" class="headerlink" title="1.整数类型"></a>1.整数类型</h4><ol><li><h5 id="微整型TINYINT，字节：1"><a href="#微整型TINYINT，字节：1" class="headerlink" title="微整型TINYINT，字节：1"></a>微整型TINYINT，字节：1</h5></li><li><h5 id="小整型SMALLINT，字节：2"><a href="#小整型SMALLINT，字节：2" class="headerlink" title="小整型SMALLINT，字节：2"></a>小整型SMALLINT，字节：2</h5></li><li><h5 id="中整型MEDIUMINT，字节：3"><a href="#中整型MEDIUMINT，字节：3" class="headerlink" title="中整型MEDIUMINT，字节：3"></a>中整型MEDIUMINT，字节：3</h5></li><li><h5 id="INT或INTEGER，字节：4"><a href="#INT或INTEGER，字节：4" class="headerlink" title="INT或INTEGER，字节：4"></a>INT或INTEGER，字节：4</h5></li><li><h5 id="大整型，字节：8"><a href="#大整型，字节：8" class="headerlink" title="大整型，字节：8"></a>大整型，字节：8</h5></li></ol><div class="table-container"><table><thead><tr><th><strong>MySQL数据类型</strong></th><th><strong>含义（有符号）</strong></th></tr></thead><tbody><tr><td>tinyint(m)</td><td>1个字节 范围(-128~127)</td></tr><tr><td>smallint(m)</td><td>2个字节 范围(-32768~32767)</td></tr><tr><td>mediumint(m)</td><td>3个字节 范围(-8388608~8388607)</td></tr><tr><td>int(m)</td><td>4个字节 范围(-2147483648~2147483647)</td></tr><tr><td>bigint(m)</td><td>8个字节 范围(+-9.22*10的18次方)</td></tr></tbody></table></div><h4 id="2-小数类型"><a href="#2-小数类型" class="headerlink" title="2.小数类型"></a>2.小数类型</h4><ol><li><h4 id="浮点数类型"><a href="#浮点数类型" class="headerlink" title="浮点数类型"></a>浮点数类型</h4><ul><li><h5 id="FLOAT，单精度浮点数，字节：4"><a href="#FLOAT，单精度浮点数，字节：4" class="headerlink" title="FLOAT，单精度浮点数，字节：4"></a>FLOAT，单精度浮点数，字节：4</h5></li><li><h5 id="DOUBLE，双精度浮点数，字节：8"><a href="#DOUBLE，双精度浮点数，字节：8" class="headerlink" title="DOUBLE，双精度浮点数，字节：8"></a>DOUBLE，双精度浮点数，字节：8</h5></li></ul><p>| <strong>MySQL数据类型</strong> | <strong>含义</strong>                                      |<br>| ————————- | ——————————————————————- |<br>| float(m,d)        | 单精度浮点型 8位精度(4字节) m总个数，d小数位  |<br>| double(m,d)       | 双精度浮点型 16位精度(8字节) m总个数，d小数位 |</p></li><li><h4 id="定点数类型"><a href="#定点数类型" class="headerlink" title="定点数类型"></a>定点数类型</h4><ul><li><h5 id="DEC-M-D-或DECIMAL-M-D"><a href="#DEC-M-D-或DECIMAL-M-D" class="headerlink" title="DEC(M,D)或DECIMAL(M,D),"></a>DEC(M,D)或DECIMAL(M,D),</h5><p>M代表最大位数</p><p>D代表最小位数</p><p>浮点型在数据库中存放的是近似值，而定点类型在数据库中存放的是精确值。  </p></li></ul></li></ol><h3 id="二、字符串类型"><a href="#二、字符串类型" class="headerlink" title="二、字符串类型"></a>二、字符串类型</h3><h4 id="1-CHAR类型"><a href="#1-CHAR类型" class="headerlink" title="1.CHAR类型"></a>1.CHAR类型</h4><p>字段编码固定，如地址，时间</p><h4 id="2-VACHAR类型"><a href="#2-VACHAR类型" class="headerlink" title="2.VACHAR类型"></a>2.VACHAR类型</h4><p>字符串长度经常变化，如身份证号等</p><h4 id="3-TEXT类型"><a href="#3-TEXT类型" class="headerlink" title="3.TEXT类型"></a>3.TEXT类型</h4><p>存储大量字符串</p><ul><li>TIINYTEXT，微文本</li><li>TEXT，文本</li><li>MEDIUMTEXT，中文本</li><li>LONGTEXT，长文本</li></ul><div class="table-container"><table><thead><tr><th><strong>MySQL数据类型</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>char(n)</td><td>固定长度，最多255个字符</td></tr><tr><td>varchar(n)</td><td>固定长度，最多65535个字符</td></tr><tr><td>tinytext</td><td>可变长度，最多255个字符</td></tr><tr><td>text</td><td>可变长度，最多65535个字符</td></tr><tr><td>mediumtext</td><td>可变长度，最多2的24次方-1个字符</td></tr><tr><td>longtext</td><td>可变长度，最多2的32次方-1个字符</td></tr></tbody></table></div><h3 id="三、日期、时间类型"><a href="#三、日期、时间类型" class="headerlink" title="三、日期、时间类型"></a>三、日期、时间类型</h3><h4 id="1-日期型"><a href="#1-日期型" class="headerlink" title="1.日期型"></a>1.日期型</h4><ol><li><h4 id="DATA-日期型"><a href="#DATA-日期型" class="headerlink" title="DATA(日期型)"></a>DATA(日期型)</h4><p>YYYY-MM-DD</p></li><li><h4 id="DATATIME-日期时间型"><a href="#DATATIME-日期时间型" class="headerlink" title="DATATIME(日期时间型)"></a>DATATIME(日期时间型)</h4><p>YYYY-MM-DD HH:MM:SS</p></li></ol><h4 id="2-时间型"><a href="#2-时间型" class="headerlink" title="2.时间型"></a>2.时间型</h4><ol><li><h4 id="TIMESTAMP-时间戳型"><a href="#TIMESTAMP-时间戳型" class="headerlink" title="TIMESTAMP(时间戳型)"></a>TIMESTAMP(时间戳型)</h4><p>YYYY-MM-DD HH:DD:SS</p></li><li><h4 id="TIME-时间型"><a href="#TIME-时间型" class="headerlink" title="TIME(时间型)"></a>TIME(时间型)</h4><p>HH:MM:SS</p></li><li><h4 id="YEAR-年"><a href="#YEAR-年" class="headerlink" title="YEAR(年)"></a>YEAR(年)</h4><p>YYYY</p></li></ol><div class="table-container"><table><thead><tr><th><strong>MySQL数据类型</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td>date</td><td>日期 ‘2008-12-2’</td></tr><tr><td>time</td><td>时间 ‘12:25:36’</td></tr><tr><td>datetime</td><td>日期时间 ‘2008-12-2 22:06:44’</td></tr><tr><td>timestamp</td><td>自动存储记录修改时间</td></tr></tbody></table></div><h3 id="四、二进制类型"><a href="#四、二进制类型" class="headerlink" title="四、二进制类型"></a>四、二进制类型</h3><h4 id="1-BINARY类型"><a href="#1-BINARY类型" class="headerlink" title="1.BINARY类型"></a>1.BINARY类型</h4><ul><li><h4 id="存储少量二进制数据"><a href="#存储少量二进制数据" class="headerlink" title="存储少量二进制数据"></a>存储少量二进制数据</h4></li></ul><ol><li>BINARY(M)，定长二进制</li><li>VARBIINARY，不定长二进制</li><li>BIN，位类型</li></ol><h4 id="2-BLOB类型"><a href="#2-BLOB类型" class="headerlink" title="2.BLOB类型"></a>2.BLOB类型</h4><ul><li><h4 id="存储大量二进制数据"><a href="#存储大量二进制数据" class="headerlink" title="存储大量二进制数据"></a>存储大量二进制数据</h4></li></ul><ol><li>TINYBLOB，微二进制</li><li>BLOB，二进制</li><li>MEDIUMBLOB，中二进制</li><li>LONGBLOB，长二进制</li></ol><h3 id="五、复合类型"><a href="#五、复合类型" class="headerlink" title="五、复合类型"></a>五、复合类型</h3><h4 id="1-SET类型"><a href="#1-SET类型" class="headerlink" title="1.SET类型"></a>1.SET类型</h4><h4 id="2-ENUM类型"><a href="#2-ENUM类型" class="headerlink" title="2.ENUM类型"></a>2.ENUM类型</h4><h2 id="数据表的创建与修改"><a href="#数据表的创建与修改" class="headerlink" title="数据表的创建与修改"></a>数据表的创建与修改</h2><h3 id="一、创建数据库"><a href="#一、创建数据库" class="headerlink" title="一、创建数据库"></a>一、创建数据库</h3><div class="table-container"><table><thead><tr><th>英文</th><th>中文</th></tr></thead><tbody><tr><td>CREATE</td><td>创建</td></tr><tr><td>SHOW</td><td>查看</td></tr><tr><td>DROP</td><td>删除</td></tr><tr><td>TABLE</td><td>数据表</td></tr><tr><td>DESCRIBE</td><td>描述</td></tr></tbody></table></div><h5 id="创建数据表语法："><a href="#创建数据表语法：" class="headerlink" title="创建数据表语法："></a>创建数据表语法：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name(</span><br><span class="line">col_name 1 data_type 1,</span><br><span class="line">    </span><br><span class="line">col_name 2 data_type 2,</span><br><span class="line">    </span><br><span class="line">……</span><br><span class="line">col_name n data_type n,</span><br><span class="line">    </span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li><h3 id="说明：-1"><a href="#说明：-1" class="headerlink" title="说明："></a>说明：</h3></li></ul><p>1.table_name为创建数据表名称</p><p>2.col_name为创建的字段名</p><p>3.data_type为要创建的字段的数据类型</p><h4 id="1、查看数据表结构"><a href="#1、查看数据表结构" class="headerlink" title="1、查看数据表结构:"></a>1、查看数据表结构:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE table_name;</span><br></pre></td></tr></table></figure><h4 id="2、查看所有数据表："><a href="#2、查看所有数据表：" class="headerlink" title="2、查看所有数据表："></a>2、查看所有数据表：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure><h4 id="3、复制表结构："><a href="#3、复制表结构：" class="headerlink" title="3、复制表结构："></a>3、复制表结构：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name1 like table_name2;</span><br></pre></td></tr></table></figure><p>含义：创建一个新表table_name1,与已知的数据表table_name2结构一致</p><ul><li><h3 id="说明：-2"><a href="#说明：-2" class="headerlink" title="说明："></a>说明：</h3></li></ul><ol><li><p>如果是复制其他数据表结构，在table_name2前加上数据库的名称</p><p>此时：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE table_name1 like db.table_name2;</span><br></pre></td></tr></table></figure></li></ol><h4 id="4、删除表"><a href="#4、删除表" class="headerlink" title="4、删除表"></a>4、删除表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE table_name;</span><br></pre></td></tr></table></figure><h3 id="二、数据表的修改"><a href="#二、数据表的修改" class="headerlink" title="二、数据表的修改"></a>二、数据表的修改</h3><p>修改表都是<strong>ALTER TABLE</strong></p><h4 id="1-修改表名"><a href="#1-修改表名" class="headerlink" title="1.修改表名"></a>1.修改表名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE old_name_name RENAME new_table_name;</span><br></pre></td></tr></table></figure><h4 id="2-添加字段"><a href="#2-添加字段" class="headerlink" title="2.添加字段"></a>2.添加字段</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name ADD col_name1_ data_type [First|AFTER colname_2]</span><br></pre></td></tr></table></figure><ul><li><p>添加字段默认放在最后，如果想放在表中第一个，加first</p></li><li><p>放在某一个字段后面，则用after</p></li></ul><h4 id="3-删除字段"><a href="#3-删除字段" class="headerlink" title="3.删除字段"></a>3.删除字段</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name DROP col_name;</span><br></pre></td></tr></table></figure><h4 id="4-修改字段"><a href="#4-修改字段" class="headerlink" title="4.修改字段"></a>4.修改字段</h4><h5 id="1-修改字段的数据类型"><a href="#1-修改字段的数据类型" class="headerlink" title="1.修改字段的数据类型"></a>1.修改字段的数据类型</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY col_name1 data_type;</span><br></pre></td></tr></table></figure><h5 id="2-修改字段名称"><a href="#2-修改字段名称" class="headerlink" title="2.修改字段名称"></a>2.修改字段名称</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name CHANGE old_col_name new_data_type;</span><br></pre></td></tr></table></figure><h5 id="3-调整字段顺序"><a href="#3-调整字段顺序" class="headerlink" title="3.调整字段顺序"></a>3.调整字段顺序</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE table_name MODIFY col_name1 data_type FIRST|AFTER colname_2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql多表查询</title>
      <link href="/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_6/"/>
      <url>/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_6/</url>
      
        <content type="html"><![CDATA[<h1 id="多表关系"><a href="#多表关系" class="headerlink" title="多表关系"></a>多表关系</h1><p><strong>概述</strong></p><p>项目开发中，在进行的数据库表结构设计时，会根据业务需求及业务模块之间的关系，分析并设计表结构，由于业务之间相互关联，所以各个表之间也存在的各种联系，基本分为三种：</p><blockquote><p>一对多(多对一)</p><p>多对多</p><p>一对一</p></blockquote><h2 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h2><p>在多的一方建立外键，指向一的一方的主键</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/image-20241001212259801.png" alt="image-20241001212259801"></p><h2 id="多对多"><a href="#多对多" class="headerlink" title="多对多"></a>多对多</h2><p>建立中间表，中间至少包括两个外键，分别关联双方主键</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/1460000044692997" alt="img"></p><h2 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h2><p>多用于单表拆分</p><p><img src="http://204.44.86.240:5244/d/夸克云盘/图片/1460000044692998" alt="img"></p><h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><p>相关数据表如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+</span><br><span class="line">|     id| content|</span><br><span class="line">+-------+--------+</span><br><span class="line">|      1| aa   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      2| bb   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      3| cc   |</span><br><span class="line">+-------+--------+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+</span><br><span class="line">|     id| content|</span><br><span class="line">+-------+--------+</span><br><span class="line">|      1| aa   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      2| cc   |</span><br><span class="line">+-------+--------+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+</span><br><span class="line">|     id| content|</span><br><span class="line">+-------+--------+</span><br><span class="line">|      1| cc   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      2| dd   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      3| ee   |</span><br><span class="line">+-------+--------+</span><br></pre></td></tr></table></figure><h2 id="笛卡尔积"><a href="#笛卡尔积" class="headerlink" title="笛卡尔积"></a>笛卡尔积</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * from A,B;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|     id| content|     id| content|</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1| aa    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      2| bb   |      1| aa    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      2| bb   |      1| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      3| cc   |      1| aa    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      3| cc   |      1| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br></pre></td></tr></table></figure><h2 id="内连接（inner-Join-或-Join）"><a href="#内连接（inner-Join-或-Join）" class="headerlink" title="内连接（inner Join 或 Join）"></a>内连接（inner Join 或 Join）</h2><p>内连接：仅显示两个表中匹配行，即两表中都有才显示。</p><p>SQL如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT A.id AS AID, </span><br><span class="line">A.content AS AContent, </span><br><span class="line">B.id AS BID,</span><br><span class="line">B.content AS BContent</span><br><span class="line"></span><br><span class="line">FROM A INNER JOIN B ON (A.id = B.id)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|    AID|AContent|    BID|BContent|</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1|  aa   |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      2| bb   |      2| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT A.id AS AID, </span><br><span class="line">A.content AS AContent,</span><br><span class="line">B.id AS BID,</span><br><span class="line">B.content AS BContent,</span><br><span class="line">C.id AS CID,</span><br><span class="line">C.content AS CContent</span><br><span class="line"></span><br><span class="line">FROM A INNER JOIN B ON (A.id = B.id) INNER JOIN C ON (A.id = C.id)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-------+--------+-------+--------+</span><br><span class="line">|    AID|AContent|    BID|BContent|    CID|CContent|</span><br><span class="line">+-------+--------+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1| aa    |      1| cc |</span><br><span class="line">+-------+--------+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1| aa    |      1| dd |</span><br><span class="line">+-------+--------+-------+--------+-------+--------+</span><br></pre></td></tr></table></figure><h2 id="外连接（outer-Join）"><a href="#外连接（outer-Join）" class="headerlink" title="外连接（outer Join）"></a>外连接（outer Join）</h2><h3 id="左外连接（left-outer-Join-或-left-Join）"><a href="#左外连接（left-outer-Join-或-left-Join）" class="headerlink" title="左外连接（left outer Join 或 left Join）"></a>左外连接（left outer Join 或 left Join）</h3><p>​        左外连接：左表有就显示，不论右表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT A.id AS AID, </span><br><span class="line">A.content AS AContent,</span><br><span class="line">B.id AS BID, </span><br><span class="line">B.content AS BContent</span><br><span class="line">FROM A LEFT JOIN B ON (A.id = B.id)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|    AID|AContent|    BID|BContent|</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1|  aa   |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      2| bb   |      2| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      3| cc   | &lt;null&gt;| &lt;null&gt;|</span><br><span class="line">+-------+--------+-------+--------+</span><br></pre></td></tr></table></figure><h3 id="右外连接（right-outer-Join-或-right-Join）"><a href="#右外连接（right-outer-Join-或-right-Join）" class="headerlink" title="右外连接（right outer Join 或 right Join）"></a>右外连接（right outer Join 或 right Join）</h3><p>​        右外连接：右表有就显示，不论左表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT A.id AS AID, </span><br><span class="line">A.content AS AContent,</span><br><span class="line">B.id AS BID,</span><br><span class="line">B.content AS BContent </span><br><span class="line">FROM A RIGHT JOIN B ON (A.id = B.id)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|    AID|AContent|    BID|BContent|</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1|  aa   |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      2| bb   |      2| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br></pre></td></tr></table></figure><h3 id="全外连接（full-outer-Join-或-full-Join）"><a href="#全外连接（full-outer-Join-或-full-Join）" class="headerlink" title="全外连接（full outer Join 或 full Join）"></a>全外连接（full outer Join 或 full Join）</h3><p>​        全外连接：左表/右表，有一个有就显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">    A.id AS AID,</span><br><span class="line">    A.content AS AContent,</span><br><span class="line">    B.id AS BID,</span><br><span class="line">    B.content AS BContent</span><br><span class="line">    FROM A FULL JOIN B ON (A.id = B.id);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|    AID|AContent|    BID|BContent|</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      1| aa   |      1|  aa   |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      2| bb   |      2| cc    |</span><br><span class="line">+-------+--------+-------+--------+</span><br><span class="line">|      3| cc   | &lt;null&gt;| &lt;null&gt;|</span><br><span class="line">+-------+--------+-------+--------+</span><br></pre></td></tr></table></figure><h2 id="结果集链接-（union-和-union-all）"><a href="#结果集链接-（union-和-union-all）" class="headerlink" title="结果集链接 （union 和 union all）"></a>结果集链接 （union 和 union all）</h2><p><strong>Union</strong>：对两个结果集进行并集操作，不包括重复行，同时进行默认规则的排序；<br>UNION在进行表链接后会筛选掉重复的记录，所以在表链接后会对所产生的结果集进行排序运算，删除重复的记录再返回结果。<br>实际大部分应用中是不会产生重复的记录，最常见的是过程表与历史表UNION</p><p><strong>Union All</strong>：对两个结果集进行并集操作，包括重复行，不进行排序；<br>如果返回的两个结果集中有重复的数据，那么返回的结果集就会包含重复的数据了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM A UNION SELECT * from B</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">+-------+--------+</span><br><span class="line">|     id| content|</span><br><span class="line">+-------+--------+</span><br><span class="line">|      1| aa   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      2| bb   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      3| cc   |</span><br><span class="line">+-------+--------+</span><br><span class="line">|      2| cc   |</span><br><span class="line">+-------+--------+</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql单表查询</title>
      <link href="/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_4/"/>
      <url>/2024/05/29/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_4/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h1 id="MySQL单表查询"><a href="#MySQL单表查询" class="headerlink" title="MySQL单表查询"></a>MySQL单表查询</h1><h2 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h2><h3 id="1-直接查询"><a href="#1-直接查询" class="headerlink" title="1.直接查询"></a>1.直接查询</h3><h4 id="全部查询"><a href="#全部查询" class="headerlink" title="全部查询"></a>全部查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段 from 表名</span><br></pre></td></tr></table></figure><p>最简单的一种查询方式，可查看多个字段或整张表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select name,age from yunwei;</span><br><span class="line">+--------+-----+</span><br><span class="line">| name   | age |</span><br><span class="line">+--------+-----+</span><br><span class="line">| 张三   |  20 |</span><br><span class="line">| 张四   |  21 |</span><br><span class="line">| 张莉   |  22 |</span><br><span class="line">| 张五   |  23 |</span><br><span class="line">| 张六   |  24 |</span><br><span class="line">| 张丽   |  25 |</span><br><span class="line">+--------+-----+</span><br></pre></td></tr></table></figure><p>意思是查询yunwei表中name和age部分的全部信息</p><h4 id="不重复查询"><a href="#不重复查询" class="headerlink" title="不重复查询"></a>不重复查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT distinct 字段列表 from 表名;</span><br></pre></td></tr></table></figure><h3 id="2-条件查询"><a href="#2-条件查询" class="headerlink" title="2.条件查询"></a>2.条件查询</h3><h4 id="直接查询"><a href="#直接查询" class="headerlink" title="直接查询"></a>直接查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段 from 表名 where 条件</span><br></pre></td></tr></table></figure><p>根据条件，查询指定条件的字段。<br><strong>如：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from caiwu where age=20;</span><br><span class="line">+----+--------+-----+-----+</span><br><span class="line">| id | name   | age | sex |</span><br><span class="line">+----+--------+-----+-----+</span><br><span class="line">|  5 | 李四   |  20 | man |</span><br><span class="line">+----+--------+-----+-----+</span><br></pre></td></tr></table></figure><p>意思是查询caiwu表中年龄为20的人</p><h5 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h5><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center">&gt;</td><td>大于</td></tr><tr><td style="text-align:center">＜</td><td>小于</td></tr><tr><td style="text-align:center">=</td><td>等于</td></tr><tr><td style="text-align:center">!=</td><td>不等于</td></tr><tr><td style="text-align:center">＜＞</td><td>不等于</td></tr><tr><td style="text-align:center">＞=</td><td>大于等于</td></tr><tr><td style="text-align:center">＜=</td><td>小于等于</td></tr></tbody></table></div><p>通过逻辑运算符可以将条件限制在一个范围内。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from caiwu where id!=1;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from caiwu where id!=1;</span><br><span class="line">+----+--------+-----+-------+</span><br><span class="line">| id | name   | age | sex   |</span><br><span class="line">+----+--------+-----+-------+</span><br><span class="line">|  2 | 李莉   |  23 | woman |</span><br><span class="line">|  3 | 李二   |  22 | man   |</span><br><span class="line">|  4 | 李三   |  21 | man   |</span><br><span class="line">|  5 | 李四   |  20 | man   |</span><br><span class="line">|  6 | 李丽   |  19 | woman |</span><br><span class="line">+----+--------+-----+-------+</span><br></pre></td></tr></table></figure><p>搜索id≠1条件下caiwu表中的所有项</p><h5 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h5><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">and 或 &amp;&amp;</td><td style="text-align:center">与，同时满足多个选项</td></tr><tr><td style="text-align:center">or 或 \</td><td style="text-align:center">\</td><td></td><td>或，满足一个选项即可</td></tr><tr><td style="text-align:center">not 或 ！</td><td style="text-align:center">否，不满足条件</td></tr></tbody></table></div><p><strong>注意：</strong>在 MySQL 中，and 的优先级要高于 or。</p><h5 id="in-与-not-in运算符"><a href="#in-与-not-in运算符" class="headerlink" title="in 与 not in运算符"></a>in 与 not in运算符</h5><div class="table-container"><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">in</td><td style="text-align:center">在一个条件列表中</td></tr><tr><td style="text-align:center">not in</td><td style="text-align:center">不在一个条件列表中</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 查询与‘张三’在同一个系学习的学生学号、姓名、性别、所在系</span><br><span class="line">SELECT Sno, Sname, Ssex, Sdept FROM Student</span><br><span class="line"></span><br><span class="line">WHERE Sdept IN (</span><br><span class="line"></span><br><span class="line">SELECT Sdept FROM Student WHERE Sname = &#x27;张三&#x27;</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段 from 表名 where 字段 like 匹配项;</span><br></pre></td></tr></table></figure><p>通过输入具体的数据，来对记录进行查询</p><p><strong>注：</strong></p><blockquote><p>_    匹配单个字符；</p><p>%   匹配任意字符，不管前后。</p></blockquote><p><strong>如：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from caiwu where name like &#x27;%三&#x27;;</span><br><span class="line">+----+--------+-----+-----+</span><br><span class="line">| id | name   | age | sex |</span><br><span class="line">+----+--------+-----+-----+</span><br><span class="line">|  4 | 李三   |  21 | man |</span><br><span class="line">+----+--------+-----+-----+</span><br></pre></td></tr></table></figure><h2 id="聚合查询"><a href="#聚合查询" class="headerlink" title="聚合查询"></a>聚合查询</h2><p><strong>聚合函数</strong></p><div class="table-container"><table><thead><tr><th>函数</th><th>功能</th></tr></thead><tbody><tr><td>count</td><td>统计条数</td></tr><tr><td>max</td><td>最大值</td></tr><tr><td>min</td><td>最小值</td></tr><tr><td>avg</td><td>平均值</td></tr><tr><td>sum</td><td>求和</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 聚合函数(字段列表) from 表名;</span><br></pre></td></tr></table></figure><p><strong>如：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from emp;</span><br><span class="line">select count(id) from emp;</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><blockquote><p>null值不参加所有聚合函数</p></blockquote><h2 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h2><p><code>ORDER BY</code>作用是选择字段并对该字段进行排序</p><div class="table-container"><table><thead><tr><th>asc</th><th>升序(默认)</th></tr></thead><tbody><tr><td>desc</td><td>降序</td></tr></tbody></table></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM Websites ORDER BY 字段1 排序方试一，字段二 排序方试二;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><blockquote><p>如果字段1排序一致才会采用字段2排序</p></blockquote><p><img src="https://alist.chenjichao.site/d/夸克云盘/图片/orderby1.jpg" alt="img"></p><p>该排序可以判断列表行数</p><h2 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h2><p><code>group by</code>将某一字段相同元素聚合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段列表 from 表名 [where 条件] group by 列名 [HAVING 分组后过滤条件];</span><br></pre></td></tr></table></figure><p><strong>having与where区别</strong></p><blockquote><ol><li>执行时机不同：where是分组之前进行过滤，不满足where条件，不参与分组；而having是分组之后再对结果过滤</li></ol><p>对分组后的数据进行再次过滤，必须在group by后面</p><ol><li>判断条件不同：where不能对聚合函数进行判断，而having可以</li></ol></blockquote><h3 id="使用limit限制查询结果"><a href="#使用limit限制查询结果" class="headerlink" title="使用limit限制查询结果"></a>使用limit限制查询结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列名 FROM 表名 limit 起始索引,查询记录数;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT employee_id, first_name, last_name FROM employees ORDER BY first_name;</span><br><span class="line"></span><br><span class="line">+-------------+------------+-----------+</span><br><span class="line">| employee_id | first_name | last_name |</span><br><span class="line">+-------------+------------+-----------+</span><br><span class="line">|         103 | Alexander  | Lee       |</span><br><span class="line">|         115 | Alexander  | Su        |</span><br><span class="line">|         114 | Avg        | Su        |</span><br><span class="line">|         193 | Britney    | Zhao      |</span><br><span class="line">|         104 | Bruce      | Wong      |</span><br><span class="line">... ...</span><br><span class="line">|         100 | Steven     | Lee       |</span><br><span class="line">|         203 | Susan      | Zhou      |</span><br><span class="line">|         106 | Valli      | Chen      |</span><br><span class="line">|         206 | William    | Wu        |</span><br><span class="line">+-------------+------------+-----------+</span><br><span class="line">40 rows in set</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><blockquote><ol><li><p>起始索引从0开始，起始索引=(查询页码-1)*每页显示记录数。</p></li><li><p>分页查询是数据库的方言，不同数据库有不同的实现，MySQL中是LIMIT。</p></li><li><p>如果查询的是第一页数据，起始索引可以忽略，直接简写为limit 10。</p></li></ol></blockquote><p>如果要只返回前<code>5</code>行，请使用<code>LIMIT</code>子句，如以下语句。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT  employee_id, first_name, last_name FROM employees ORDER BY first_name LIMIT 5;</span><br><span class="line"></span><br><span class="line">+-------------+------------+-----------+</span><br><span class="line">| employee_id | first_name | last_name |</span><br><span class="line">+-------------+------------+-----------+</span><br><span class="line">|         115 | Alexander  | Su        |</span><br><span class="line">|         103 | Alexander  | Lee       |</span><br><span class="line">|         114 | Avg        | Su        |</span><br><span class="line">|         193 | Britney    | Zhao      |</span><br><span class="line">|         104 | Bruce      | Wong      |</span><br><span class="line">+-------------+------------+-----------+</span><br><span class="line">5 rows in set</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql学习—dos参数及设置</title>
      <link href="/2024/05/28/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_0/"/>
      <url>/2024/05/28/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/sql/mysql/mysql-learning_0/</url>
      
        <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>命令</th><th>简写</th><th>具体含义</th></tr></thead><tbody><tr><td>?</td><td>\?</td><td>显示帮助信息</td></tr><tr><td>clear</td><td>\c</td><td>取消之前的输入，重新开始输入</td></tr><tr><td>connect</td><td>\r</td><td>连接服务器，可选参数为数据库和主机</td></tr><tr><td>delimiter</td><td>\d</td><td>设置语句分隔符</td></tr><tr><td>ego</td><td>\G</td><td>发送命令到MySQL服务器，并显示结果</td></tr><tr><td>exit</td><td>\q</td><td>退出MySQL</td></tr><tr><td>go</td><td>\g</td><td>发送命令到MySQL服务器</td></tr><tr><td>help</td><td>\h</td><td>显示帮助信息</td></tr><tr><td>notee</td><td>\t</td><td>不写入输出文件</td></tr><tr><td>print</td><td>\p</td><td>输出当前命令</td></tr><tr><td>prompt</td><td>\R</td><td>改变MySQL提示信息</td></tr><tr><td>quit</td><td>\q</td><td>退出MySQL</td></tr><tr><td>rehash</td><td>#</td><td>重建完成哈希散列</td></tr><tr><td>source</td><td>\.</td><td>执行一个MySQL脚本，以一个文件名为参数</td></tr><tr><td>status</td><td>\s</td><td>从服务器中获取MySQL的状态信息</td></tr><tr><td>tee</td><td>\T</td><td>设置输出文件，并将信息添加到所有给定的输出文件</td></tr><tr><td>use</td><td>\u</td><td>切换数据库</td></tr><tr><td>charset</td><td>\C</td><td>切换到另一个字符集</td></tr><tr><td>warnings</td><td>\W</td><td>每一个语句后显示警告</td></tr><tr><td>nowarning</td><td>\w</td><td>每一个语句之后不显示警告</td></tr></tbody></table></div>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
          <category> sql </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
